{
    "classes": [
        {
            "methods": [
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "iterator_range<const unsigned char *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<const unsigned char *>",
                    "signature": "llvm::iterator_range<const unsigned char *> (llvm::StringRef::*)() const",
                    "name": "bytes",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const char *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const char *",
                    "signature": "const char * (llvm::StringRef::*)() const",
                    "name": "data",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (llvm::StringRef::*)() const",
                    "name": "empty",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "size_t () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)() const",
                    "name": "size",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "char () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "char",
                    "signature": "char (llvm::StringRef::*)() const",
                    "name": "front",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "char () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "char",
                    "signature": "char (llvm::StringRef::*)() const",
                    "name": "back",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "RHS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "equals",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "RHS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "equals_lower",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "RHS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "int (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "int",
                    "signature": "int (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "compare",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "RHS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "int (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "int",
                    "signature": "int (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "compare_lower",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "RHS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "int (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "int",
                    "signature": "int (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "compare_numeric",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Other"
                        ],
                        [
                            "bool",
                            "AllowReplacements"
                        ],
                        [
                            "unsigned int",
                            "MaxEditDistance"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (llvm::StringRef, bool, unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (llvm::StringRef::*)(llvm::StringRef, bool, unsigned int) const",
                    "name": "edit_distance",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "std::string () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (llvm::StringRef::*)() const",
                    "name": "str",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Prefix"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "startswith",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Prefix"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "startswith_lower",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "C"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (char, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(char, unsigned long) const",
                    "name": "find",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "C"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (char, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(char, unsigned long) const",
                    "name": "find_lower",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::function_ref<bool (char)>",
                            "F"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (function_ref<bool (char)>, size_t) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::function_ref<bool (char)>, unsigned long) const",
                    "name": "find_if",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::function_ref<bool (char)>",
                            "F"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (function_ref<bool (char)>, size_t) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::function_ref<bool (char)>, unsigned long) const",
                    "name": "find_if_not",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Str"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (llvm::StringRef, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef, unsigned long) const",
                    "name": "find",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Str"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (llvm::StringRef, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef, unsigned long) const",
                    "name": "find_lower",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "C"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (char, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(char, unsigned long) const",
                    "name": "rfind",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "C"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (char, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(char, unsigned long) const",
                    "name": "rfind_lower",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Str"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "rfind",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Str"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "rfind_lower",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "C"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (char, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(char, unsigned long) const",
                    "name": "find_first_of",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Chars"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (llvm::StringRef, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef, unsigned long) const",
                    "name": "find_first_of",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "C"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (char, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(char, unsigned long) const",
                    "name": "find_first_not_of",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Chars"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (llvm::StringRef, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef, unsigned long) const",
                    "name": "find_first_not_of",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "C"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (char, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(char, unsigned long) const",
                    "name": "find_last_of",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Chars"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (llvm::StringRef, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef, unsigned long) const",
                    "name": "find_last_of",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "C"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (char, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(char, unsigned long) const",
                    "name": "find_last_not_of",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Chars"
                        ],
                        [
                            "unsigned long",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (llvm::StringRef, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef, unsigned long) const",
                    "name": "find_last_not_of",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Other"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "contains",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "C"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (char) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (llvm::StringRef::*)(char) const",
                    "name": "contains",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Other"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "contains_lower",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "C"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (char) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (llvm::StringRef::*)(char) const",
                    "name": "contains_lower",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "C"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (char) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(char) const",
                    "name": "count",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Str"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "size_t (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "count",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "unsigned int",
                            "Radix"
                        ],
                        [
                            "llvm::APInt &",
                            "Result"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (unsigned int, llvm::APInt &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (llvm::StringRef::*)(unsigned int, llvm::APInt &) const",
                    "name": "getAsInteger",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "double &",
                            "Result"
                        ],
                        [
                            "bool",
                            "AllowInexact"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (double &, bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (llvm::StringRef::*)(double &, bool) const",
                    "name": "getAsDouble",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "std::string () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (llvm::StringRef::*)() const",
                    "name": "lower",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "std::string () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (llvm::StringRef::*)() const",
                    "name": "upper",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "unsigned long",
                            "Start"
                        ],
                        [
                            "unsigned long",
                            "N"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (size_t, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(unsigned long, unsigned long) const",
                    "name": "substr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "unsigned long",
                            "N"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(unsigned long) const",
                    "name": "take_front",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "unsigned long",
                            "N"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(unsigned long) const",
                    "name": "take_back",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::function_ref<bool (char)>",
                            "F"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (function_ref<bool (char)>) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(llvm::function_ref<bool (char)>) const",
                    "name": "take_while",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::function_ref<bool (char)>",
                            "F"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (function_ref<bool (char)>) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(llvm::function_ref<bool (char)>) const",
                    "name": "take_until",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "unsigned long",
                            "N"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(unsigned long) const",
                    "name": "drop_front",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "unsigned long",
                            "N"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(unsigned long) const",
                    "name": "drop_back",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::function_ref<bool (char)>",
                            "F"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (function_ref<bool (char)>) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(llvm::function_ref<bool (char)>) const",
                    "name": "drop_while",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::function_ref<bool (char)>",
                            "F"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (function_ref<bool (char)>) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(llvm::function_ref<bool (char)>) const",
                    "name": "drop_until",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Prefix"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (llvm::StringRef)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (llvm::StringRef::*)(llvm::StringRef)",
                    "name": "consume_front",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Suffix"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (llvm::StringRef)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (llvm::StringRef::*)(llvm::StringRef)",
                    "name": "consume_back",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "unsigned long",
                            "Start"
                        ],
                        [
                            "unsigned long",
                            "End"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (size_t, size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(unsigned long, unsigned long) const",
                    "name": "slice",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "Separator"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::pair<StringRef, StringRef> (char) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::pair<llvm::StringRef, llvm::StringRef>",
                    "signature": "std::pair<llvm::StringRef, llvm::StringRef> (llvm::StringRef::*)(char) const",
                    "name": "split",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Separator"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::pair<StringRef, StringRef> (llvm::StringRef) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::pair<llvm::StringRef, llvm::StringRef>",
                    "signature": "std::pair<llvm::StringRef, llvm::StringRef> (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "split",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Separator"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::pair<StringRef, StringRef> (llvm::StringRef) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::pair<llvm::StringRef, llvm::StringRef>",
                    "signature": "std::pair<llvm::StringRef, llvm::StringRef> (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "rsplit",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::SmallVectorImpl<llvm::StringRef> &",
                            "A"
                        ],
                        [
                            "llvm::StringRef",
                            "Separator"
                        ],
                        [
                            "int",
                            "MaxSplit"
                        ],
                        [
                            "bool",
                            "KeepEmpty"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (SmallVectorImpl<llvm::StringRef> &, llvm::StringRef, int, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (llvm::StringRef::*)(llvm::SmallVectorImpl<llvm::StringRef> &, llvm::StringRef, int, bool) const",
                    "name": "split",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::SmallVectorImpl<llvm::StringRef> &",
                            "A"
                        ],
                        [
                            "char",
                            "Separator"
                        ],
                        [
                            "int",
                            "MaxSplit"
                        ],
                        [
                            "bool",
                            "KeepEmpty"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (SmallVectorImpl<llvm::StringRef> &, char, int, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (llvm::StringRef::*)(llvm::SmallVectorImpl<llvm::StringRef> &, char, int, bool) const",
                    "name": "split",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "Separator"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::pair<StringRef, StringRef> (char) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::pair<llvm::StringRef, llvm::StringRef>",
                    "signature": "std::pair<llvm::StringRef, llvm::StringRef> (llvm::StringRef::*)(char) const",
                    "name": "rsplit",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "Char"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (char) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(char) const",
                    "name": "ltrim",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Chars"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "ltrim",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "Char"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (char) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(char) const",
                    "name": "rtrim",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Chars"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "rtrim",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "char",
                            "Char"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (char) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(char) const",
                    "name": "trim",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "llvm::StringRef",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Chars"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (llvm::StringRef::*)(llvm::StringRef) const",
                    "name": "trim",
                    "is_overload": true
                }
            ],
            "typename": "llvm::StringRef",
            "is_disabled": true,
            "supers": [],
            "name": "StringRef",
            "node": false
        },
        {
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::SourceLocation",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceLocation::*)() const",
                    "name": "isFileID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceLocation",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceLocation::*)() const",
                    "name": "isMacroID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceLocation",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceLocation::*)() const",
                    "name": "isValid",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceLocation",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceLocation::*)() const",
                    "name": "isInvalid",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceLocation",
                    "args": [
                        [
                            "int",
                            "Offset"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceLocation::*)(int) const",
                    "name": "getLocWithOffset",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceLocation",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceLocation::*)() const",
                    "name": "getRawEncoding",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceLocation",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void *",
                    "signature": "void * (clang::SourceLocation::*)() const",
                    "name": "getPtrEncoding",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceLocation",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::SourceManager &",
                            "SM"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, const clang::SourceManager &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::SourceLocation::*)(llvm::raw_ostream &, const clang::SourceManager &) const",
                    "name": "print",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceLocation",
                    "args": [
                        [
                            "const clang::SourceManager &",
                            "SM"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::string (const clang::SourceManager &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::SourceLocation::*)(const clang::SourceManager &) const",
                    "name": "printToString",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceLocation",
                    "args": [
                        [
                            "const clang::SourceManager &",
                            "SM"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::SourceManager &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::SourceLocation::*)(const clang::SourceManager &) const",
                    "name": "dump",
                    "is_overload": false
                }
            ],
            "typename": "clang::SourceLocation",
            "is_disabled": false,
            "supers": [],
            "name": "SourceLocation",
            "node": false
        },
        {
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::SourceRange",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceRange::*)() const",
                    "name": "getBegin",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceRange",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceRange::*)() const",
                    "name": "getEnd",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceRange",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "b"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceRange::*)(clang::SourceLocation)",
                    "name": "setBegin",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceRange",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "e"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceRange::*)(clang::SourceLocation)",
                    "name": "setEnd",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceRange",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceRange::*)() const",
                    "name": "isValid",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceRange",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceRange::*)() const",
                    "name": "isInvalid",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceRange",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::SourceManager &",
                            "SM"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, const clang::SourceManager &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::SourceRange::*)(llvm::raw_ostream &, const clang::SourceManager &) const",
                    "name": "print",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceRange",
                    "args": [
                        [
                            "const clang::SourceManager &",
                            "SM"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::string (const clang::SourceManager &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::SourceRange::*)(const clang::SourceManager &) const",
                    "name": "printToString",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceRange",
                    "args": [
                        [
                            "const clang::SourceManager &",
                            "SM"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::SourceManager &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::SourceRange::*)(const clang::SourceManager &) const",
                    "name": "dump",
                    "is_overload": false
                }
            ],
            "typename": "clang::SourceRange",
            "is_disabled": false,
            "supers": [],
            "name": "SourceRange",
            "node": false
        },
        {
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::Qualifiers::*)() const",
                    "name": "getAsOpaqueValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasConst",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasOnlyConst",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)()",
                    "name": "removeConst",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)()",
                    "name": "addConst",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasVolatile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasOnlyVolatile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)()",
                    "name": "removeVolatile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)()",
                    "name": "addVolatile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasRestrict",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasOnlyRestrict",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)()",
                    "name": "removeRestrict",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)()",
                    "name": "addRestrict",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasCVRQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::Qualifiers::*)() const",
                    "name": "getCVRQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::Qualifiers::*)() const",
                    "name": "getCVRUQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "unsigned int",
                            "mask"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "name": "setCVRQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "unsigned int",
                            "mask"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "name": "removeCVRQualifiers",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)()",
                    "name": "removeCVRQualifiers",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "unsigned int",
                            "mask"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "name": "addCVRQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "unsigned int",
                            "mask"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "name": "addCVRUQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasUnaligned",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "bool",
                            "flag"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(bool)",
                    "name": "setUnaligned",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)()",
                    "name": "removeUnaligned",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)()",
                    "name": "addUnaligned",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasObjCGCAttr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Qualifiers::GC () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Qualifiers::GC",
                    "signature": "clang::Qualifiers::GC (clang::Qualifiers::*)() const",
                    "name": "getObjCGCAttr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "clang::Qualifiers::GC",
                            "type"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Qualifiers::GC)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(clang::Qualifiers::GC)",
                    "name": "setObjCGCAttr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)()",
                    "name": "removeObjCGCAttr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "clang::Qualifiers::GC",
                            "type"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Qualifiers::GC)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(clang::Qualifiers::GC)",
                    "name": "addObjCGCAttr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Qualifiers () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Qualifiers",
                    "signature": "clang::Qualifiers (clang::Qualifiers::*)() const",
                    "name": "withoutObjCGCAttr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Qualifiers () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Qualifiers",
                    "signature": "clang::Qualifiers (clang::Qualifiers::*)() const",
                    "name": "withoutObjCLifetime",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasObjCLifetime",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Qualifiers::ObjCLifetime () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Qualifiers::ObjCLifetime",
                    "signature": "clang::Qualifiers::ObjCLifetime (clang::Qualifiers::*)() const",
                    "name": "getObjCLifetime",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "clang::Qualifiers::ObjCLifetime",
                            "type"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Qualifiers::ObjCLifetime)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(clang::Qualifiers::ObjCLifetime)",
                    "name": "setObjCLifetime",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)()",
                    "name": "removeObjCLifetime",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "clang::Qualifiers::ObjCLifetime",
                            "type"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Qualifiers::ObjCLifetime)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(clang::Qualifiers::ObjCLifetime)",
                    "name": "addObjCLifetime",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasNonTrivialObjCLifetime",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasStrongOrWeakObjCLifetime",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasAddressSpace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LangAS () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::LangAS",
                    "signature": "clang::LangAS (clang::Qualifiers::*)() const",
                    "name": "getAddressSpace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasTargetSpecificAddressSpace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::Qualifiers::*)() const",
                    "name": "getAddressSpaceAttributePrintValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "clang::LangAS",
                            "space"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::LangAS)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(clang::LangAS)",
                    "name": "setAddressSpace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)()",
                    "name": "removeAddressSpace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "clang::LangAS",
                            "space"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::LangAS)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(clang::LangAS)",
                    "name": "addAddressSpace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasFastQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::Qualifiers::*)() const",
                    "name": "getFastQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "unsigned int",
                            "mask"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "name": "setFastQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "unsigned int",
                            "mask"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "name": "removeFastQualifiers",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)()",
                    "name": "removeFastQualifiers",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "unsigned int",
                            "mask"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(unsigned int)",
                    "name": "addFastQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasNonFastQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Qualifiers () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Qualifiers",
                    "signature": "clang::Qualifiers (clang::Qualifiers::*)() const",
                    "name": "getNonFastQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "hasQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)() const",
                    "name": "empty",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "clang::Qualifiers",
                            "Q"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Qualifiers)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(clang::Qualifiers)",
                    "name": "addQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "clang::Qualifiers",
                            "Q"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Qualifiers)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(clang::Qualifiers)",
                    "name": "removeQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "clang::Qualifiers",
                            "qs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Qualifiers)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(clang::Qualifiers)",
                    "name": "addConsistentQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "clang::Qualifiers",
                            "other"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::Qualifiers) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)(clang::Qualifiers) const",
                    "name": "isAddressSpaceSupersetOf",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "clang::Qualifiers",
                            "other"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::Qualifiers) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)(clang::Qualifiers) const",
                    "name": "compatiblyIncludes",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "clang::Qualifiers",
                            "other"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::Qualifiers) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)(clang::Qualifiers) const",
                    "name": "compatiblyIncludesObjCLifetime",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "clang::Qualifiers",
                            "Other"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::Qualifiers) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)(clang::Qualifiers) const",
                    "name": "isStrictSupersetOf",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "std::string () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::Qualifiers::*)() const",
                    "name": "getAsString",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::string (const clang::PrintingPolicy &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::Qualifiers::*)(const clang::PrintingPolicy &) const",
                    "name": "getAsString",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::PrintingPolicy &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Qualifiers::*)(const clang::PrintingPolicy &) const",
                    "name": "isEmptyWhenPrinted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "bool",
                            "appendSpaceIfNonEmpty"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "name": "print",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Qualifiers",
                    "args": [
                        [
                            "llvm::FoldingSetNodeID &",
                            "ID"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::FoldingSetNodeID &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Qualifiers::*)(llvm::FoldingSetNodeID &) const",
                    "name": "Profile",
                    "is_overload": false
                }
            ],
            "typename": "clang::Qualifiers",
            "is_disabled": false,
            "supers": [],
            "name": "Qualifiers",
            "node": false
        },
        {
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::QualType::*)() const",
                    "name": "getLocalFastQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "unsigned int",
                            "Quals"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)(unsigned int)",
                    "name": "setLocalFastQualifiers",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Type *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::Type *",
                    "signature": "const clang::Type * (clang::QualType::*)() const",
                    "name": "getTypePtr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Type *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::Type *",
                    "signature": "const clang::Type * (clang::QualType::*)() const",
                    "name": "getTypePtrOrNull",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::IdentifierInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::IdentifierInfo *",
                    "signature": "const clang::IdentifierInfo * (clang::QualType::*)() const",
                    "name": "getBaseTypeIdentifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SplitQualType () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SplitQualType",
                    "signature": "clang::SplitQualType (clang::QualType::*)() const",
                    "name": "split",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void *",
                    "signature": "void * (clang::QualType::*)() const",
                    "name": "getAsOpaquePtr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "isCanonical",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "isCanonicalAsParam",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "isNull",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "isLocalConstQualified",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "isConstQualified",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "isLocalRestrictQualified",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "isRestrictQualified",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "isLocalVolatileQualified",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "isVolatileQualified",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "hasLocalQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "hasQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "hasLocalNonFastQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Qualifiers () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Qualifiers",
                    "signature": "clang::Qualifiers (clang::QualType::*)() const",
                    "name": "getLocalQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Qualifiers () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Qualifiers",
                    "signature": "clang::Qualifiers (clang::QualType::*)() const",
                    "name": "getQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::QualType::*)() const",
                    "name": "getLocalCVRQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::QualType::*)() const",
                    "name": "getCVRQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)(const clang::ASTContext &) const",
                    "name": "isConstant",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)(const clang::ASTContext &) const",
                    "name": "isPODType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)(const clang::ASTContext &) const",
                    "name": "isCXX98PODType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)(const clang::ASTContext &) const",
                    "name": "isCXX11PODType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)(const clang::ASTContext &) const",
                    "name": "isTrivialType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)(const clang::ASTContext &) const",
                    "name": "isTriviallyCopyableType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "mayBeDynamicClass",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "mayBeNotDynamicClass",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)()",
                    "name": "addConst",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "name": "withConst",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)()",
                    "name": "addVolatile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "name": "withVolatile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)()",
                    "name": "addRestrict",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "name": "withRestrict",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "unsigned int",
                            "CVR"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(unsigned int) const",
                    "name": "withCVRQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "unsigned int",
                            "TQs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)(unsigned int)",
                    "name": "addFastQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)()",
                    "name": "removeLocalConst",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)()",
                    "name": "removeLocalVolatile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)()",
                    "name": "removeLocalRestrict",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "unsigned int",
                            "Mask"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)(unsigned int)",
                    "name": "removeLocalCVRQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)()",
                    "name": "removeLocalFastQualifiers",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "unsigned int",
                            "Mask"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)(unsigned int)",
                    "name": "removeLocalFastQualifiers",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "unsigned int",
                            "TQs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(unsigned int) const",
                    "name": "withFastQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "unsigned int",
                            "TQs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(unsigned int) const",
                    "name": "withExactLocalFastQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "name": "withoutLocalFastQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "name": "getCanonicalType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "name": "getLocalUnqualifiedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "name": "getUnqualifiedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SplitQualType () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SplitQualType",
                    "signature": "clang::SplitQualType (clang::QualType::*)() const",
                    "name": "getSplitUnqualifiedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "clang::QualType",
                            "Other"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)(clang::QualType) const",
                    "name": "isMoreQualifiedThan",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "clang::QualType",
                            "Other"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)(clang::QualType) const",
                    "name": "isAtLeastAsQualifiedAs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "name": "getNonReferenceType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(const clang::ASTContext &) const",
                    "name": "getNonLValueExprType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(const clang::ASTContext &) const",
                    "name": "getDesugaredType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SplitQualType () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SplitQualType",
                    "signature": "clang::SplitQualType (clang::QualType::*)() const",
                    "name": "getSplitDesugaredType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(const clang::ASTContext &) const",
                    "name": "getSingleStepDesugaredType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "name": "IgnoreParens",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "std::string () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::QualType::*)() const",
                    "name": "getAsString",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::string (const clang::PrintingPolicy &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::QualType::*)(const clang::PrintingPolicy &) const",
                    "name": "getAsString",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "const llvm::Twine &",
                            "PlaceHolder"
                        ],
                        [
                            "unsigned int",
                            "Indentation"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &, const llvm::Twine &, unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)(llvm::raw_ostream &, const clang::PrintingPolicy &, const llvm::Twine &, unsigned int) const",
                    "name": "print",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "std::__cxx11::basic_string<char> &",
                            "Str"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (std::string &, const clang::PrintingPolicy &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)(std::__cxx11::basic_string<char> &, const clang::PrintingPolicy &) const",
                    "name": "getAsStringInternal",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "const llvm::Twine &",
                            "PlaceHolder"
                        ],
                        [
                            "unsigned int",
                            "Indentation"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType::StreamedQualTypeHelper (const clang::PrintingPolicy &, const llvm::Twine &, unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType::StreamedQualTypeHelper",
                    "signature": "clang::QualType::StreamedQualTypeHelper (clang::QualType::*)(const clang::PrintingPolicy &, const llvm::Twine &, unsigned int) const",
                    "name": "stream",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "const char *",
                            "s"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const char *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)(const char *) const",
                    "name": "dump",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)() const",
                    "name": "dump",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)(llvm::raw_ostream &) const",
                    "name": "dump",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "llvm::FoldingSetNodeID &",
                            "ID"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::FoldingSetNodeID &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::QualType::*)(llvm::FoldingSetNodeID &) const",
                    "name": "Profile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LangAS () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::LangAS",
                    "signature": "clang::LangAS (clang::QualType::*)() const",
                    "name": "getAddressSpace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "Qualifiers::GC () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Qualifiers::GC",
                    "signature": "clang::Qualifiers::GC (clang::QualType::*)() const",
                    "name": "getObjCGCAttr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "isObjCGCWeak",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "isObjCGCStrong",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "Qualifiers::ObjCLifetime () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Qualifiers::ObjCLifetime",
                    "signature": "clang::Qualifiers::ObjCLifetime (clang::QualType::*)() const",
                    "name": "getObjCLifetime",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "hasNonTrivialObjCLifetime",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "hasStrongOrWeakObjCLifetime",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)(const clang::ASTContext &) const",
                    "name": "isNonWeakInMRRWithObjCWeak",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType::PrimitiveDefaultInitializeKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType::PrimitiveDefaultInitializeKind",
                    "signature": "clang::QualType::PrimitiveDefaultInitializeKind (clang::QualType::*)() const",
                    "name": "isNonTrivialToPrimitiveDefaultInitialize",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType::PrimitiveCopyKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType::PrimitiveCopyKind",
                    "signature": "clang::QualType::PrimitiveCopyKind (clang::QualType::*)() const",
                    "name": "isNonTrivialToPrimitiveCopy",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType::PrimitiveCopyKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType::PrimitiveCopyKind",
                    "signature": "clang::QualType::PrimitiveCopyKind (clang::QualType::*)() const",
                    "name": "isNonTrivialToPrimitiveDestructiveMove",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType::DestructionKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType::DestructionKind",
                    "signature": "clang::QualType::DestructionKind (clang::QualType::*)() const",
                    "name": "isDestructedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::QualType::*)() const",
                    "name": "isCForbiddenLValueType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "ctx"
                        ],
                        [
                            "llvm::ArrayRef<clang::QualType>",
                            "typeArgs"
                        ],
                        [
                            "clang::ObjCSubstitutionContext",
                            "context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::ASTContext &, ArrayRef<clang::QualType>, clang::ObjCSubstitutionContext) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(clang::ASTContext &, llvm::ArrayRef<clang::QualType>, clang::ObjCSubstitutionContext) const",
                    "name": "substObjCTypeArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "clang::QualType",
                            "objectType"
                        ],
                        [
                            "const clang::DeclContext *",
                            "dc"
                        ],
                        [
                            "clang::ObjCSubstitutionContext",
                            "context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, const clang::DeclContext *, clang::ObjCSubstitutionContext) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(clang::QualType, const clang::DeclContext *, clang::ObjCSubstitutionContext) const",
                    "name": "substObjCMemberType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)(const clang::ASTContext &) const",
                    "name": "stripObjCKindOfType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::QualType",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::QualType::*)() const",
                    "name": "getAtomicUnqualifiedType",
                    "is_overload": false
                }
            ],
            "typename": "clang::QualType",
            "is_disabled": false,
            "supers": [],
            "name": "QualType",
            "node": false
        },
        {
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Type::TypeClass () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Type::TypeClass",
                    "signature": "clang::Type::TypeClass (clang::Type::*)() const",
                    "name": "getTypeClass",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isFromAST",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "containsUnexpandedParameterPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isCanonicalUnqualified",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::Type::*)() const",
                    "name": "getLocallyUnqualifiedSingleStepDesugaredType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isIncompleteOrObjectType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjectType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)(const clang::ASTContext &) const",
                    "name": "isLiteralType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isStandardLayoutType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isBuiltinType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [
                        [
                            "unsigned int",
                            "K"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)(unsigned int) const",
                    "name": "isSpecificBuiltinType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isPlaceholderType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::BuiltinType *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::BuiltinType *",
                    "signature": "const clang::BuiltinType * (clang::Type::*)() const",
                    "name": "getAsPlaceholderType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [
                        [
                            "unsigned int",
                            "K"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)(unsigned int) const",
                    "name": "isSpecificPlaceholderType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isNonOverloadPlaceholderType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isIntegerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isEnumeralType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isScopedEnumeralType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isBooleanType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isCharType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isWideCharType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isChar8Type",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isChar16Type",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isChar32Type",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isAnyCharacterType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)(const clang::ASTContext &) const",
                    "name": "isIntegralType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isIntegralOrEnumerationType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isIntegralOrUnscopedEnumerationType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isRealFloatingType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isComplexType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isAnyComplexType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isFloatingType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isHalfType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isFloat16Type",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isFloat128Type",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isRealType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isArithmeticType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isVoidType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isScalarType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isAggregateType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isFundamentalType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isCompoundType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isFunctionType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isFunctionNoProtoType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isFunctionProtoType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isPointerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isAnyPointerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isBlockPointerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isVoidPointerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isReferenceType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isLValueReferenceType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isRValueReferenceType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isFunctionPointerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isMemberPointerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isMemberFunctionPointerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isMemberDataPointerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isArrayType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isConstantArrayType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isIncompleteArrayType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isVariableArrayType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isDependentSizedArrayType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isRecordType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isClassType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isStructureType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCBoxableRecordType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isInterfaceType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isStructureOrClassType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isUnionType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isComplexIntegerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isVectorType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isExtVectorType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isDependentAddressSpaceType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCObjectPointerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCRetainableType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCLifetimeType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCIndirectLifetimeType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCNSObjectType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCIndependentClassType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCObjectType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCQualifiedInterfaceType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCQualifiedIdType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCQualifiedClassType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCObjectOrInterfaceType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCIdType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCInertUnsafeUnretainedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCClassType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCClassOrClassKindOfType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)(clang::ASTContext &) const",
                    "name": "isBlockCompatibleObjCPointerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCSelType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCBuiltinType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCARCBridgableType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isCARCBridgableType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isTemplateTypeParmType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isNullPtrType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isAlignValT",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isStdByteType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isAtomicType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage1dROType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage1dArrayROType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage1dBufferROType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dROType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dArrayROType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dDepthROType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dArrayDepthROType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dMSAAROType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dArrayMSAAROType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dMSAADepthROType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dArrayMSAADepthROType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage3dROType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage1dWOType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage1dArrayWOType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage1dBufferWOType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dWOType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dArrayWOType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dDepthWOType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dArrayDepthWOType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dMSAAWOType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dArrayMSAAWOType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dMSAADepthWOType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dArrayMSAADepthWOType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage3dWOType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage1dRWType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage1dArrayRWType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage1dBufferRWType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dRWType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dArrayRWType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dDepthRWType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dArrayDepthRWType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dMSAARWType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dArrayMSAARWType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dMSAADepthRWType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage2dArrayMSAADepthRWType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLImage3dRWType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isImageType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isSamplerT",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isEventT",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isClkEventT",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isQueueT",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isReserveIDT",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLIntelSubgroupAVCMcePayloadType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLIntelSubgroupAVCImePayloadType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLIntelSubgroupAVCRefPayloadType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLIntelSubgroupAVCSicPayloadType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLIntelSubgroupAVCMceResultType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLIntelSubgroupAVCImeResultType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLIntelSubgroupAVCRefResultType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLIntelSubgroupAVCSicResultType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLIntelSubgroupAVCImeResultSingleRefStreamoutType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLIntelSubgroupAVCImeResultDualRefStreamoutType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLIntelSubgroupAVCImeSingleRefStreaminType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLIntelSubgroupAVCImeDualRefStreaminType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLIntelSubgroupAVCType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOCLExtOpaqueType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isPipeType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOpenCLSpecificType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isObjCARCImplicitlyUnretainedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "Qualifiers::ObjCLifetime () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Qualifiers::ObjCLifetime",
                    "signature": "clang::Qualifiers::ObjCLifetime (clang::Type::*)() const",
                    "name": "getObjCARCImplicitLifetime",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Type::ScalarTypeKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Type::ScalarTypeKind",
                    "signature": "clang::Type::ScalarTypeKind (clang::Type::*)() const",
                    "name": "getScalarTypeKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isDependentType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isInstantiationDependentType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isUndeducedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isVariablyModifiedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "hasSizedVLAType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "hasUnnamedOrLocalType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isOverloadableType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isElaboratedTypeSpecifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "canDecayToPointerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "hasPointerRepresentation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "hasObjCPointerRepresentation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "hasIntegerRepresentation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "hasSignedIntegerRepresentation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "hasUnsignedIntegerRepresentation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "hasFloatingRepresentation",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::RecordType *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::RecordType *",
                    "signature": "const clang::RecordType * (clang::Type::*)() const",
                    "name": "getAsStructureType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::RecordType *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::RecordType *",
                    "signature": "const clang::RecordType * (clang::Type::*)() const",
                    "name": "getAsUnionType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ComplexType *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ComplexType *",
                    "signature": "const clang::ComplexType * (clang::Type::*)() const",
                    "name": "getAsComplexIntegerType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ObjCObjectType *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ObjCObjectType *",
                    "signature": "const clang::ObjCObjectType * (clang::Type::*)() const",
                    "name": "getAsObjCInterfaceType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ObjCObjectPointerType *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ObjCObjectPointerType *",
                    "signature": "const clang::ObjCObjectPointerType * (clang::Type::*)() const",
                    "name": "getAsObjCInterfacePointerType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ObjCObjectPointerType *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ObjCObjectPointerType *",
                    "signature": "const clang::ObjCObjectPointerType * (clang::Type::*)() const",
                    "name": "getAsObjCQualifiedIdType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ObjCObjectPointerType *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ObjCObjectPointerType *",
                    "signature": "const clang::ObjCObjectPointerType * (clang::Type::*)() const",
                    "name": "getAsObjCQualifiedClassType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ObjCObjectType *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ObjCObjectType *",
                    "signature": "const clang::ObjCObjectType * (clang::Type::*)() const",
                    "name": "getAsObjCQualifiedInterfaceType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXRecordDecl *",
                    "signature": "clang::CXXRecordDecl * (clang::Type::*)() const",
                    "name": "getAsCXXRecordDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::RecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::RecordDecl *",
                    "signature": "clang::RecordDecl * (clang::Type::*)() const",
                    "name": "getAsRecordDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TagDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TagDecl *",
                    "signature": "clang::TagDecl * (clang::Type::*)() const",
                    "name": "getAsTagDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::CXXRecordDecl *",
                    "signature": "const clang::CXXRecordDecl * (clang::Type::*)() const",
                    "name": "getPointeeCXXRecordDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeducedType *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeducedType *",
                    "signature": "clang::DeducedType * (clang::Type::*)() const",
                    "name": "getContainedDeducedType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::AutoType *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::AutoType *",
                    "signature": "clang::AutoType * (clang::Type::*)() const",
                    "name": "getContainedAutoType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "hasAutoForTrailingReturnType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ArrayType *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ArrayType *",
                    "signature": "const clang::ArrayType * (clang::Type::*)() const",
                    "name": "getAsArrayTypeUnsafe",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ArrayType *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ArrayType *",
                    "signature": "const clang::ArrayType * (clang::Type::*)() const",
                    "name": "castAsArrayTypeUnsafe",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [
                        [
                            "clang::attr::Kind",
                            "AK"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (attr::Kind) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)(clang::attr::Kind) const",
                    "name": "hasAttr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Type *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::Type *",
                    "signature": "const clang::Type * (clang::Type::*)() const",
                    "name": "getBaseElementTypeUnsafe",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Type *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::Type *",
                    "signature": "const clang::Type * (clang::Type::*)() const",
                    "name": "getArrayElementTypeNoTypeQual",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Type *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::Type *",
                    "signature": "const clang::Type * (clang::Type::*)() const",
                    "name": "getPointeeOrArrayElementType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::Type::*)() const",
                    "name": "getPointeeType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Type *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::Type *",
                    "signature": "const clang::Type * (clang::Type::*)() const",
                    "name": "getUnqualifiedDesugaredType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isPromotableIntegerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isSignedIntegerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isUnsignedIntegerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isSignedIntegerOrEnumerationType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isUnsignedIntegerOrEnumerationType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isFixedPointType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isSaturatedFixedPointType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isUnsaturatedFixedPointType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isSignedFixedPointType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isUnsignedFixedPointType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isConstantSizeType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isSpecifierType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Linkage () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Linkage",
                    "signature": "clang::Linkage (clang::Type::*)() const",
                    "name": "getLinkage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Visibility () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Visibility",
                    "signature": "clang::Visibility (clang::Type::*)() const",
                    "name": "getVisibility",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isVisibilityExplicit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LinkageInfo () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::LinkageInfo",
                    "signature": "clang::LinkageInfo (clang::Type::*)() const",
                    "name": "getLinkageAndVisibility",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "isLinkageValid",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "Optional<clang::NullabilityKind> (const clang::ASTContext &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::Optional<clang::NullabilityKind>",
                    "signature": "llvm::Optional<clang::NullabilityKind> (clang::Type::*)(const clang::ASTContext &) const",
                    "name": "getNullability",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [
                        [
                            "bool",
                            "ResultIfUnknown"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)(bool) const",
                    "name": "canHaveNullability",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [
                        [
                            "const clang::DeclContext *",
                            "dc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "Optional<ArrayRef<clang::QualType> > (const clang::DeclContext *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::Optional<llvm::ArrayRef<clang::QualType> >",
                    "signature": "llvm::Optional<llvm::ArrayRef<clang::QualType> > (clang::Type::*)(const clang::DeclContext *) const",
                    "name": "getObjCSubstitutions",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Type::*)() const",
                    "name": "acceptsObjCTypeParams",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const char *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const char *",
                    "signature": "const char * (clang::Type::*)() const",
                    "name": "getTypeClassName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::Type::*)() const",
                    "name": "getCanonicalTypeInternal",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CanQualType () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CanQual<clang::Type>",
                    "signature": "clang::CanQual<clang::Type> (clang::Type::*)() const",
                    "name": "getCanonicalTypeUnqualified",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Type::*)() const",
                    "name": "dump",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Type",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Type::*)(llvm::raw_ostream &) const",
                    "name": "dump",
                    "is_overload": true
                }
            ],
            "typename": "clang::Type",
            "is_disabled": false,
            "supers": [],
            "name": "Type",
            "node": false
        },
        {
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclarationName::*)() const",
                    "name": "isEmpty",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclarationName::*)() const",
                    "name": "isIdentifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclarationName::*)() const",
                    "name": "isObjCZeroArgSelector",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclarationName::*)() const",
                    "name": "isObjCOneArgSelector",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationName::NameKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclarationName::NameKind",
                    "signature": "clang::DeclarationName::NameKind (clang::DeclarationName::*)() const",
                    "name": "getNameKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclarationName::*)() const",
                    "name": "isDependentName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "std::string () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::DeclarationName::*)() const",
                    "name": "getAsString",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::IdentifierInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::IdentifierInfo *",
                    "signature": "clang::IdentifierInfo * (clang::DeclarationName::*)() const",
                    "name": "getAsIdentifierInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "uintptr_t () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (clang::DeclarationName::*)() const",
                    "name": "getAsOpaqueInteger",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void *",
                    "signature": "void * (clang::DeclarationName::*)() const",
                    "name": "getAsOpaquePtr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::DeclarationName::*)() const",
                    "name": "getCXXNameType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateDecl *",
                    "signature": "clang::TemplateDecl * (clang::DeclarationName::*)() const",
                    "name": "getCXXDeductionGuideTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::OverloadedOperatorKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::OverloadedOperatorKind",
                    "signature": "clang::OverloadedOperatorKind (clang::DeclarationName::*)() const",
                    "name": "getCXXOverloadedOperator",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::IdentifierInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::IdentifierInfo *",
                    "signature": "clang::IdentifierInfo * (clang::DeclarationName::*)() const",
                    "name": "getCXXLiteralIdentifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Selector () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Selector",
                    "signature": "clang::Selector (clang::DeclarationName::*)() const",
                    "name": "getObjCSelector",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void *",
                    "signature": "void * (clang::DeclarationName::*)() const",
                    "name": "getFETokenInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [
                        [
                            "void *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (void *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclarationName::*)(void *)",
                    "name": "setFETokenInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclarationName::*)(llvm::raw_ostream &, const clang::PrintingPolicy &)",
                    "name": "print",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationName",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::DeclarationName::*)() const",
                    "name": "dump",
                    "is_overload": false
                }
            ],
            "typename": "clang::DeclarationName",
            "is_disabled": false,
            "supers": [],
            "name": "DeclarationName",
            "node": false
        },
        {
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationName () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclarationName",
                    "signature": "clang::DeclarationName (clang::DeclarationNameInfo::*)() const",
                    "name": "getName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [
                        [
                            "clang::DeclarationName",
                            "N"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::DeclarationName)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclarationNameInfo::*)(clang::DeclarationName)",
                    "name": "setName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclarationNameInfo::*)() const",
                    "name": "getLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclarationNameInfo::*)(clang::SourceLocation)",
                    "name": "setLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclarationNameLoc &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::DeclarationNameLoc &",
                    "signature": "const clang::DeclarationNameLoc & (clang::DeclarationNameInfo::*)() const",
                    "name": "getInfo",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationNameLoc &()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::DeclarationNameLoc &",
                    "signature": "clang::DeclarationNameLoc & (clang::DeclarationNameInfo::*)()",
                    "name": "getInfo",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [
                        [
                            "const clang::DeclarationNameLoc &",
                            "Info"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::DeclarationNameLoc &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclarationNameInfo::*)(const clang::DeclarationNameLoc &)",
                    "name": "setInfo",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclarationNameInfo",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::DeclarationNameInfo::*)() const",
                    "name": "getNamedTypeInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "TInfo"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclarationNameInfo::*)(clang::TypeSourceInfo *)",
                    "name": "setNamedTypeInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::DeclarationNameInfo::*)() const",
                    "name": "getCXXOperatorNameRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [
                        [
                            "clang::SourceRange",
                            "R"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceRange)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclarationNameInfo::*)(clang::SourceRange)",
                    "name": "setCXXOperatorNameRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclarationNameInfo::*)() const",
                    "name": "getCXXLiteralOperatorNameLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclarationNameInfo::*)(clang::SourceLocation)",
                    "name": "setCXXLiteralOperatorNameLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclarationNameInfo::*)() const",
                    "name": "isInstantiationDependent",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclarationNameInfo::*)() const",
                    "name": "containsUnexpandedParameterPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "std::string () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::DeclarationNameInfo::*)() const",
                    "name": "getAsString",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::DeclarationNameInfo::*)(llvm::raw_ostream &) const",
                    "name": "printName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclarationNameInfo::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::DeclarationNameInfo::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclarationNameInfo",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclarationNameInfo::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                }
            ],
            "typename": "clang::DeclarationNameInfo",
            "is_disabled": false,
            "supers": [],
            "name": "DeclarationNameInfo",
            "node": false
        },
        {
            "typename": "clang::Decl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::Decl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::Decl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::Decl::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::Decl::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::Decl::*)() const",
                    "name": "getLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(clang::SourceLocation)",
                    "name": "setLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl::Kind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Decl::Kind",
                    "signature": "clang::Decl::Kind (clang::Decl::*)() const",
                    "name": "getKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const char *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const char *",
                    "signature": "const char * (clang::Decl::*)() const",
                    "name": "getDeclKindName",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Decl *",
                    "signature": "clang::Decl * (clang::Decl::*)()",
                    "name": "getNextDeclInContext",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Decl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Decl *",
                    "signature": "const clang::Decl * (clang::Decl::*)() const",
                    "name": "getNextDeclInContext",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclContext *",
                    "signature": "clang::DeclContext * (clang::Decl::*)()",
                    "name": "getDeclContext",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclContext *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclContext *",
                    "signature": "const clang::DeclContext * (clang::Decl::*)() const",
                    "name": "getDeclContext",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Decl *",
                    "signature": "clang::Decl * (clang::Decl::*)()",
                    "name": "getNonClosureContext",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Decl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Decl *",
                    "signature": "const clang::Decl * (clang::Decl::*)() const",
                    "name": "getNonClosureContext",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TranslationUnitDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::TranslationUnitDecl *",
                    "signature": "clang::TranslationUnitDecl * (clang::Decl::*)()",
                    "name": "getTranslationUnitDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TranslationUnitDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::TranslationUnitDecl *",
                    "signature": "const clang::TranslationUnitDecl * (clang::Decl::*)() const",
                    "name": "getTranslationUnitDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isInAnonymousNamespace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isInStdNamespace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ASTContext &() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ASTContext &",
                    "signature": "clang::ASTContext & (clang::Decl::*)() const",
                    "name": "getASTContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "clang::AccessSpecifier",
                            "AS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::AccessSpecifier)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(clang::AccessSpecifier)",
                    "name": "setAccess",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::AccessSpecifier () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::AccessSpecifier",
                    "signature": "clang::AccessSpecifier (clang::Decl::*)() const",
                    "name": "getAccess",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::AccessSpecifier () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::AccessSpecifier",
                    "signature": "clang::AccessSpecifier (clang::Decl::*)() const",
                    "name": "getAccessUnsafe",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "hasAttrs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "const llvm::SmallVector<clang::Attr *, 4> &",
                            "Attrs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::AttrVec &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(const llvm::SmallVector<clang::Attr *, 4> &)",
                    "name": "setAttrs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::AttrVec &()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::SmallVector<clang::Attr *, 4> &",
                    "signature": "llvm::SmallVector<clang::Attr *, 4> & (clang::Decl::*)()",
                    "name": "getAttrs",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::AttrVec &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const llvm::SmallVector<clang::Attr *, 4> &",
                    "signature": "const llvm::SmallVector<clang::Attr *, 4> & (clang::Decl::*)() const",
                    "name": "getAttrs",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)()",
                    "name": "dropAttrs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "clang::Attr *",
                            "A"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Attr *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(clang::Attr *)",
                    "name": "addAttr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl::attr_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::Attr *const *>",
                    "signature": "llvm::iterator_range<clang::Attr *const *> (clang::Decl::*)() const",
                    "name": "attrs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::Decl::*)() const",
                    "name": "getMaxAlignment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "bool",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(bool)",
                    "name": "setInvalidDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isInvalidDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isImplicit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "bool",
                            "I"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(bool)",
                    "name": "setImplicit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "bool",
                            "CheckUsedAttr"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)(bool) const",
                    "name": "isUsed",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)()",
                    "name": "setIsUsed",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "C"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ASTContext &)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(clang::ASTContext &)",
                    "name": "markUsed",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isReferenced",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isThisDeclarationReferenced",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "bool",
                            "R"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(bool)",
                    "name": "setReferenced",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isTopLevelDeclInObjCContainer",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(bool)",
                    "name": "setTopLevelDeclInObjCContainer",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ExternalSourceSymbolAttr *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ExternalSourceSymbolAttr *",
                    "signature": "clang::ExternalSourceSymbolAttr * (clang::Decl::*)() const",
                    "name": "getExternalSourceSymbolAttr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isModulePrivate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isExported",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "hasDefiningAttr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Attr *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::Attr *",
                    "signature": "const clang::Attr * (clang::Decl::*)() const",
                    "name": "getDefiningAttr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "std::__cxx11::basic_string<char> *",
                            "Message"
                        ],
                        [
                            "llvm::VersionTuple",
                            "EnclosingVersion"
                        ],
                        [
                            "llvm::StringRef *",
                            "RealizedPlatform"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::AvailabilityResult (std::string *, llvm::VersionTuple, llvm::StringRef *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::AvailabilityResult",
                    "signature": "clang::AvailabilityResult (clang::Decl::*)(std::__cxx11::basic_string<char> *, llvm::VersionTuple, llvm::StringRef *) const",
                    "name": "getAvailability",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::VersionTuple () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::VersionTuple",
                    "signature": "llvm::VersionTuple (clang::Decl::*)() const",
                    "name": "getVersionIntroduced",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "std::__cxx11::basic_string<char> *",
                            "Message"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (std::string *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)(std::__cxx11::basic_string<char> *) const",
                    "name": "isDeprecated",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "std::__cxx11::basic_string<char> *",
                            "Message"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (std::string *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)(std::__cxx11::basic_string<char> *) const",
                    "name": "isUnavailable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isWeakImported",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "bool &",
                            "IsDefinition"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (bool &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)(bool &) const",
                    "name": "canBeWeakImported",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isFromASTFile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::Decl::*)() const",
                    "name": "getGlobalID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::Decl::*)() const",
                    "name": "getOwningModuleID",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Module *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Module *",
                    "signature": "clang::Module * (clang::Decl::*)() const",
                    "name": "getImportedOwningModule",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Module *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Module *",
                    "signature": "clang::Module * (clang::Decl::*)() const",
                    "name": "getLocalOwningModule",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "clang::Module *",
                            "M"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Module *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(clang::Module *)",
                    "name": "setLocalOwningModule",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "hasOwningModule",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Module *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Module *",
                    "signature": "clang::Module * (clang::Decl::*)() const",
                    "name": "getOwningModule",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "bool",
                            "IgnoreLinkage"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Module *(bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Module *",
                    "signature": "clang::Module * (clang::Decl::*)(bool) const",
                    "name": "getOwningModuleForLinkage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isHidden",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)()",
                    "name": "setVisibleDespiteOwningModule",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl::ModuleOwnershipKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Decl::ModuleOwnershipKind",
                    "signature": "clang::Decl::ModuleOwnershipKind (clang::Decl::*)() const",
                    "name": "getModuleOwnershipKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "clang::Decl::ModuleOwnershipKind",
                            "MOK"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Decl::ModuleOwnershipKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(clang::Decl::ModuleOwnershipKind)",
                    "name": "setModuleOwnershipKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::Decl::*)() const",
                    "name": "getIdentifierNamespace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "unsigned int",
                            "NS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)(unsigned int) const",
                    "name": "isInIdentifierNamespace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "hasTagIdentifierNamespace",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclContext *",
                    "signature": "clang::DeclContext * (clang::Decl::*)()",
                    "name": "getLexicalDeclContext",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclContext *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclContext *",
                    "signature": "const clang::DeclContext * (clang::Decl::*)() const",
                    "name": "getLexicalDeclContext",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isOutOfLine",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "clang::DeclContext *",
                            "DC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::DeclContext *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(clang::DeclContext *)",
                    "name": "setDeclContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "clang::DeclContext *",
                            "DC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::DeclContext *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(clang::DeclContext *)",
                    "name": "setLexicalDeclContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isTemplated",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isDefinedOutsideFunctionOrMethod",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isLexicallyWithinFunctionOrMethod",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclContext *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclContext *",
                    "signature": "const clang::DeclContext * (clang::Decl::*)() const",
                    "name": "getParentFunctionOrMethod",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclContext *",
                    "signature": "clang::DeclContext * (clang::Decl::*)()",
                    "name": "getParentFunctionOrMethod",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Decl *",
                    "signature": "clang::Decl * (clang::Decl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Decl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Decl *",
                    "signature": "const clang::Decl * (clang::Decl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isCanonicalDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl::redecl_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::Decl::redecl_iterator>",
                    "signature": "llvm::iterator_range<clang::Decl::redecl_iterator> (clang::Decl::*)() const",
                    "name": "redecls",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Decl *",
                    "signature": "clang::Decl * (clang::Decl::*)()",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Decl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Decl *",
                    "signature": "const clang::Decl * (clang::Decl::*)() const",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isFirstDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Decl *",
                    "signature": "clang::Decl * (clang::Decl::*)()",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Decl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Decl *",
                    "signature": "const clang::Decl * (clang::Decl::*)() const",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::Decl::*)() const",
                    "name": "getBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "hasBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::Decl::*)() const",
                    "name": "getBodyRBrace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isTemplateParameter",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isTemplateParameterPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isParameterPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isTemplateDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)() const",
                    "name": "isFunctionOrFunctionTemplate",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateDecl *",
                    "signature": "clang::TemplateDecl * (clang::Decl::*)() const",
                    "name": "getDescribedTemplate",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::FunctionDecl *",
                    "signature": "clang::FunctionDecl * (clang::Decl::*)()",
                    "name": "getAsFunction",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FunctionDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::FunctionDecl *",
                    "signature": "const clang::FunctionDecl * (clang::Decl::*)() const",
                    "name": "getAsFunction",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)()",
                    "name": "setLocalExternDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::Decl::*)()",
                    "name": "isLocalExternDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "bool",
                            "PerformFriendInjection"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(bool)",
                    "name": "setObjectOfFriendDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl::FriendObjectKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Decl::FriendObjectKind",
                    "signature": "clang::Decl::FriendObjectKind (clang::Decl::*)() const",
                    "name": "getFriendObjectKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)()",
                    "name": "setNonMemberOperator",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "Out"
                        ],
                        [
                            "unsigned int",
                            "Indentation"
                        ],
                        [
                            "bool",
                            "PrintInstantiation"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, unsigned int, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(llvm::raw_ostream &, unsigned int, bool) const",
                    "name": "print",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "Out"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "unsigned int",
                            "Indentation"
                        ],
                        [
                            "bool",
                            "PrintInstantiation"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &, unsigned int, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(llvm::raw_ostream &, const clang::PrintingPolicy &, unsigned int, bool) const",
                    "name": "print",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)() const",
                    "name": "dump",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)() const",
                    "name": "dumpColor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "Out"
                        ],
                        [
                            "bool",
                            "Deserialize"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Decl::*)(llvm::raw_ostream &, bool) const",
                    "name": "dump",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Decl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "int64_t () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "long",
                    "signature": "long (clang::Decl::*)() const",
                    "name": "getID",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Decl",
                    "args": [
                        [
                            "bool",
                            "BlocksToo"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::FunctionType *(bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::FunctionType *",
                    "signature": "const clang::FunctionType * (clang::Decl::*)(bool) const",
                    "name": "getFunctionType",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [],
            "name": "Decl"
        },
        {
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "Decl::Kind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Decl::Kind",
                    "signature": "clang::Decl::Kind (clang::DeclContext::*)() const",
                    "name": "getDeclKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const char *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const char *",
                    "signature": "const char * (clang::DeclContext::*)() const",
                    "name": "getDeclKindName",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclContext *",
                    "signature": "clang::DeclContext * (clang::DeclContext::*)()",
                    "name": "getParent",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclContext *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclContext *",
                    "signature": "const clang::DeclContext * (clang::DeclContext::*)() const",
                    "name": "getParent",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclContext *",
                    "signature": "clang::DeclContext * (clang::DeclContext::*)()",
                    "name": "getLexicalParent",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclContext *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclContext *",
                    "signature": "const clang::DeclContext * (clang::DeclContext::*)() const",
                    "name": "getLexicalParent",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclContext *",
                    "signature": "clang::DeclContext * (clang::DeclContext::*)()",
                    "name": "getLookupParent",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclContext *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclContext *",
                    "signature": "const clang::DeclContext * (clang::DeclContext::*)() const",
                    "name": "getLookupParent",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ASTContext &() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ASTContext &",
                    "signature": "clang::ASTContext & (clang::DeclContext::*)() const",
                    "name": "getParentASTContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "isClosure",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "isObjCContainer",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "isFunctionOrMethod",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "isLookupContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "isFileContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "isTranslationUnit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "isRecord",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "isNamespace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "isStdNamespace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "isInlineNamespace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "isDependentContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "isTransparentContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "isExternCContext",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::LinkageSpecDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::LinkageSpecDecl *",
                    "signature": "const clang::LinkageSpecDecl * (clang::DeclContext::*)() const",
                    "name": "getExternCContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "isExternCXXContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "const clang::DeclContext *",
                            "DC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::DeclContext *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)(const clang::DeclContext *) const",
                    "name": "Equals",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "const clang::DeclContext *",
                            "DC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::DeclContext *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)(const clang::DeclContext *) const",
                    "name": "Encloses",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Decl *",
                    "signature": "clang::Decl * (clang::DeclContext::*)()",
                    "name": "getNonClosureAncestor",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Decl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Decl *",
                    "signature": "const clang::Decl * (clang::DeclContext::*)() const",
                    "name": "getNonClosureAncestor",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclContext *",
                    "signature": "clang::DeclContext * (clang::DeclContext::*)()",
                    "name": "getPrimaryContext",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclContext *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclContext *",
                    "signature": "const clang::DeclContext * (clang::DeclContext::*)() const",
                    "name": "getPrimaryContext",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclContext *",
                    "signature": "clang::DeclContext * (clang::DeclContext::*)()",
                    "name": "getRedeclContext",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclContext *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclContext *",
                    "signature": "const clang::DeclContext * (clang::DeclContext::*)() const",
                    "name": "getRedeclContext",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclContext *",
                    "signature": "clang::DeclContext * (clang::DeclContext::*)()",
                    "name": "getEnclosingNamespaceContext",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclContext *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclContext *",
                    "signature": "const clang::DeclContext * (clang::DeclContext::*)() const",
                    "name": "getEnclosingNamespaceContext",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::RecordDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::RecordDecl *",
                    "signature": "clang::RecordDecl * (clang::DeclContext::*)()",
                    "name": "getOuterLexicalRecordContext",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::RecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::RecordDecl *",
                    "signature": "const clang::RecordDecl * (clang::DeclContext::*)() const",
                    "name": "getOuterLexicalRecordContext",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "const clang::DeclContext *",
                            "NS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::DeclContext *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)(const clang::DeclContext *) const",
                    "name": "InEnclosingNamespaceSetOf",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "llvm::SmallVectorImpl<clang::DeclContext *> &",
                            "Contexts"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (SmallVectorImpl<clang::DeclContext *> &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclContext::*)(llvm::SmallVectorImpl<clang::DeclContext *> &)",
                    "name": "collectAllContexts",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext::decl_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::DeclContext::decl_iterator>",
                    "signature": "llvm::iterator_range<clang::DeclContext::decl_iterator> (clang::DeclContext::*)() const",
                    "name": "decls",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "decls_empty",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext::decl_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::DeclContext::decl_iterator>",
                    "signature": "llvm::iterator_range<clang::DeclContext::decl_iterator> (clang::DeclContext::*)() const",
                    "name": "noload_decls",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "clang::Decl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Decl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclContext::*)(clang::Decl *)",
                    "name": "addDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "clang::Decl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Decl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclContext::*)(clang::Decl *)",
                    "name": "addDeclInternal",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "clang::Decl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Decl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclContext::*)(clang::Decl *)",
                    "name": "addHiddenDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "clang::Decl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Decl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclContext::*)(clang::Decl *)",
                    "name": "removeDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "clang::Decl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::Decl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)(clang::Decl *) const",
                    "name": "containsDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "clang::Decl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::Decl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)(clang::Decl *) const",
                    "name": "containsDeclAndLoad",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "clang::DeclarationName",
                            "Name"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext::lookup_result (clang::DeclarationName) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclContextLookupResult",
                    "signature": "clang::DeclContextLookupResult (clang::DeclContext::*)(clang::DeclarationName) const",
                    "name": "lookup",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "clang::DeclarationName",
                            "Name"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext::lookup_result (clang::DeclarationName)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::DeclContextLookupResult",
                    "signature": "clang::DeclContextLookupResult (clang::DeclContext::*)(clang::DeclarationName)",
                    "name": "noload_lookup",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "clang::DeclarationName",
                            "Name"
                        ],
                        [
                            "llvm::SmallVectorImpl<clang::NamedDecl *> &",
                            "Results"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::DeclarationName, SmallVectorImpl<clang::NamedDecl *> &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclContext::*)(clang::DeclarationName, llvm::SmallVectorImpl<clang::NamedDecl *> &)",
                    "name": "localUncachedLookup",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::NamedDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclContext::*)(clang::NamedDecl *)",
                    "name": "makeDeclVisibleInContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext::lookups_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::DeclContext::all_lookups_iterator>",
                    "signature": "llvm::iterator_range<clang::DeclContext::all_lookups_iterator> (clang::DeclContext::*)() const",
                    "name": "lookups",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "bool",
                            "PreserveInternalState"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext::lookups_range (bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::DeclContext::all_lookups_iterator>",
                    "signature": "llvm::iterator_range<clang::DeclContext::all_lookups_iterator> (clang::DeclContext::*)(bool) const",
                    "name": "noload_lookups",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext::udir_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::DeclContext::udir_iterator>",
                    "signature": "llvm::iterator_range<clang::DeclContext::udir_iterator> (clang::DeclContext::*)() const",
                    "name": "using_directives",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext::ddiag_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::DeclContext::ddiag_iterator>",
                    "signature": "llvm::iterator_range<clang::DeclContext::ddiag_iterator> (clang::DeclContext::*)() const",
                    "name": "ddiags",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclContext::*)()",
                    "name": "setMustBuildLookupTable",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::StoredDeclsMap *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::StoredDeclsMap *",
                    "signature": "clang::StoredDeclsMap * (clang::DeclContext::*)() const",
                    "name": "getLookupPtr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::StoredDeclsMap *()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::StoredDeclsMap *",
                    "signature": "clang::StoredDeclsMap * (clang::DeclContext::*)()",
                    "name": "buildLookup",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "hasExternalLexicalStorage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "bool",
                            "ES"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::DeclContext::*)(bool) const",
                    "name": "setHasExternalLexicalStorage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "hasExternalVisibleStorage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "bool",
                            "ES"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::DeclContext::*)(bool) const",
                    "name": "setHasExternalVisibleStorage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::Decl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)(const clang::Decl *) const",
                    "name": "isDeclInLexicalTraversal",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "bool",
                            "use"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)(bool) const",
                    "name": "setUseQualifiedLookup",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclContext::*)() const",
                    "name": "shouldUseQualifiedLookup",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::DeclContext::*)() const",
                    "name": "dumpDeclContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::DeclContext::*)() const",
                    "name": "dumpLookups",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DeclContext",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "bool",
                            "DumpDecls"
                        ],
                        [
                            "bool",
                            "Deserialize"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, bool, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::DeclContext::*)(llvm::raw_ostream &, bool, bool) const",
                    "name": "dumpLookups",
                    "is_overload": true
                }
            ],
            "typename": "clang::DeclContext",
            "is_disabled": false,
            "supers": [],
            "name": "DeclContext",
            "node": false
        },
        {
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::TypeSourceInfo",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::TypeSourceInfo::*)() const",
                    "name": "getType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypeSourceInfo",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeLoc",
                    "signature": "clang::TypeLoc (clang::TypeSourceInfo::*)() const",
                    "name": "getTypeLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypeSourceInfo",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TypeSourceInfo::*)(clang::QualType)",
                    "name": "overrideType",
                    "is_overload": false
                }
            ],
            "typename": "clang::TypeSourceInfo",
            "is_disabled": false,
            "supers": [],
            "name": "TypeSourceInfo",
            "node": false
        },
        {
            "typename": "clang::TranslationUnitDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::TranslationUnitDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::TranslationUnitDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ASTContext &() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ASTContext &",
                    "signature": "clang::ASTContext & (clang::TranslationUnitDecl::*)() const",
                    "name": "getASTContext",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TranslationUnitDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamespaceDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NamespaceDecl *",
                    "signature": "clang::NamespaceDecl * (clang::TranslationUnitDecl::*)() const",
                    "name": "getAnonymousNamespace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TranslationUnitDecl",
                    "args": [
                        [
                            "clang::NamespaceDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::NamespaceDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TranslationUnitDecl::*)(clang::NamespaceDecl *)",
                    "name": "setAnonymousNamespace",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Decl",
                "clang::DeclContext"
            ],
            "name": "TranslationUnitDecl"
        },
        {
            "typename": "clang::PragmaCommentDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::PragmaCommentDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::PragmaCommentDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::PragmaMSCommentKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::PragmaMSCommentKind",
                    "signature": "clang::PragmaMSCommentKind (clang::PragmaCommentDecl::*)() const",
                    "name": "getCommentKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::PragmaCommentDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::PragmaCommentDecl::*)() const",
                    "name": "getArg",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Decl"
            ],
            "name": "PragmaCommentDecl"
        },
        {
            "typename": "clang::PragmaDetectMismatchDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::PragmaDetectMismatchDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::PragmaDetectMismatchDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::PragmaDetectMismatchDecl::*)() const",
                    "name": "getName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::PragmaDetectMismatchDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::PragmaDetectMismatchDecl::*)() const",
                    "name": "getValue",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Decl"
            ],
            "name": "PragmaDetectMismatchDecl"
        },
        {
            "typename": "clang::ExternCContextDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::ExternCContextDecl>::type",
            "methods": [],
            "node": true,
            "supers": [
                "clang::Decl",
                "clang::DeclContext"
            ],
            "name": "ExternCContextDecl"
        },
        {
            "typename": "clang::NamedDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::NamedDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::IdentifierInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::IdentifierInfo *",
                    "signature": "clang::IdentifierInfo * (clang::NamedDecl::*)() const",
                    "name": "getIdentifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::NamedDecl::*)() const",
                    "name": "getName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "std::string () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::NamedDecl::*)() const",
                    "name": "getNameAsString",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "os"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &) const",
                    "is_disabled": true,
                    "is_virtual": true,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::NamedDecl::*)(llvm::raw_ostream &) const",
                    "name": "printName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationName () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclarationName",
                    "signature": "clang::DeclarationName (clang::NamedDecl::*)() const",
                    "name": "getDeclName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [
                        [
                            "clang::DeclarationName",
                            "N"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::DeclarationName)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::NamedDecl::*)(clang::DeclarationName)",
                    "name": "setDeclName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::NamedDecl::*)(llvm::raw_ostream &) const",
                    "name": "printQualifiedName",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::NamedDecl::*)(llvm::raw_ostream &, const clang::PrintingPolicy &) const",
                    "name": "printQualifiedName",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "std::string () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::NamedDecl::*)() const",
                    "name": "getQualifiedNameAsString",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "bool",
                            "Qualified"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "is_disabled": true,
                    "is_virtual": true,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::NamedDecl::*)(llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "name": "getNameForDiagnostic",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "OldD"
                        ],
                        [
                            "bool",
                            "IsKnownNewer"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::NamedDecl *, bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NamedDecl::*)(clang::NamedDecl *, bool) const",
                    "name": "declarationReplaces",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "name": "hasLinkage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "name": "isCXXClassMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "name": "isCXXInstanceMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Linkage () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Linkage",
                    "signature": "clang::Linkage (clang::NamedDecl::*)() const",
                    "name": "getLinkageInternal",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Linkage () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Linkage",
                    "signature": "clang::Linkage (clang::NamedDecl::*)() const",
                    "name": "getFormalLinkage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "name": "hasExternalFormalLinkage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "name": "isExternallyVisible",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "name": "isExternallyDeclarable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Visibility () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Visibility",
                    "signature": "clang::Visibility (clang::NamedDecl::*)() const",
                    "name": "getVisibility",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LinkageInfo () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::LinkageInfo",
                    "signature": "clang::LinkageInfo (clang::NamedDecl::*)() const",
                    "name": "getLinkageAndVisibility",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [
                        [
                            "clang::NamedDecl::ExplicitVisibilityKind",
                            "kind"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "Optional<clang::Visibility> (clang::NamedDecl::ExplicitVisibilityKind) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::Optional<clang::Visibility>",
                    "signature": "llvm::Optional<clang::Visibility> (clang::NamedDecl::*)(clang::NamedDecl::ExplicitVisibilityKind) const",
                    "name": "getExplicitVisibility",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "name": "isLinkageValid",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NamedDecl::*)() const",
                    "name": "hasLinkageBeenComputed",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamedDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::NamedDecl *",
                    "signature": "clang::NamedDecl * (clang::NamedDecl::*)()",
                    "name": "getUnderlyingDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::NamedDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::NamedDecl *",
                    "signature": "const clang::NamedDecl * (clang::NamedDecl::*)() const",
                    "name": "getUnderlyingDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamedDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::NamedDecl *",
                    "signature": "clang::NamedDecl * (clang::NamedDecl::*)()",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::NamedDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::NamedDecl *",
                    "signature": "const clang::NamedDecl * (clang::NamedDecl::*)() const",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::NamedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ObjCStringFormatFamily () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ObjCStringFormatFamily",
                    "signature": "clang::ObjCStringFormatFamily (clang::NamedDecl::*)() const",
                    "name": "getObjCFStringFormattingFamily",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Decl"
            ],
            "name": "NamedDecl"
        },
        {
            "typename": "clang::LabelDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::LabelDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::LabelDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LabelStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::LabelStmt *",
                    "signature": "clang::LabelStmt * (clang::LabelDecl::*)() const",
                    "name": "getStmt",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LabelDecl",
                    "args": [
                        [
                            "clang::LabelStmt *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::LabelStmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::LabelDecl::*)(clang::LabelStmt *)",
                    "name": "setStmt",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LabelDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::LabelDecl::*)() const",
                    "name": "isGnuLocal",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LabelDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::LabelDecl::*)(clang::SourceLocation)",
                    "name": "setLocStart",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LabelDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::LabelDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LabelDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::LabelDecl::*)() const",
                    "name": "isMSAsmLabel",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LabelDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::LabelDecl::*)() const",
                    "name": "isResolvedMSAsmLabel",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LabelDecl",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Name"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::StringRef)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::LabelDecl::*)(llvm::StringRef)",
                    "name": "setMSAsmLabel",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LabelDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::LabelDecl::*)() const",
                    "name": "getMSAsmLabel",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LabelDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::LabelDecl::*)()",
                    "name": "setMSAsmLabelResolved",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "LabelDecl"
        },
        {
            "typename": "clang::NamespaceDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::NamespaceDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::NamespaceDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NamespaceDecl::*)() const",
                    "name": "isAnonymousNamespace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamespaceDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NamespaceDecl::*)() const",
                    "name": "isInline",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamespaceDecl",
                    "args": [
                        [
                            "bool",
                            "Inline"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::NamespaceDecl::*)(bool)",
                    "name": "setInline",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamespaceDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamespaceDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::NamespaceDecl *",
                    "signature": "clang::NamespaceDecl * (clang::NamespaceDecl::*)()",
                    "name": "getOriginalNamespace",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamespaceDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::NamespaceDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::NamespaceDecl *",
                    "signature": "const clang::NamespaceDecl * (clang::NamespaceDecl::*)() const",
                    "name": "getOriginalNamespace",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::NamespaceDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NamespaceDecl::*)() const",
                    "name": "isOriginalNamespace",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamespaceDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamespaceDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NamespaceDecl *",
                    "signature": "clang::NamespaceDecl * (clang::NamespaceDecl::*)() const",
                    "name": "getAnonymousNamespace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamespaceDecl",
                    "args": [
                        [
                            "clang::NamespaceDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::NamespaceDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::NamespaceDecl::*)(clang::NamespaceDecl *)",
                    "name": "setAnonymousNamespace",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamespaceDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamespaceDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::NamespaceDecl *",
                    "signature": "clang::NamespaceDecl * (clang::NamespaceDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamespaceDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::NamespaceDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::NamespaceDecl *",
                    "signature": "const clang::NamespaceDecl * (clang::NamespaceDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::NamespaceDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::NamespaceDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamespaceDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::NamespaceDecl::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamespaceDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::NamespaceDecl::*)() const",
                    "name": "getRBraceLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamespaceDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::NamespaceDecl::*)(clang::SourceLocation)",
                    "name": "setLocStart",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamespaceDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::NamespaceDecl::*)(clang::SourceLocation)",
                    "name": "setRBraceLoc",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::NamedDecl",
                "clang::DeclContext"
            ],
            "name": "NamespaceDecl"
        },
        {
            "typename": "clang::ValueDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::ValueDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ValueDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ValueDecl::*)() const",
                    "name": "getType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ValueDecl",
                    "args": [
                        [
                            "clang::QualType",
                            "newType"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ValueDecl::*)(clang::QualType)",
                    "name": "setType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ValueDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ValueDecl::*)() const",
                    "name": "isWeak",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "ValueDecl"
        },
        {
            "typename": "clang::DeclaratorDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::DeclaratorDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclaratorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::DeclaratorDecl::*)() const",
                    "name": "getTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclaratorDecl",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "TI"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclaratorDecl::*)(clang::TypeSourceInfo *)",
                    "name": "setTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclaratorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclaratorDecl::*)() const",
                    "name": "getInnerLocStart",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclaratorDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclaratorDecl::*)(clang::SourceLocation)",
                    "name": "setInnerLocStart",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclaratorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclaratorDecl::*)() const",
                    "name": "getOuterLocStart",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclaratorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::DeclaratorDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclaratorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclaratorDecl::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclaratorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifier *",
                    "signature": "clang::NestedNameSpecifier * (clang::DeclaratorDecl::*)() const",
                    "name": "getQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclaratorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "signature": "clang::NestedNameSpecifierLoc (clang::DeclaratorDecl::*)() const",
                    "name": "getQualifierLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclaratorDecl",
                    "args": [
                        [
                            "clang::NestedNameSpecifierLoc",
                            "QualifierLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::NestedNameSpecifierLoc)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclaratorDecl::*)(clang::NestedNameSpecifierLoc)",
                    "name": "setQualifierInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclaratorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::DeclaratorDecl::*)() const",
                    "name": "getNumTemplateParameterLists",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclaratorDecl",
                    "args": [
                        [
                            "unsigned int",
                            "index"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateParameterList *(unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateParameterList *",
                    "signature": "clang::TemplateParameterList * (clang::DeclaratorDecl::*)(unsigned int) const",
                    "name": "getTemplateParameterList",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclaratorDecl",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Context"
                        ],
                        [
                            "llvm::ArrayRef<clang::TemplateParameterList *>",
                            "TPLists"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ASTContext &, ArrayRef<clang::TemplateParameterList *>)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclaratorDecl::*)(clang::ASTContext &, llvm::ArrayRef<clang::TemplateParameterList *>)",
                    "name": "setTemplateParameterListsInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclaratorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclaratorDecl::*)() const",
                    "name": "getTypeSpecStartLoc",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::ValueDecl"
            ],
            "name": "DeclaratorDecl"
        },
        {
            "typename": "clang::VarDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::VarDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::VarDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::StorageClass () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::StorageClass",
                    "signature": "clang::StorageClass (clang::VarDecl::*)() const",
                    "name": "getStorageClass",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "clang::StorageClass",
                            "SC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::StorageClass)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)(clang::StorageClass)",
                    "name": "setStorageClass",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "clang::ThreadStorageClassSpecifier",
                            "TSC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ThreadStorageClassSpecifier)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)(clang::ThreadStorageClassSpecifier)",
                    "name": "setTSCSpec",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ThreadStorageClassSpecifier () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ThreadStorageClassSpecifier",
                    "signature": "clang::ThreadStorageClassSpecifier (clang::VarDecl::*)() const",
                    "name": "getTSCSpec",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl::TLSKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::VarDecl::TLSKind",
                    "signature": "clang::VarDecl::TLSKind (clang::VarDecl::*)() const",
                    "name": "getTLSKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "hasLocalStorage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isStaticLocal",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "hasExternalStorage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "hasGlobalStorage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::StorageDuration () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::StorageDuration",
                    "signature": "clang::StorageDuration (clang::VarDecl::*)() const",
                    "name": "getStorageDuration",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LanguageLinkage () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::LanguageLinkage",
                    "signature": "clang::LanguageLinkage (clang::VarDecl::*)() const",
                    "name": "getLanguageLinkage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isExternC",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isInExternCContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isInExternCXXContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isLocalVarDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isLocalVarDeclOrParm",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isFunctionOrMethodVarDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isStaticDataMember",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::VarDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::VarDecl *",
                    "signature": "const clang::VarDecl * (clang::VarDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "clang::ASTContext &",
                            ""
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl::DefinitionKind (clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::VarDecl::DefinitionKind",
                    "signature": "clang::VarDecl::DefinitionKind (clang::VarDecl::*)(clang::ASTContext &) const",
                    "name": "isThisDeclarationADefinition",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl::DefinitionKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::VarDecl::DefinitionKind",
                    "signature": "clang::VarDecl::DefinitionKind (clang::VarDecl::*)() const",
                    "name": "isThisDeclarationADefinition",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "clang::ASTContext &",
                            ""
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl::DefinitionKind (clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::VarDecl::DefinitionKind",
                    "signature": "clang::VarDecl::DefinitionKind (clang::VarDecl::*)(clang::ASTContext &) const",
                    "name": "hasDefinition",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl::DefinitionKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::VarDecl::DefinitionKind",
                    "signature": "clang::VarDecl::DefinitionKind (clang::VarDecl::*)() const",
                    "name": "hasDefinition",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::VarDecl::*)()",
                    "name": "getActingDefinition",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::VarDecl *",
                    "signature": "const clang::VarDecl * (clang::VarDecl::*)() const",
                    "name": "getActingDefinition",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "clang::ASTContext &",
                            ""
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *(clang::ASTContext &)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::VarDecl::*)(clang::ASTContext &)",
                    "name": "getDefinition",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "C"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::VarDecl *(clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::VarDecl *",
                    "signature": "const clang::VarDecl * (clang::VarDecl::*)(clang::ASTContext &) const",
                    "name": "getDefinition",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::VarDecl::*)()",
                    "name": "getDefinition",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::VarDecl *",
                    "signature": "const clang::VarDecl * (clang::VarDecl::*)() const",
                    "name": "getDefinition",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isOutOfLine",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isFileVarDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::VarDecl::*)() const",
                    "name": "getAnyInitializer",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "hasInit",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::VarDecl::*)() const",
                    "name": "getInit",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::VarDecl::*)()",
                    "name": "getInit",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "clang::Expr *",
                            "I"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)(clang::Expr *)",
                    "name": "setInit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "C"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)(clang::ASTContext &) const",
                    "name": "isUsableInConstantExpressions",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::EvaluatedStmt *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::EvaluatedStmt *",
                    "signature": "clang::EvaluatedStmt * (clang::VarDecl::*)() const",
                    "name": "ensureEvaluatedStmt",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::APValue *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::APValue *",
                    "signature": "clang::APValue * (clang::VarDecl::*)() const",
                    "name": "evaluateValue",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > &",
                            "Notes"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::APValue *(SmallVectorImpl<clang::PartialDiagnosticAt> &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::APValue *",
                    "signature": "clang::APValue * (clang::VarDecl::*)(llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > &) const",
                    "name": "evaluateValue",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::APValue *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::APValue *",
                    "signature": "clang::APValue * (clang::VarDecl::*)() const",
                    "name": "getEvaluatedValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isInitKnownICE",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isInitICE",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "checkInitIsICE",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "clang::VarDecl::InitializationStyle",
                            "Style"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::VarDecl::InitializationStyle)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)(clang::VarDecl::InitializationStyle)",
                    "name": "setInitStyle",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl::InitializationStyle () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::VarDecl::InitializationStyle",
                    "signature": "clang::VarDecl::InitializationStyle (clang::VarDecl::*)() const",
                    "name": "getInitStyle",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isDirectInit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isThisDeclarationADemotedDefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)()",
                    "name": "demoteThisDefinitionToDeclaration",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isExceptionVariable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "bool",
                            "EV"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)(bool)",
                    "name": "setExceptionVariable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isNRVOVariable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "bool",
                            "NRVO"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)(bool)",
                    "name": "setNRVOVariable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isCXXForRangeDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "bool",
                            "FRD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)(bool)",
                    "name": "setCXXForRangeDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isObjCForDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "bool",
                            "FRD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)(bool)",
                    "name": "setObjCForDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isARCPseudoStrong",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "bool",
                            "PS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)(bool)",
                    "name": "setARCPseudoStrong",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isInline",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isInlineSpecified",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)()",
                    "name": "setInlineSpecified",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)()",
                    "name": "setImplicitlyInline",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isConstexpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "bool",
                            "IC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)(bool)",
                    "name": "setConstexpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isInitCapture",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "bool",
                            "IC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)(bool)",
                    "name": "setInitCapture",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isPreviousDeclInSameBlockScope",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "bool",
                            "Same"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)(bool)",
                    "name": "setPreviousDeclInSameBlockScope",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isEscapingByref",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isNonEscapingByref",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)()",
                    "name": "setEscapingByref",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::VarDecl::*)() const",
                    "name": "getTemplateInstantiationPattern",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::VarDecl::*)() const",
                    "name": "getInstantiatedFromStaticDataMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateSpecializationKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateSpecializationKind",
                    "signature": "clang::TemplateSpecializationKind (clang::VarDecl::*)() const",
                    "name": "getTemplateSpecializationKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::VarDecl::*)() const",
                    "name": "getPointOfInstantiation",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::MemberSpecializationInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::MemberSpecializationInfo *",
                    "signature": "clang::MemberSpecializationInfo * (clang::VarDecl::*)() const",
                    "name": "getMemberSpecializationInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ],
                        [
                            "clang::SourceLocation",
                            "PointOfInstantiation"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)(clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "name": "setTemplateSpecializationKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "clang::VarDecl *",
                            "VD"
                        ],
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::VarDecl *, clang::TemplateSpecializationKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)(clang::VarDecl *, clang::TemplateSpecializationKind)",
                    "name": "setInstantiationOfStaticDataMember",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::VarTemplateDecl *",
                    "signature": "clang::VarTemplateDecl * (clang::VarDecl::*)() const",
                    "name": "getDescribedVarTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "clang::VarTemplateDecl *",
                            "Template"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::VarTemplateDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarDecl::*)(clang::VarTemplateDecl *)",
                    "name": "setDescribedVarTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)() const",
                    "name": "isKnownToBeDefined",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarDecl",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            ""
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarDecl::*)(const clang::ASTContext &) const",
                    "name": "isNoDestroy",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::DeclaratorDecl"
            ],
            "name": "VarDecl"
        },
        {
            "typename": "clang::ImplicitParamDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::ImplicitParamDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ImplicitParamDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ImplicitParamDecl::ImplicitParamKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ImplicitParamDecl::ImplicitParamKind",
                    "signature": "clang::ImplicitParamDecl::ImplicitParamKind (clang::ImplicitParamDecl::*)() const",
                    "name": "getParameterKind",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::VarDecl"
            ],
            "name": "ImplicitParamDecl"
        },
        {
            "typename": "clang::ParmVarDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::ParmVarDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::ParmVarDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [
                        [
                            "unsigned int",
                            "parameterIndex"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ParmVarDecl::*)(unsigned int)",
                    "name": "setObjCMethodScopeInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [
                        [
                            "unsigned int",
                            "scopeDepth"
                        ],
                        [
                            "unsigned int",
                            "parameterIndex"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int, unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ParmVarDecl::*)(unsigned int, unsigned int)",
                    "name": "setScopeInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ParmVarDecl::*)() const",
                    "name": "isObjCMethodParameter",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ParmVarDecl::*)() const",
                    "name": "getFunctionScopeDepth",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ParmVarDecl::*)() const",
                    "name": "getFunctionScopeIndex",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl::ObjCDeclQualifier () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Decl::ObjCDeclQualifier",
                    "signature": "clang::Decl::ObjCDeclQualifier (clang::ParmVarDecl::*)() const",
                    "name": "getObjCDeclQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [
                        [
                            "clang::Decl::ObjCDeclQualifier",
                            "QTVal"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Decl::ObjCDeclQualifier)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ParmVarDecl::*)(clang::Decl::ObjCDeclQualifier)",
                    "name": "setObjCDeclQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ParmVarDecl::*)() const",
                    "name": "isKNRPromoted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [
                        [
                            "bool",
                            "promoted"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ParmVarDecl::*)(bool)",
                    "name": "setKNRPromoted",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ParmVarDecl::*)()",
                    "name": "getDefaultArg",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::ParmVarDecl::*)() const",
                    "name": "getDefaultArg",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [
                        [
                            "clang::Expr *",
                            "defarg"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ParmVarDecl::*)(clang::Expr *)",
                    "name": "setDefaultArg",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::ParmVarDecl::*)() const",
                    "name": "getDefaultArgRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [
                        [
                            "clang::Expr *",
                            "arg"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ParmVarDecl::*)(clang::Expr *)",
                    "name": "setUninstantiatedDefaultArg",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ParmVarDecl::*)()",
                    "name": "getUninstantiatedDefaultArg",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::ParmVarDecl::*)() const",
                    "name": "getUninstantiatedDefaultArg",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ParmVarDecl::*)() const",
                    "name": "hasDefaultArg",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ParmVarDecl::*)() const",
                    "name": "hasUnparsedDefaultArg",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ParmVarDecl::*)() const",
                    "name": "hasUninstantiatedDefaultArg",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ParmVarDecl::*)()",
                    "name": "setUnparsedDefaultArg",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ParmVarDecl::*)() const",
                    "name": "hasInheritedDefaultArg",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [
                        [
                            "bool",
                            "I"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ParmVarDecl::*)(bool)",
                    "name": "setHasInheritedDefaultArg",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ParmVarDecl::*)() const",
                    "name": "getOriginalType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ParmVarDecl::*)() const",
                    "name": "isParameterPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParmVarDecl",
                    "args": [
                        [
                            "clang::DeclContext *",
                            "FD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::DeclContext *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ParmVarDecl::*)(clang::DeclContext *)",
                    "name": "setOwningFunction",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::VarDecl"
            ],
            "name": "ParmVarDecl"
        },
        {
            "typename": "clang::FunctionDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::FunctionDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationNameInfo () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclarationNameInfo",
                    "signature": "clang::DeclarationNameInfo (clang::FunctionDecl::*)() const",
                    "name": "getNameInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "bool",
                            "Qualified"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "is_disabled": true,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "name": "getNameForDiagnostic",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(clang::SourceLocation)",
                    "name": "setRangeEnd",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::FunctionDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "hasBody",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "hasTrivialBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isDefined",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::FunctionDecl *",
                    "signature": "clang::FunctionDecl * (clang::FunctionDecl::*)()",
                    "name": "getDefinition",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FunctionDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::FunctionDecl *",
                    "signature": "const clang::FunctionDecl * (clang::FunctionDecl::*)() const",
                    "name": "getDefinition",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::FunctionDecl::*)() const",
                    "name": "getBody",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isThisDeclarationADefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "doesThisDeclarationHaveABody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "clang::Stmt *",
                            "B"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(clang::Stmt *)",
                    "name": "setBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "unsigned long",
                            "Offset"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (uint64_t)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(unsigned long)",
                    "name": "setLazyBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isVariadic",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isVirtualAsWritten",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setVirtualAsWritten",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isPure",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "P"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setPure",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isLateTemplateParsed",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "ILT"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setLateTemplateParsed",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isTrivial",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "IT"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setTrivial",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isTrivialForCall",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "IT"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setTrivialForCall",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isDefaulted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setDefaulted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isExplicitlyDefaulted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "ED"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setExplicitlyDefaulted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "hasImplicitReturnZero",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "IRZ"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setHasImplicitReturnZero",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "hasPrototype",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "hasWrittenPrototype",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "P"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setHasWrittenPrototype",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "hasInheritedPrototype",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "P"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setHasInheritedPrototype",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isConstexpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "IC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setConstexpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "instantiationIsPending",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "IC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setInstantiationIsPending",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "usesSEHTry",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "UST"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setUsesSEHTry",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isDeleted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isDeletedAsWritten",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setDeletedAsWritten",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isMain",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isMSVCRTEntryPoint",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isReservedGlobalPlacementOperator",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool *",
                            "IsAligned"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (bool *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)(bool *) const",
                    "name": "isReplaceableGlobalAllocationFunction",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isDestroyingOperatorDelete",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LanguageLinkage () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::LanguageLinkage",
                    "signature": "clang::LanguageLinkage (clang::FunctionDecl::*)() const",
                    "name": "getLanguageLinkage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isExternC",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isInExternCContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isInExternCXXContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isGlobal",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isNoReturn",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "hasSkippedBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "Skipped"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setHasSkippedBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "willHaveBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setWillHaveBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isMultiVersion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setIsMultiVersion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::MultiVersionKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::MultiVersionKind",
                    "signature": "clang::MultiVersionKind (clang::FunctionDecl::*)() const",
                    "name": "getMultiVersionKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isCPUDispatchMultiVersion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isCPUSpecificMultiVersion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isTargetMultiVersion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "PrevDecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FunctionDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(clang::FunctionDecl *)",
                    "name": "setPreviousDeclaration",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::FunctionDecl *",
                    "signature": "clang::FunctionDecl * (clang::FunctionDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FunctionDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::FunctionDecl *",
                    "signature": "const clang::FunctionDecl * (clang::FunctionDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::FunctionDecl::*)() const",
                    "name": "getBuiltinID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::ParmVarDecl *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::ParmVarDecl *>",
                    "signature": "llvm::ArrayRef<clang::ParmVarDecl *> (clang::FunctionDecl::*)() const",
                    "name": "parameters",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "MutableArrayRef<clang::ParmVarDecl *> ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::MutableArrayRef<clang::ParmVarDecl *>",
                    "signature": "llvm::MutableArrayRef<clang::ParmVarDecl *> (clang::FunctionDecl::*)()",
                    "name": "parameters",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "param_empty",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "size_t () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (clang::FunctionDecl::*)() const",
                    "name": "param_size",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::FunctionDecl::*)() const",
                    "name": "getNumParams",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::ParmVarDecl *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::ParmVarDecl *",
                    "signature": "const clang::ParmVarDecl * (clang::FunctionDecl::*)(unsigned int) const",
                    "name": "getParamDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::ParmVarDecl *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::ParmVarDecl *",
                    "signature": "clang::ParmVarDecl * (clang::FunctionDecl::*)(unsigned int)",
                    "name": "getParamDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "llvm::ArrayRef<clang::ParmVarDecl *>",
                            "NewParamInfo"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (ArrayRef<clang::ParmVarDecl *>)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(llvm::ArrayRef<clang::ParmVarDecl *>)",
                    "name": "setParams",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::FunctionDecl::*)() const",
                    "name": "getMinRequiredArguments",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::FunctionDecl::*)() const",
                    "name": "getReturnType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::FunctionDecl::*)() const",
                    "name": "getReturnTypeSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::FunctionDecl::*)() const",
                    "name": "getDeclaredReturnType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::FunctionDecl::*)() const",
                    "name": "getExceptionSpecSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::FunctionDecl::*)() const",
                    "name": "getCallResultType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::StorageClass () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::StorageClass",
                    "signature": "clang::StorageClass (clang::FunctionDecl::*)() const",
                    "name": "getStorageClass",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "clang::StorageClass",
                            "SClass"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::StorageClass)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(clang::StorageClass)",
                    "name": "setStorageClass",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isInlineSpecified",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "I"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setInlineSpecified",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "I"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setImplicitlyInline",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isInlined",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isExplicitSpecified",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "bool",
                            "ExpSpec"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(bool)",
                    "name": "setExplicitSpecified",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isInlineDefinitionExternallyVisible",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isMSExternInline",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "doesDeclarationForceExternallyVisibleDefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isOverloadedOperator",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::OverloadedOperatorKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::OverloadedOperatorKind",
                    "signature": "clang::OverloadedOperatorKind (clang::FunctionDecl::*)() const",
                    "name": "getOverloadedOperator",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::IdentifierInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::IdentifierInfo *",
                    "signature": "const clang::IdentifierInfo * (clang::FunctionDecl::*)() const",
                    "name": "getLiteralIdentifier",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FunctionDecl *",
                    "signature": "clang::FunctionDecl * (clang::FunctionDecl::*)() const",
                    "name": "getInstantiatedFromMemberFunction",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionDecl::TemplatedKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FunctionDecl::TemplatedKind",
                    "signature": "clang::FunctionDecl::TemplatedKind (clang::FunctionDecl::*)() const",
                    "name": "getTemplatedKind",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::MemberSpecializationInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::MemberSpecializationInfo *",
                    "signature": "clang::MemberSpecializationInfo * (clang::FunctionDecl::*)() const",
                    "name": "getMemberSpecializationInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "FD"
                        ],
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FunctionDecl *, clang::TemplateSpecializationKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(clang::FunctionDecl *, clang::TemplateSpecializationKind)",
                    "name": "setInstantiationOfMemberFunction",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FunctionTemplateDecl *",
                    "signature": "clang::FunctionTemplateDecl * (clang::FunctionDecl::*)() const",
                    "name": "getDescribedFunctionTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "clang::FunctionTemplateDecl *",
                            "Template"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FunctionTemplateDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(clang::FunctionTemplateDecl *)",
                    "name": "setDescribedFunctionTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isFunctionTemplateSpecialization",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FunctionDecl *",
                    "signature": "clang::FunctionDecl * (clang::FunctionDecl::*)() const",
                    "name": "getClassScopeSpecializationPattern",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionTemplateSpecializationInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FunctionTemplateSpecializationInfo *",
                    "signature": "clang::FunctionTemplateSpecializationInfo * (clang::FunctionDecl::*)() const",
                    "name": "getTemplateSpecializationInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isImplicitlyInstantiable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isTemplateInstantiation",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FunctionDecl *",
                    "signature": "clang::FunctionDecl * (clang::FunctionDecl::*)() const",
                    "name": "getTemplateInstantiationPattern",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FunctionTemplateDecl *",
                    "signature": "clang::FunctionTemplateDecl * (clang::FunctionDecl::*)() const",
                    "name": "getPrimaryTemplate",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TemplateArgumentList *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::TemplateArgumentList *",
                    "signature": "const clang::TemplateArgumentList * (clang::FunctionDecl::*)() const",
                    "name": "getTemplateSpecializationArgs",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ASTTemplateArgumentListInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ASTTemplateArgumentListInfo *",
                    "signature": "const clang::ASTTemplateArgumentListInfo * (clang::FunctionDecl::*)() const",
                    "name": "getTemplateSpecializationArgsAsWritten",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "clang::FunctionTemplateDecl *",
                            "Template"
                        ],
                        [
                            "const clang::TemplateArgumentList *",
                            "TemplateArgs"
                        ],
                        [
                            "void *",
                            "InsertPos"
                        ],
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ],
                        [
                            "const clang::TemplateArgumentListInfo *",
                            "TemplateArgsAsWritten"
                        ],
                        [
                            "clang::SourceLocation",
                            "PointOfInstantiation"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FunctionTemplateDecl *, const clang::TemplateArgumentList *, void *, clang::TemplateSpecializationKind, const clang::TemplateArgumentListInfo *, clang::SourceLocation)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(clang::FunctionTemplateDecl *, const clang::TemplateArgumentList *, void *, clang::TemplateSpecializationKind, const clang::TemplateArgumentListInfo *, clang::SourceLocation)",
                    "name": "setFunctionTemplateSpecialization",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Context"
                        ],
                        [
                            "const clang::UnresolvedSetImpl &",
                            "Templates"
                        ],
                        [
                            "const clang::TemplateArgumentListInfo &",
                            "TemplateArgs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ASTContext &, const clang::UnresolvedSetImpl &, const clang::TemplateArgumentListInfo &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(clang::ASTContext &, const clang::UnresolvedSetImpl &, const clang::TemplateArgumentListInfo &)",
                    "name": "setDependentTemplateSpecialization",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DependentFunctionTemplateSpecializationInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DependentFunctionTemplateSpecializationInfo *",
                    "signature": "clang::DependentFunctionTemplateSpecializationInfo * (clang::FunctionDecl::*)() const",
                    "name": "getDependentSpecializationInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateSpecializationKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateSpecializationKind",
                    "signature": "clang::TemplateSpecializationKind (clang::FunctionDecl::*)() const",
                    "name": "getTemplateSpecializationKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ],
                        [
                            "clang::SourceLocation",
                            "PointOfInstantiation"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionDecl::*)(clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "name": "setTemplateSpecializationKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::FunctionDecl::*)() const",
                    "name": "getPointOfInstantiation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionDecl::*)() const",
                    "name": "isOutOfLine",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::FunctionDecl::*)() const",
                    "name": "getMemoryFunctionKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::FunctionDecl::*)()",
                    "name": "getODRHash",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::FunctionDecl::*)() const",
                    "name": "getODRHash",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::DeclaratorDecl",
                "clang::DeclContext"
            ],
            "name": "FunctionDecl"
        },
        {
            "typename": "clang::FieldDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::FieldDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::FieldDecl::*)() const",
                    "name": "getFieldIndex",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FieldDecl::*)() const",
                    "name": "isMutable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FieldDecl::*)() const",
                    "name": "isBitField",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FieldDecl::*)() const",
                    "name": "isUnnamedBitfield",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FieldDecl::*)() const",
                    "name": "isAnonymousStructOrUnion",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::FieldDecl::*)() const",
                    "name": "getBitWidth",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::FieldDecl::*)(const clang::ASTContext &) const",
                    "name": "getBitWidthValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [
                        [
                            "clang::Expr *",
                            "Width"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FieldDecl::*)(clang::Expr *)",
                    "name": "setBitWidth",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FieldDecl::*)()",
                    "name": "removeBitWidth",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FieldDecl::*)(const clang::ASTContext &) const",
                    "name": "isZeroLengthBitField",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::InClassInitStyle () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::InClassInitStyle",
                    "signature": "clang::InClassInitStyle (clang::FieldDecl::*)() const",
                    "name": "getInClassInitStyle",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FieldDecl::*)() const",
                    "name": "hasInClassInitializer",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::FieldDecl::*)() const",
                    "name": "getInClassInitializer",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [
                        [
                            "clang::Expr *",
                            "Init"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FieldDecl::*)(clang::Expr *)",
                    "name": "setInClassInitializer",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FieldDecl::*)()",
                    "name": "removeInClassInitializer",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FieldDecl::*)() const",
                    "name": "hasCapturedVLAType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::VariableArrayType *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::VariableArrayType *",
                    "signature": "const clang::VariableArrayType * (clang::FieldDecl::*)() const",
                    "name": "getCapturedVLAType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [
                        [
                            "const clang::VariableArrayType *",
                            "VLAType"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::VariableArrayType *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FieldDecl::*)(const clang::VariableArrayType *)",
                    "name": "setCapturedVLAType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::RecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::RecordDecl *",
                    "signature": "const clang::RecordDecl * (clang::FieldDecl::*)() const",
                    "name": "getParent",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::RecordDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::RecordDecl *",
                    "signature": "clang::RecordDecl * (clang::FieldDecl::*)()",
                    "name": "getParent",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::FieldDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FieldDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::FieldDecl *",
                    "signature": "clang::FieldDecl * (clang::FieldDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FieldDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::FieldDecl *",
                    "signature": "const clang::FieldDecl * (clang::FieldDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::DeclaratorDecl"
            ],
            "name": "FieldDecl"
        },
        {
            "typename": "clang::EnumConstantDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::EnumConstantDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::EnumConstantDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::EnumConstantDecl::*)() const",
                    "name": "getInitExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::EnumConstantDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::EnumConstantDecl::*)()",
                    "name": "getInitExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::EnumConstantDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const llvm::APSInt &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const llvm::APSInt &",
                    "signature": "const llvm::APSInt & (clang::EnumConstantDecl::*)() const",
                    "name": "getInitVal",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumConstantDecl",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::EnumConstantDecl::*)(clang::Expr *)",
                    "name": "setInitExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumConstantDecl",
                    "args": [
                        [
                            "const llvm::APSInt &",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const llvm::APSInt &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::EnumConstantDecl::*)(const llvm::APSInt &)",
                    "name": "setInitVal",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumConstantDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::EnumConstantDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::EnumConstantDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::EnumConstantDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::EnumConstantDecl *",
                    "signature": "clang::EnumConstantDecl * (clang::EnumConstantDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::EnumConstantDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::EnumConstantDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::EnumConstantDecl *",
                    "signature": "const clang::EnumConstantDecl * (clang::EnumConstantDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::ValueDecl"
            ],
            "name": "EnumConstantDecl"
        },
        {
            "typename": "clang::IndirectFieldDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::IndirectFieldDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::IndirectFieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::NamedDecl *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::NamedDecl *>",
                    "signature": "llvm::ArrayRef<clang::NamedDecl *> (clang::IndirectFieldDecl::*)() const",
                    "name": "chain",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IndirectFieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::IndirectFieldDecl::*)() const",
                    "name": "getChainingSize",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IndirectFieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FieldDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FieldDecl *",
                    "signature": "clang::FieldDecl * (clang::IndirectFieldDecl::*)() const",
                    "name": "getAnonField",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IndirectFieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::IndirectFieldDecl::*)() const",
                    "name": "getVarDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IndirectFieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::IndirectFieldDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::IndirectFieldDecl *",
                    "signature": "clang::IndirectFieldDecl * (clang::IndirectFieldDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IndirectFieldDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::IndirectFieldDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::IndirectFieldDecl *",
                    "signature": "const clang::IndirectFieldDecl * (clang::IndirectFieldDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::ValueDecl"
            ],
            "name": "IndirectFieldDecl"
        },
        {
            "typename": "clang::TypeDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::TypeDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TypeDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Type *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::Type *",
                    "signature": "const clang::Type * (clang::TypeDecl::*)() const",
                    "name": "getTypeForDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypeDecl",
                    "args": [
                        [
                            "const clang::Type *",
                            "TD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::Type *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TypeDecl::*)(const clang::Type *)",
                    "name": "setTypeForDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypeDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::TypeDecl::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypeDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TypeDecl::*)(clang::SourceLocation)",
                    "name": "setLocStart",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypeDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::TypeDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "TypeDecl"
        },
        {
            "typename": "clang::TypedefNameDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::TypedefNameDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::TypedefNameDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TypedefNameDecl::*)() const",
                    "name": "isModed",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TypedefNameDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::TypedefNameDecl::*)() const",
                    "name": "getTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypedefNameDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::TypedefNameDecl::*)() const",
                    "name": "getUnderlyingType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypedefNameDecl",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "newType"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TypedefNameDecl::*)(clang::TypeSourceInfo *)",
                    "name": "setTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypedefNameDecl",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "unmodedTSI"
                        ],
                        [
                            "clang::QualType",
                            "modedTy"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *, clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TypedefNameDecl::*)(clang::TypeSourceInfo *, clang::QualType)",
                    "name": "setModedTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TypedefNameDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypedefNameDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::TypedefNameDecl *",
                    "signature": "clang::TypedefNameDecl * (clang::TypedefNameDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TypedefNameDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TypedefNameDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::TypedefNameDecl *",
                    "signature": "const clang::TypedefNameDecl * (clang::TypedefNameDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TypedefNameDecl",
                    "args": [
                        [
                            "bool",
                            "AnyRedecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TagDecl *(bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TagDecl *",
                    "signature": "clang::TagDecl * (clang::TypedefNameDecl::*)(bool) const",
                    "name": "getAnonDeclWithTypedefName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypedefNameDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TypedefNameDecl::*)() const",
                    "name": "isTransparentTag",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::TypeDecl"
            ],
            "name": "TypedefNameDecl"
        },
        {
            "typename": "clang::TypedefDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::TypedefDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::TypedefDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::TypedefDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::TypedefNameDecl"
            ],
            "name": "TypedefDecl"
        },
        {
            "typename": "clang::TypeAliasDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::TypeAliasDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::TypeAliasDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::TypeAliasDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TypeAliasDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeAliasTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeAliasTemplateDecl *",
                    "signature": "clang::TypeAliasTemplateDecl * (clang::TypeAliasDecl::*)() const",
                    "name": "getDescribedAliasTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypeAliasDecl",
                    "args": [
                        [
                            "clang::TypeAliasTemplateDecl *",
                            "TAT"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeAliasTemplateDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TypeAliasDecl::*)(clang::TypeAliasTemplateDecl *)",
                    "name": "setDescribedAliasTemplate",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::TypedefNameDecl"
            ],
            "name": "TypeAliasDecl"
        },
        {
            "typename": "clang::TagDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::TagDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::TagDecl::*)() const",
                    "name": "getBraceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [
                        [
                            "clang::SourceRange",
                            "R"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceRange)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TagDecl::*)(clang::SourceRange)",
                    "name": "setBraceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::TagDecl::*)() const",
                    "name": "getInnerLocStart",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::TagDecl::*)() const",
                    "name": "getOuterLocStart",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::TagDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TagDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::TagDecl *",
                    "signature": "clang::TagDecl * (clang::TagDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TagDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::TagDecl *",
                    "signature": "const clang::TagDecl * (clang::TagDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "name": "isThisDeclarationADefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "name": "isCompleteDefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TagDecl::*)(bool)",
                    "name": "setCompleteDefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "name": "isCompleteDefinitionRequired",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TagDecl::*)(bool)",
                    "name": "setCompleteDefinitionRequired",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "name": "isBeingDefined",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "name": "isEmbeddedInDeclarator",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [
                        [
                            "bool",
                            "isInDeclarator"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TagDecl::*)(bool)",
                    "name": "setEmbeddedInDeclarator",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "name": "isFreeStanding",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [
                        [
                            "bool",
                            "isFreeStanding"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TagDecl::*)(bool)",
                    "name": "setFreeStanding",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "name": "mayHaveOutOfDateDef",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "name": "isDependentType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TagDecl::*)()",
                    "name": "startDefinition",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TagDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TagDecl *",
                    "signature": "clang::TagDecl * (clang::TagDecl::*)() const",
                    "name": "getDefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::TagDecl::*)() const",
                    "name": "getKindName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TagDecl::TagKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TagTypeKind",
                    "signature": "clang::TagTypeKind (clang::TagDecl::*)() const",
                    "name": "getTagKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [
                        [
                            "clang::TagTypeKind",
                            "TK"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TagDecl::TagKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TagDecl::*)(clang::TagTypeKind)",
                    "name": "setTagKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "name": "isStruct",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "name": "isInterface",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "name": "isClass",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "name": "isUnion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "name": "isEnum",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TagDecl::*)() const",
                    "name": "hasNameForLinkage",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypedefNameDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypedefNameDecl *",
                    "signature": "clang::TypedefNameDecl * (clang::TagDecl::*)() const",
                    "name": "getTypedefNameForAnonDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [
                        [
                            "clang::TypedefNameDecl *",
                            "TDD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypedefNameDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TagDecl::*)(clang::TypedefNameDecl *)",
                    "name": "setTypedefNameForAnonDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifier *",
                    "signature": "clang::NestedNameSpecifier * (clang::TagDecl::*)() const",
                    "name": "getQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "signature": "clang::NestedNameSpecifierLoc (clang::TagDecl::*)() const",
                    "name": "getQualifierLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [
                        [
                            "clang::NestedNameSpecifierLoc",
                            "QualifierLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::NestedNameSpecifierLoc)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TagDecl::*)(clang::NestedNameSpecifierLoc)",
                    "name": "setQualifierInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::TagDecl::*)() const",
                    "name": "getNumTemplateParameterLists",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TagDecl",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateParameterList *(unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateParameterList *",
                    "signature": "clang::TemplateParameterList * (clang::TagDecl::*)(unsigned int) const",
                    "name": "getTemplateParameterList",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TagDecl",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Context"
                        ],
                        [
                            "llvm::ArrayRef<clang::TemplateParameterList *>",
                            "TPLists"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ASTContext &, ArrayRef<clang::TemplateParameterList *>)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TagDecl::*)(clang::ASTContext &, llvm::ArrayRef<clang::TemplateParameterList *>)",
                    "name": "setTemplateParameterListsInfo",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::TypeDecl",
                "clang::DeclContext"
            ],
            "name": "TagDecl"
        },
        {
            "typename": "clang::EnumDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::EnumDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::EnumDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::EnumDecl *",
                    "signature": "clang::EnumDecl * (clang::EnumDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::EnumDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::EnumDecl *",
                    "signature": "const clang::EnumDecl * (clang::EnumDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::EnumDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::EnumDecl *",
                    "signature": "clang::EnumDecl * (clang::EnumDecl::*)()",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::EnumDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::EnumDecl *",
                    "signature": "const clang::EnumDecl * (clang::EnumDecl::*)() const",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::EnumDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::EnumDecl *",
                    "signature": "clang::EnumDecl * (clang::EnumDecl::*)()",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::EnumDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::EnumDecl *",
                    "signature": "const clang::EnumDecl * (clang::EnumDecl::*)() const",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::EnumDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::EnumDecl *",
                    "signature": "clang::EnumDecl * (clang::EnumDecl::*)() const",
                    "name": "getDefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [
                        [
                            "clang::QualType",
                            "NewType"
                        ],
                        [
                            "clang::QualType",
                            "PromotionType"
                        ],
                        [
                            "unsigned int",
                            "NumPositiveBits"
                        ],
                        [
                            "unsigned int",
                            "NumNegativeBits"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType, clang::QualType, unsigned int, unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::EnumDecl::*)(clang::QualType, clang::QualType, unsigned int, unsigned int)",
                    "name": "completeDefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::EnumDecl::enumerator_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::EnumConstantDecl> >",
                    "signature": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::EnumConstantDecl> > (clang::EnumDecl::*)() const",
                    "name": "enumerators",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::EnumDecl::*)() const",
                    "name": "getPromotionType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::EnumDecl::*)(clang::QualType)",
                    "name": "setPromotionType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::EnumDecl::*)() const",
                    "name": "getIntegerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::EnumDecl::*)(clang::QualType)",
                    "name": "setIntegerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "TInfo"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::EnumDecl::*)(clang::TypeSourceInfo *)",
                    "name": "setIntegerTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::EnumDecl::*)() const",
                    "name": "getIntegerTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::EnumDecl::*)() const",
                    "name": "getIntegerTypeRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::EnumDecl::*)() const",
                    "name": "getNumPositiveBits",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::EnumDecl::*)() const",
                    "name": "getNumNegativeBits",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::EnumDecl::*)() const",
                    "name": "isScoped",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::EnumDecl::*)() const",
                    "name": "isScopedUsingClassTag",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::EnumDecl::*)() const",
                    "name": "isFixed",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::EnumDecl::*)()",
                    "name": "getODRHash",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::EnumDecl::*)() const",
                    "name": "isComplete",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::EnumDecl::*)() const",
                    "name": "isClosed",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::EnumDecl::*)() const",
                    "name": "isClosedFlag",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::EnumDecl::*)() const",
                    "name": "isClosedNonFlag",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::EnumDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::EnumDecl *",
                    "signature": "clang::EnumDecl * (clang::EnumDecl::*)() const",
                    "name": "getTemplateInstantiationPattern",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::EnumDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::EnumDecl *",
                    "signature": "clang::EnumDecl * (clang::EnumDecl::*)() const",
                    "name": "getInstantiatedFromMemberEnum",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateSpecializationKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateSpecializationKind",
                    "signature": "clang::TemplateSpecializationKind (clang::EnumDecl::*)() const",
                    "name": "getTemplateSpecializationKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ],
                        [
                            "clang::SourceLocation",
                            "PointOfInstantiation"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::EnumDecl::*)(clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "name": "setTemplateSpecializationKind",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::EnumDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::MemberSpecializationInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::MemberSpecializationInfo *",
                    "signature": "clang::MemberSpecializationInfo * (clang::EnumDecl::*)() const",
                    "name": "getMemberSpecializationInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::EnumDecl",
                    "args": [
                        [
                            "clang::EnumDecl *",
                            "ED"
                        ],
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::EnumDecl *, clang::TemplateSpecializationKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::EnumDecl::*)(clang::EnumDecl *, clang::TemplateSpecializationKind)",
                    "name": "setInstantiationOfMemberEnum",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::TagDecl"
            ],
            "name": "EnumDecl"
        },
        {
            "typename": "clang::RecordDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::RecordDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::RecordDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::RecordDecl *",
                    "signature": "clang::RecordDecl * (clang::RecordDecl::*)()",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::RecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::RecordDecl *",
                    "signature": "const clang::RecordDecl * (clang::RecordDecl::*)() const",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::RecordDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::RecordDecl *",
                    "signature": "clang::RecordDecl * (clang::RecordDecl::*)()",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::RecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::RecordDecl *",
                    "signature": "const clang::RecordDecl * (clang::RecordDecl::*)() const",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "name": "hasFlexibleArrayMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::RecordDecl::*)(bool)",
                    "name": "setHasFlexibleArrayMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "name": "isAnonymousStructOrUnion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [
                        [
                            "bool",
                            "Anon"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::RecordDecl::*)(bool)",
                    "name": "setAnonymousStructOrUnion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "name": "hasObjectMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [
                        [
                            "bool",
                            "val"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::RecordDecl::*)(bool)",
                    "name": "setHasObjectMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "name": "hasVolatileMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [
                        [
                            "bool",
                            "val"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::RecordDecl::*)(bool)",
                    "name": "setHasVolatileMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "name": "hasLoadedFieldsFromExternalStorage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [
                        [
                            "bool",
                            "val"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::RecordDecl::*)(bool) const",
                    "name": "setHasLoadedFieldsFromExternalStorage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "name": "isNonTrivialToPrimitiveDefaultInitialize",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::RecordDecl::*)(bool)",
                    "name": "setNonTrivialToPrimitiveDefaultInitialize",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "name": "isNonTrivialToPrimitiveCopy",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::RecordDecl::*)(bool)",
                    "name": "setNonTrivialToPrimitiveCopy",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "name": "isNonTrivialToPrimitiveDestroy",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::RecordDecl::*)(bool)",
                    "name": "setNonTrivialToPrimitiveDestroy",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "name": "canPassInRegisters",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::RecordDecl::ArgPassingKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::RecordDecl::ArgPassingKind",
                    "signature": "clang::RecordDecl::ArgPassingKind (clang::RecordDecl::*)() const",
                    "name": "getArgPassingRestrictions",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [
                        [
                            "clang::RecordDecl::ArgPassingKind",
                            "Kind"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::RecordDecl::ArgPassingKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::RecordDecl::*)(clang::RecordDecl::ArgPassingKind)",
                    "name": "setArgPassingRestrictions",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "name": "isParamDestroyedInCallee",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::RecordDecl::*)(bool)",
                    "name": "setParamDestroyedInCallee",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "name": "isInjectedClassName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "name": "isLambda",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "name": "isCapturedRecord",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::RecordDecl::*)()",
                    "name": "setCapturedRecord",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::RecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::RecordDecl *",
                    "signature": "clang::RecordDecl * (clang::RecordDecl::*)() const",
                    "name": "getDefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::RecordDecl::field_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::FieldDecl> >",
                    "signature": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::FieldDecl> > (clang::RecordDecl::*)() const",
                    "name": "fields",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)() const",
                    "name": "field_empty",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::RecordDecl::*)()",
                    "name": "completeDefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)(const clang::ASTContext &) const",
                    "name": "isMsStruct",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RecordDecl",
                    "args": [
                        [
                            "bool",
                            "EmitRemark"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RecordDecl::*)(bool) const",
                    "name": "mayInsertExtraPadding",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::RecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FieldDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::FieldDecl *",
                    "signature": "const clang::FieldDecl * (clang::RecordDecl::*)() const",
                    "name": "findFirstNamedDataMember",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::TagDecl"
            ],
            "name": "RecordDecl"
        },
        {
            "typename": "clang::FileScopeAsmDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::FileScopeAsmDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::FileScopeAsmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::FileScopeAsmDecl::*)() const",
                    "name": "getAsmLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FileScopeAsmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::FileScopeAsmDecl::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FileScopeAsmDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FileScopeAsmDecl::*)(clang::SourceLocation)",
                    "name": "setRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FileScopeAsmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::FileScopeAsmDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FileScopeAsmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::StringLiteral *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::StringLiteral *",
                    "signature": "const clang::StringLiteral * (clang::FileScopeAsmDecl::*)() const",
                    "name": "getAsmString",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FileScopeAsmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::StringLiteral *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::StringLiteral *",
                    "signature": "clang::StringLiteral * (clang::FileScopeAsmDecl::*)()",
                    "name": "getAsmString",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::FileScopeAsmDecl",
                    "args": [
                        [
                            "clang::StringLiteral *",
                            "Asm"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::StringLiteral *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FileScopeAsmDecl::*)(clang::StringLiteral *)",
                    "name": "setAsmString",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Decl"
            ],
            "name": "FileScopeAsmDecl"
        },
        {
            "typename": "clang::BlockDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::BlockDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::BlockDecl::*)() const",
                    "name": "getCaretLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BlockDecl::*)() const",
                    "name": "isVariadic",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [
                        [
                            "bool",
                            "value"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BlockDecl::*)(bool)",
                    "name": "setIsVariadic",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CompoundStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CompoundStmt *",
                    "signature": "clang::CompoundStmt * (clang::BlockDecl::*)() const",
                    "name": "getCompoundBody",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::BlockDecl::*)() const",
                    "name": "getBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [
                        [
                            "clang::CompoundStmt *",
                            "B"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CompoundStmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BlockDecl::*)(clang::CompoundStmt *)",
                    "name": "setBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "Sig"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BlockDecl::*)(clang::TypeSourceInfo *)",
                    "name": "setSignatureAsWritten",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::BlockDecl::*)() const",
                    "name": "getSignatureAsWritten",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::ParmVarDecl *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::ParmVarDecl *>",
                    "signature": "llvm::ArrayRef<clang::ParmVarDecl *> (clang::BlockDecl::*)() const",
                    "name": "parameters",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "MutableArrayRef<clang::ParmVarDecl *> ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::MutableArrayRef<clang::ParmVarDecl *>",
                    "signature": "llvm::MutableArrayRef<clang::ParmVarDecl *> (clang::BlockDecl::*)()",
                    "name": "parameters",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BlockDecl::*)() const",
                    "name": "param_empty",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "size_t () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (clang::BlockDecl::*)() const",
                    "name": "param_size",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::BlockDecl::*)() const",
                    "name": "getNumParams",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BlockDecl",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::ParmVarDecl *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::ParmVarDecl *",
                    "signature": "const clang::ParmVarDecl * (clang::BlockDecl::*)(unsigned int) const",
                    "name": "getParamDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BlockDecl",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::ParmVarDecl *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::ParmVarDecl *",
                    "signature": "clang::ParmVarDecl * (clang::BlockDecl::*)(unsigned int)",
                    "name": "getParamDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [
                        [
                            "llvm::ArrayRef<clang::ParmVarDecl *>",
                            "NewParamInfo"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (ArrayRef<clang::ParmVarDecl *>)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BlockDecl::*)(llvm::ArrayRef<clang::ParmVarDecl *>)",
                    "name": "setParams",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BlockDecl::*)() const",
                    "name": "hasCaptures",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::BlockDecl::*)() const",
                    "name": "getNumCaptures",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::BlockDecl::Capture> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::BlockDecl::Capture>",
                    "signature": "llvm::ArrayRef<clang::BlockDecl::Capture> (clang::BlockDecl::*)() const",
                    "name": "captures",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BlockDecl::*)() const",
                    "name": "capturesCXXThis",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [
                        [
                            "bool",
                            "B"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BlockDecl::*)(bool)",
                    "name": "setCapturesCXXThis",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BlockDecl::*)() const",
                    "name": "blockMissingReturnType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [
                        [
                            "bool",
                            "val"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BlockDecl::*)(bool)",
                    "name": "setBlockMissingReturnType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BlockDecl::*)() const",
                    "name": "isConversionFromLambda",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [
                        [
                            "bool",
                            "val"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BlockDecl::*)(bool)",
                    "name": "setIsConversionFromLambda",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BlockDecl::*)() const",
                    "name": "doesNotEscape",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [
                        [
                            "bool",
                            "B"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BlockDecl::*)(bool)",
                    "name": "setDoesNotEscape",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "var"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::VarDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BlockDecl::*)(const clang::VarDecl *) const",
                    "name": "capturesVariable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Context"
                        ],
                        [
                            "llvm::ArrayRef<clang::BlockDecl::Capture>",
                            "Captures"
                        ],
                        [
                            "bool",
                            "CapturesCXXThis"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ASTContext &, ArrayRef<clang::BlockDecl::Capture>, bool)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BlockDecl::*)(clang::ASTContext &, llvm::ArrayRef<clang::BlockDecl::Capture>, bool)",
                    "name": "setCaptures",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::BlockDecl::*)() const",
                    "name": "getBlockManglingNumber",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Decl *",
                    "signature": "clang::Decl * (clang::BlockDecl::*)() const",
                    "name": "getBlockManglingContextDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [
                        [
                            "unsigned int",
                            "Number"
                        ],
                        [
                            "clang::Decl *",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int, clang::Decl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BlockDecl::*)(unsigned int, clang::Decl *)",
                    "name": "setBlockMangling",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::BlockDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Decl",
                "clang::DeclContext"
            ],
            "name": "BlockDecl"
        },
        {
            "typename": "clang::CapturedDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::CapturedDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CapturedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CapturedDecl::*)() const",
                    "name": "getBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedDecl",
                    "args": [
                        [
                            "clang::Stmt *",
                            "B"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CapturedDecl::*)(clang::Stmt *)",
                    "name": "setBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CapturedDecl::*)() const",
                    "name": "isNothrow",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedDecl",
                    "args": [
                        [
                            "bool",
                            "Nothrow"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CapturedDecl::*)(bool)",
                    "name": "setNothrow",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CapturedDecl::*)() const",
                    "name": "getNumParams",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CapturedDecl",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::ImplicitParamDecl *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ImplicitParamDecl *",
                    "signature": "clang::ImplicitParamDecl * (clang::CapturedDecl::*)(unsigned int) const",
                    "name": "getParam",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedDecl",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ],
                        [
                            "clang::ImplicitParamDecl *",
                            "P"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int, clang::ImplicitParamDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CapturedDecl::*)(unsigned int, clang::ImplicitParamDecl *)",
                    "name": "setParam",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::ImplicitParamDecl *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::ImplicitParamDecl *>",
                    "signature": "llvm::ArrayRef<clang::ImplicitParamDecl *> (clang::CapturedDecl::*)() const",
                    "name": "parameters",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "MutableArrayRef<clang::ImplicitParamDecl *> ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::MutableArrayRef<clang::ImplicitParamDecl *>",
                    "signature": "llvm::MutableArrayRef<clang::ImplicitParamDecl *> (clang::CapturedDecl::*)()",
                    "name": "parameters",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CapturedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ImplicitParamDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ImplicitParamDecl *",
                    "signature": "clang::ImplicitParamDecl * (clang::CapturedDecl::*)() const",
                    "name": "getContextParam",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedDecl",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ],
                        [
                            "clang::ImplicitParamDecl *",
                            "P"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int, clang::ImplicitParamDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CapturedDecl::*)(unsigned int, clang::ImplicitParamDecl *)",
                    "name": "setContextParam",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CapturedDecl::*)() const",
                    "name": "getContextParamPosition",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Decl",
                "clang::DeclContext"
            ],
            "name": "CapturedDecl"
        },
        {
            "typename": "clang::ImportDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::ImportDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ImportDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Module *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Module *",
                    "signature": "clang::Module * (clang::ImportDecl::*)() const",
                    "name": "getImportedModule",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ImportDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::SourceLocation> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::SourceLocation>",
                    "signature": "llvm::ArrayRef<clang::SourceLocation> (clang::ImportDecl::*)() const",
                    "name": "getIdentifierLocs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ImportDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::ImportDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Decl"
            ],
            "name": "ImportDecl"
        },
        {
            "typename": "clang::ExportDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::ExportDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ExportDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ExportDecl::*)() const",
                    "name": "getExportLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExportDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ExportDecl::*)() const",
                    "name": "getRBraceLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExportDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ExportDecl::*)(clang::SourceLocation)",
                    "name": "setRBraceLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExportDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ExportDecl::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExportDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::ExportDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Decl",
                "clang::DeclContext"
            ],
            "name": "ExportDecl"
        },
        {
            "typename": "clang::EmptyDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::EmptyDecl>::type",
            "methods": [],
            "node": true,
            "supers": [
                "clang::Decl"
            ],
            "name": "EmptyDecl"
        },
        {
            "typename": "clang::Stmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::Stmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::StmtClass () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt::StmtClass",
                    "signature": "clang::Stmt::StmtClass (clang::Stmt::*)() const",
                    "name": "getStmtClass",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const char *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const char *",
                    "signature": "const char * (clang::Stmt::*)() const",
                    "name": "getStmtClassName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::Stmt::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::Stmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::Stmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Stmt::*)() const",
                    "name": "dump",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [
                        [
                            "clang::SourceManager &",
                            "SM"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceManager &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Stmt::*)(clang::SourceManager &) const",
                    "name": "dump",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "clang::SourceManager &",
                            "SM"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, clang::SourceManager &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Stmt::*)(llvm::raw_ostream &, clang::SourceManager &) const",
                    "name": "dump",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Stmt::*)(llvm::raw_ostream &) const",
                    "name": "dump",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "int64_t (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "long",
                    "signature": "long (clang::Stmt::*)(const clang::ASTContext &) const",
                    "name": "getID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Stmt::*)() const",
                    "name": "dumpColor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Stmt::*)(const clang::ASTContext &) const",
                    "name": "dumpPretty",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "clang::PrinterHelper *",
                            "Helper"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "unsigned int",
                            "Indentation"
                        ],
                        [
                            "llvm::StringRef",
                            "NewlineSymbol"
                        ],
                        [
                            "const clang::ASTContext *",
                            "Context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, clang::PrinterHelper *, const clang::PrintingPolicy &, unsigned int, llvm::StringRef, const clang::ASTContext *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Stmt::*)(llvm::raw_ostream &, clang::PrinterHelper *, const clang::PrintingPolicy &, unsigned int, llvm::StringRef, const clang::ASTContext *) const",
                    "name": "printPretty",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Stmt::*)() const",
                    "name": "viewAST",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Stmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::Stmt::*)()",
                    "name": "IgnoreImplicit",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Stmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::Stmt::*)() const",
                    "name": "IgnoreImplicit",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Stmt",
                    "args": [
                        [
                            "bool",
                            "IgnoreCaptured"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *(bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::Stmt::*)(bool)",
                    "name": "IgnoreContainers",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Stmt",
                    "args": [
                        [
                            "bool",
                            "IgnoreCaptured"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *(bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::Stmt::*)(bool) const",
                    "name": "IgnoreContainers",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Stmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::Stmt::*)() const",
                    "name": "stripLabelLikeStatements",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Stmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::Stmt::*)()",
                    "name": "stripLabelLikeStatements",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::Stmt::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::Stmt::*)() const",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [
                        [
                            "llvm::FoldingSetNodeID &",
                            "ID"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ],
                        [
                            "bool",
                            "Canonical"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::FoldingSetNodeID &, const clang::ASTContext &, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Stmt::*)(llvm::FoldingSetNodeID &, const clang::ASTContext &, bool) const",
                    "name": "Profile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Stmt",
                    "args": [
                        [
                            "llvm::FoldingSetNodeID &",
                            "ID"
                        ],
                        [
                            "clang::ODRHash &",
                            "Hash"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::FoldingSetNodeID &, clang::ODRHash &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Stmt::*)(llvm::FoldingSetNodeID &, clang::ODRHash &) const",
                    "name": "ProcessODRHash",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [],
            "name": "Stmt"
        },
        {
            "typename": "clang::DeclStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::DeclStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::DeclStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclStmt::*)() const",
                    "name": "isSingleDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Decl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Decl *",
                    "signature": "const clang::Decl * (clang::DeclStmt::*)() const",
                    "name": "getSingleDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Decl *",
                    "signature": "clang::Decl * (clang::DeclStmt::*)()",
                    "name": "getSingleDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DeclStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclGroupRef () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::DeclGroupRef",
                    "signature": "const clang::DeclGroupRef (clang::DeclStmt::*)() const",
                    "name": "getDeclGroup",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DeclStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclGroupRef ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::DeclGroupRef",
                    "signature": "clang::DeclGroupRef (clang::DeclStmt::*)()",
                    "name": "getDeclGroup",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DeclStmt",
                    "args": [
                        [
                            "clang::DeclGroupRef",
                            "DGR"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::DeclGroupRef)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclStmt::*)(clang::DeclGroupRef)",
                    "name": "setDeclGroup",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclStmt::*)(clang::SourceLocation)",
                    "name": "setStartLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclStmt::*)(clang::SourceLocation)",
                    "name": "setEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::DeclStmt::*)()",
                    "name": "children",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclStmt::decl_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::Decl **>",
                    "signature": "llvm::iterator_range<clang::Decl **> (clang::DeclStmt::*)()",
                    "name": "decls",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DeclStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclStmt::decl_const_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::Decl *const *>",
                    "signature": "llvm::iterator_range<clang::Decl *const *> (clang::DeclStmt::*)() const",
                    "name": "decls",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "DeclStmt"
        },
        {
            "typename": "clang::NullStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::NullStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::NullStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::NullStmt::*)() const",
                    "name": "getSemiLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NullStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::NullStmt::*)(clang::SourceLocation)",
                    "name": "setSemiLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NullStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NullStmt::*)() const",
                    "name": "hasLeadingEmptyMacro",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NullStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::NullStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NullStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::NullStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NullStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::NullStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "NullStmt"
        },
        {
            "typename": "clang::CompoundStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CompoundStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CompoundStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CompoundStmt::*)() const",
                    "name": "body_empty",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CompoundStmt::*)() const",
                    "name": "size",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CompoundStmt::body_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::Stmt **>",
                    "signature": "llvm::iterator_range<clang::Stmt **> (clang::CompoundStmt::*)()",
                    "name": "body",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CompoundStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CompoundStmt::*)()",
                    "name": "body_front",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CompoundStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CompoundStmt::*)()",
                    "name": "body_back",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CompoundStmt::*)(clang::Stmt *)",
                    "name": "setLastStmt",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CompoundStmt::body_const_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::Stmt *const *>",
                    "signature": "llvm::iterator_range<clang::Stmt *const *> (clang::CompoundStmt::*)() const",
                    "name": "body",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CompoundStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::CompoundStmt::*)() const",
                    "name": "body_front",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CompoundStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::CompoundStmt::*)() const",
                    "name": "body_back",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CompoundStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CompoundStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CompoundStmt::*)() const",
                    "name": "getLBracLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CompoundStmt::*)() const",
                    "name": "getRBracLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CompoundStmt::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::CompoundStmt::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "CompoundStmt"
        },
        {
            "typename": "clang::SwitchCase",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::SwitchCase>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchCase",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::SwitchCase *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::SwitchCase *",
                    "signature": "const clang::SwitchCase * (clang::SwitchCase::*)() const",
                    "name": "getNextSwitchCase",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchCase",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SwitchCase *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::SwitchCase *",
                    "signature": "clang::SwitchCase * (clang::SwitchCase::*)()",
                    "name": "getNextSwitchCase",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchCase",
                    "args": [
                        [
                            "clang::SwitchCase *",
                            "SC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SwitchCase *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SwitchCase::*)(clang::SwitchCase *)",
                    "name": "setNextSwitchCase",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchCase",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SwitchCase::*)() const",
                    "name": "getKeywordLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchCase",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SwitchCase::*)(clang::SourceLocation)",
                    "name": "setKeywordLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchCase",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SwitchCase::*)() const",
                    "name": "getColonLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchCase",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SwitchCase::*)(clang::SourceLocation)",
                    "name": "setColonLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchCase",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::SwitchCase::*)()",
                    "name": "getSubStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchCase",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::SwitchCase::*)() const",
                    "name": "getSubStmt",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchCase",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SwitchCase::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchCase",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SwitchCase::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "SwitchCase"
        },
        {
            "typename": "clang::CaseStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CaseStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CaseStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CaseStmt::*)() const",
                    "name": "caseStmtIsGNURange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CaseStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CaseStmt::*)() const",
                    "name": "getCaseLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CaseStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CaseStmt::*)(clang::SourceLocation)",
                    "name": "setCaseLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CaseStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CaseStmt::*)() const",
                    "name": "getEllipsisLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CaseStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CaseStmt::*)(clang::SourceLocation)",
                    "name": "setEllipsisLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CaseStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CaseStmt::*)()",
                    "name": "getLHS",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CaseStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CaseStmt::*)() const",
                    "name": "getLHS",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CaseStmt",
                    "args": [
                        [
                            "clang::Expr *",
                            "Val"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CaseStmt::*)(clang::Expr *)",
                    "name": "setLHS",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CaseStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CaseStmt::*)()",
                    "name": "getRHS",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CaseStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CaseStmt::*)() const",
                    "name": "getRHS",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CaseStmt",
                    "args": [
                        [
                            "clang::Expr *",
                            "Val"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CaseStmt::*)(clang::Expr *)",
                    "name": "setRHS",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CaseStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CaseStmt::*)()",
                    "name": "getSubStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CaseStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::CaseStmt::*)() const",
                    "name": "getSubStmt",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CaseStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CaseStmt::*)(clang::Stmt *)",
                    "name": "setSubStmt",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CaseStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CaseStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CaseStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CaseStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CaseStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CaseStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::SwitchCase"
            ],
            "name": "CaseStmt"
        },
        {
            "typename": "clang::DefaultStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::DefaultStmt>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DefaultStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::DefaultStmt::*)()",
                    "name": "getSubStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DefaultStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::DefaultStmt::*)() const",
                    "name": "getSubStmt",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DefaultStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DefaultStmt::*)(clang::Stmt *)",
                    "name": "setSubStmt",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DefaultStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DefaultStmt::*)() const",
                    "name": "getDefaultLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DefaultStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DefaultStmt::*)(clang::SourceLocation)",
                    "name": "setDefaultLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DefaultStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DefaultStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DefaultStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DefaultStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DefaultStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::DefaultStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::SwitchCase"
            ],
            "name": "DefaultStmt"
        },
        {
            "typename": "clang::LabelStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::LabelStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::LabelStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::LabelStmt::*)() const",
                    "name": "getIdentLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LabelStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::LabelStmt::*)(clang::SourceLocation)",
                    "name": "setIdentLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::LabelStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LabelDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::LabelDecl *",
                    "signature": "clang::LabelDecl * (clang::LabelStmt::*)() const",
                    "name": "getDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LabelStmt",
                    "args": [
                        [
                            "clang::LabelDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::LabelDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::LabelStmt::*)(clang::LabelDecl *)",
                    "name": "setDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LabelStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const char *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const char *",
                    "signature": "const char * (clang::LabelStmt::*)() const",
                    "name": "getName",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::LabelStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::LabelStmt::*)()",
                    "name": "getSubStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::LabelStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::LabelStmt::*)() const",
                    "name": "getSubStmt",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::LabelStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "SS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::LabelStmt::*)(clang::Stmt *)",
                    "name": "setSubStmt",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LabelStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::LabelStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LabelStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::LabelStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LabelStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::LabelStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "LabelStmt"
        },
        {
            "typename": "clang::AttributedStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::AttributedStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::AttributedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AttributedStmt::*)() const",
                    "name": "getAttrLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AttributedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<const clang::Attr *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<const clang::Attr *>",
                    "signature": "llvm::ArrayRef<const clang::Attr *> (clang::AttributedStmt::*)() const",
                    "name": "getAttrs",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AttributedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::AttributedStmt::*)()",
                    "name": "getSubStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AttributedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::AttributedStmt::*)() const",
                    "name": "getSubStmt",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::AttributedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AttributedStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AttributedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AttributedStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AttributedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::AttributedStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "AttributedStmt"
        },
        {
            "typename": "clang::IfStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::IfStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::IfStmt::*)() const",
                    "name": "hasInitStorage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::IfStmt::*)() const",
                    "name": "hasVarStorage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::IfStmt::*)() const",
                    "name": "hasElseStorage",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::IfStmt::*)()",
                    "name": "getCond",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::IfStmt::*)() const",
                    "name": "getCond",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [
                        [
                            "clang::Expr *",
                            "Cond"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::IfStmt::*)(clang::Expr *)",
                    "name": "setCond",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::IfStmt::*)()",
                    "name": "getThen",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::IfStmt::*)() const",
                    "name": "getThen",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "Then"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::IfStmt::*)(clang::Stmt *)",
                    "name": "setThen",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::IfStmt::*)()",
                    "name": "getElse",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::IfStmt::*)() const",
                    "name": "getElse",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "Else"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::IfStmt::*)(clang::Stmt *)",
                    "name": "setElse",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::IfStmt::*)()",
                    "name": "getConditionVariable",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::VarDecl *",
                    "signature": "const clang::VarDecl * (clang::IfStmt::*)() const",
                    "name": "getConditionVariable",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::VarDecl *",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &, clang::VarDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::IfStmt::*)(const clang::ASTContext &, clang::VarDecl *)",
                    "name": "setConditionVariable",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclStmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclStmt *",
                    "signature": "clang::DeclStmt * (clang::IfStmt::*)()",
                    "name": "getConditionVariableDeclStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclStmt *",
                    "signature": "const clang::DeclStmt * (clang::IfStmt::*)() const",
                    "name": "getConditionVariableDeclStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::IfStmt::*)()",
                    "name": "getInit",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::IfStmt::*)() const",
                    "name": "getInit",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "Init"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::IfStmt::*)(clang::Stmt *)",
                    "name": "setInit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::IfStmt::*)() const",
                    "name": "getIfLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "IfLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::IfStmt::*)(clang::SourceLocation)",
                    "name": "setIfLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::IfStmt::*)() const",
                    "name": "getElseLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "ElseLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::IfStmt::*)(clang::SourceLocation)",
                    "name": "setElseLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::IfStmt::*)() const",
                    "name": "isConstexpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [
                        [
                            "bool",
                            "C"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::IfStmt::*)(bool)",
                    "name": "setConstexpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::IfStmt::*)() const",
                    "name": "isObjCAvailabilityCheck",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::IfStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::IfStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IfStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::IfStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "IfStmt"
        },
        {
            "typename": "clang::SwitchStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::SwitchStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SwitchStmt::*)() const",
                    "name": "hasInitStorage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SwitchStmt::*)() const",
                    "name": "hasVarStorage",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::SwitchStmt::*)()",
                    "name": "getCond",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::SwitchStmt::*)() const",
                    "name": "getCond",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [
                        [
                            "clang::Expr *",
                            "Cond"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SwitchStmt::*)(clang::Expr *)",
                    "name": "setCond",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::SwitchStmt::*)()",
                    "name": "getBody",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::SwitchStmt::*)() const",
                    "name": "getBody",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "Body"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SwitchStmt::*)(clang::Stmt *)",
                    "name": "setBody",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::SwitchStmt::*)()",
                    "name": "getInit",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::SwitchStmt::*)() const",
                    "name": "getInit",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "Init"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SwitchStmt::*)(clang::Stmt *)",
                    "name": "setInit",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::SwitchStmt::*)()",
                    "name": "getConditionVariable",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::VarDecl *",
                    "signature": "const clang::VarDecl * (clang::SwitchStmt::*)() const",
                    "name": "getConditionVariable",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::VarDecl *",
                            "VD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &, clang::VarDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SwitchStmt::*)(const clang::ASTContext &, clang::VarDecl *)",
                    "name": "setConditionVariable",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclStmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclStmt *",
                    "signature": "clang::DeclStmt * (clang::SwitchStmt::*)()",
                    "name": "getConditionVariableDeclStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclStmt *",
                    "signature": "const clang::DeclStmt * (clang::SwitchStmt::*)() const",
                    "name": "getConditionVariableDeclStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SwitchCase *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::SwitchCase *",
                    "signature": "clang::SwitchCase * (clang::SwitchStmt::*)()",
                    "name": "getSwitchCaseList",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::SwitchCase *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::SwitchCase *",
                    "signature": "const clang::SwitchCase * (clang::SwitchStmt::*)() const",
                    "name": "getSwitchCaseList",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [
                        [
                            "clang::SwitchCase *",
                            "SC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SwitchCase *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SwitchStmt::*)(clang::SwitchCase *)",
                    "name": "setSwitchCaseList",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SwitchStmt::*)() const",
                    "name": "getSwitchLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SwitchStmt::*)(clang::SourceLocation)",
                    "name": "setSwitchLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ],
                        [
                            "clang::SourceLocation",
                            "SL"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *, clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SwitchStmt::*)(clang::Stmt *, clang::SourceLocation)",
                    "name": "setBody",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [
                        [
                            "clang::SwitchCase *",
                            "SC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SwitchCase *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SwitchStmt::*)(clang::SwitchCase *)",
                    "name": "addSwitchCase",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SwitchStmt::*)()",
                    "name": "setAllEnumCasesCovered",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SwitchStmt::*)() const",
                    "name": "isAllEnumCasesCovered",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SwitchStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SwitchStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SwitchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SwitchStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "SwitchStmt"
        },
        {
            "typename": "clang::WhileStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::WhileStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::WhileStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::WhileStmt::*)() const",
                    "name": "hasVarStorage",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::WhileStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::WhileStmt::*)()",
                    "name": "getCond",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::WhileStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::WhileStmt::*)() const",
                    "name": "getCond",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::WhileStmt",
                    "args": [
                        [
                            "clang::Expr *",
                            "Cond"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::WhileStmt::*)(clang::Expr *)",
                    "name": "setCond",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::WhileStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::WhileStmt::*)()",
                    "name": "getBody",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::WhileStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::WhileStmt::*)() const",
                    "name": "getBody",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::WhileStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "Body"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::WhileStmt::*)(clang::Stmt *)",
                    "name": "setBody",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::WhileStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::WhileStmt::*)()",
                    "name": "getConditionVariable",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::WhileStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::VarDecl *",
                    "signature": "const clang::VarDecl * (clang::WhileStmt::*)() const",
                    "name": "getConditionVariable",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::WhileStmt",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::VarDecl *",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &, clang::VarDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::WhileStmt::*)(const clang::ASTContext &, clang::VarDecl *)",
                    "name": "setConditionVariable",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::WhileStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclStmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclStmt *",
                    "signature": "clang::DeclStmt * (clang::WhileStmt::*)()",
                    "name": "getConditionVariableDeclStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::WhileStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclStmt *",
                    "signature": "const clang::DeclStmt * (clang::WhileStmt::*)() const",
                    "name": "getConditionVariableDeclStmt",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::WhileStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::WhileStmt::*)() const",
                    "name": "getWhileLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::WhileStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::WhileStmt::*)(clang::SourceLocation)",
                    "name": "setWhileLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::WhileStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::WhileStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::WhileStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::WhileStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::WhileStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::WhileStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "WhileStmt"
        },
        {
            "typename": "clang::DoStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::DoStmt>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::DoStmt::*)()",
                    "name": "getCond",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::DoStmt::*)() const",
                    "name": "getCond",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DoStmt",
                    "args": [
                        [
                            "clang::Expr *",
                            "Cond"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DoStmt::*)(clang::Expr *)",
                    "name": "setCond",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::DoStmt::*)()",
                    "name": "getBody",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::DoStmt::*)() const",
                    "name": "getBody",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DoStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "Body"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DoStmt::*)(clang::Stmt *)",
                    "name": "setBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DoStmt::*)() const",
                    "name": "getDoLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DoStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DoStmt::*)(clang::SourceLocation)",
                    "name": "setDoLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DoStmt::*)() const",
                    "name": "getWhileLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DoStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DoStmt::*)(clang::SourceLocation)",
                    "name": "setWhileLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DoStmt::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DoStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DoStmt::*)(clang::SourceLocation)",
                    "name": "setRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DoStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DoStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::DoStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "DoStmt"
        },
        {
            "typename": "clang::ForStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ForStmt>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::ForStmt::*)()",
                    "name": "getInit",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::ForStmt::*)() const",
                    "name": "getConditionVariable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ForStmt",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "clang::VarDecl *",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &, clang::VarDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ForStmt::*)(const clang::ASTContext &, clang::VarDecl *)",
                    "name": "setConditionVariable",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::DeclStmt *",
                    "signature": "const clang::DeclStmt * (clang::ForStmt::*)() const",
                    "name": "getConditionVariableDeclStmt",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ForStmt::*)()",
                    "name": "getCond",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ForStmt::*)()",
                    "name": "getInc",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::ForStmt::*)()",
                    "name": "getBody",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::ForStmt::*)() const",
                    "name": "getInit",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::ForStmt::*)() const",
                    "name": "getCond",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::ForStmt::*)() const",
                    "name": "getInc",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::ForStmt::*)() const",
                    "name": "getBody",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ForStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ForStmt::*)(clang::Stmt *)",
                    "name": "setInit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ForStmt",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ForStmt::*)(clang::Expr *)",
                    "name": "setCond",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ForStmt",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ForStmt::*)(clang::Expr *)",
                    "name": "setInc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ForStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ForStmt::*)(clang::Stmt *)",
                    "name": "setBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ForStmt::*)() const",
                    "name": "getForLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ForStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ForStmt::*)(clang::SourceLocation)",
                    "name": "setForLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ForStmt::*)() const",
                    "name": "getLParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ForStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ForStmt::*)(clang::SourceLocation)",
                    "name": "setLParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ForStmt::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ForStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ForStmt::*)(clang::SourceLocation)",
                    "name": "setRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ForStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ForStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ForStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ForStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "ForStmt"
        },
        {
            "typename": "clang::GotoStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::GotoStmt>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GotoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LabelDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::LabelDecl *",
                    "signature": "clang::LabelDecl * (clang::GotoStmt::*)() const",
                    "name": "getLabel",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GotoStmt",
                    "args": [
                        [
                            "clang::LabelDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::LabelDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::GotoStmt::*)(clang::LabelDecl *)",
                    "name": "setLabel",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GotoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::GotoStmt::*)() const",
                    "name": "getGotoLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GotoStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::GotoStmt::*)(clang::SourceLocation)",
                    "name": "setGotoLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GotoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::GotoStmt::*)() const",
                    "name": "getLabelLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GotoStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::GotoStmt::*)(clang::SourceLocation)",
                    "name": "setLabelLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GotoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::GotoStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GotoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::GotoStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GotoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::GotoStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "GotoStmt"
        },
        {
            "typename": "clang::IndirectGotoStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::IndirectGotoStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::IndirectGotoStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::IndirectGotoStmt::*)(clang::SourceLocation)",
                    "name": "setGotoLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IndirectGotoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::IndirectGotoStmt::*)() const",
                    "name": "getGotoLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IndirectGotoStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::IndirectGotoStmt::*)(clang::SourceLocation)",
                    "name": "setStarLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IndirectGotoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::IndirectGotoStmt::*)() const",
                    "name": "getStarLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IndirectGotoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::IndirectGotoStmt::*)()",
                    "name": "getTarget",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IndirectGotoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::IndirectGotoStmt::*)() const",
                    "name": "getTarget",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::IndirectGotoStmt",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::IndirectGotoStmt::*)(clang::Expr *)",
                    "name": "setTarget",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IndirectGotoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LabelDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::LabelDecl *",
                    "signature": "clang::LabelDecl * (clang::IndirectGotoStmt::*)()",
                    "name": "getConstantTarget",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::IndirectGotoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::LabelDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::LabelDecl *",
                    "signature": "const clang::LabelDecl * (clang::IndirectGotoStmt::*)() const",
                    "name": "getConstantTarget",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::IndirectGotoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::IndirectGotoStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IndirectGotoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::IndirectGotoStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IndirectGotoStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::IndirectGotoStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "IndirectGotoStmt"
        },
        {
            "typename": "clang::ContinueStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ContinueStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ContinueStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ContinueStmt::*)() const",
                    "name": "getContinueLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ContinueStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ContinueStmt::*)(clang::SourceLocation)",
                    "name": "setContinueLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ContinueStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ContinueStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ContinueStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ContinueStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ContinueStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ContinueStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "ContinueStmt"
        },
        {
            "typename": "clang::BreakStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::BreakStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::BreakStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::BreakStmt::*)() const",
                    "name": "getBreakLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BreakStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BreakStmt::*)(clang::SourceLocation)",
                    "name": "setBreakLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BreakStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::BreakStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BreakStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::BreakStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BreakStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::BreakStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "BreakStmt"
        },
        {
            "typename": "clang::ReturnStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ReturnStmt>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ReturnStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ReturnStmt::*)()",
                    "name": "getRetValue",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ReturnStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::ReturnStmt::*)() const",
                    "name": "getRetValue",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ReturnStmt",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ReturnStmt::*)(clang::Expr *)",
                    "name": "setRetValue",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ReturnStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::VarDecl *",
                    "signature": "const clang::VarDecl * (clang::ReturnStmt::*)() const",
                    "name": "getNRVOCandidate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ReturnStmt",
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "Var"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::VarDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ReturnStmt::*)(const clang::VarDecl *)",
                    "name": "setNRVOCandidate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ReturnStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ReturnStmt::*)() const",
                    "name": "getReturnLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ReturnStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ReturnStmt::*)(clang::SourceLocation)",
                    "name": "setReturnLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ReturnStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ReturnStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ReturnStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ReturnStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ReturnStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ReturnStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "ReturnStmt"
        },
        {
            "typename": "clang::AsmStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::AsmStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AsmStmt::*)() const",
                    "name": "getAsmLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::AsmStmt::*)(clang::SourceLocation)",
                    "name": "setAsmLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::AsmStmt::*)() const",
                    "name": "isSimple",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::AsmStmt::*)(bool)",
                    "name": "setSimple",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::AsmStmt::*)() const",
                    "name": "isVolatile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::AsmStmt::*)(bool)",
                    "name": "setVolatile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AsmStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AsmStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::string (const clang::ASTContext &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::AsmStmt::*)(const clang::ASTContext &) const",
                    "name": "generateAsmString",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::AsmStmt::*)() const",
                    "name": "getNumOutputs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::AsmStmt::*)(unsigned int) const",
                    "name": "getOutputConstraint",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::AsmStmt::*)(unsigned int) const",
                    "name": "isOutputPlusConstraint",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::AsmStmt::*)(unsigned int) const",
                    "name": "getOutputExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::AsmStmt::*)() const",
                    "name": "getNumPlusOperands",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::AsmStmt::*)() const",
                    "name": "getNumInputs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::AsmStmt::*)(unsigned int) const",
                    "name": "getInputConstraint",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::AsmStmt::*)(unsigned int) const",
                    "name": "getInputExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::AsmStmt::*)() const",
                    "name": "getNumClobbers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::AsmStmt::*)(unsigned int) const",
                    "name": "getClobber",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::AsmStmt::inputs_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::Stmt::ExprIterator>",
                    "signature": "llvm::iterator_range<clang::Stmt::ExprIterator> (clang::AsmStmt::*)()",
                    "name": "inputs",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::AsmStmt::inputs_const_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::Stmt::ConstExprIterator>",
                    "signature": "llvm::iterator_range<clang::Stmt::ConstExprIterator> (clang::AsmStmt::*)() const",
                    "name": "inputs",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::AsmStmt::outputs_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::Stmt::ExprIterator>",
                    "signature": "llvm::iterator_range<clang::Stmt::ExprIterator> (clang::AsmStmt::*)()",
                    "name": "outputs",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::AsmStmt::outputs_const_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::Stmt::ConstExprIterator>",
                    "signature": "llvm::iterator_range<clang::Stmt::ConstExprIterator> (clang::AsmStmt::*)() const",
                    "name": "outputs",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::AsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::AsmStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "AsmStmt"
        },
        {
            "typename": "clang::GCCAsmStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::GCCAsmStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::GCCAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::GCCAsmStmt::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::GCCAsmStmt::*)(clang::SourceLocation)",
                    "name": "setRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GCCAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::StringLiteral *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::StringLiteral *",
                    "signature": "const clang::StringLiteral * (clang::GCCAsmStmt::*)() const",
                    "name": "getAsmString",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GCCAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::StringLiteral *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::StringLiteral *",
                    "signature": "clang::StringLiteral * (clang::GCCAsmStmt::*)()",
                    "name": "getAsmString",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "clang::StringLiteral *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::StringLiteral *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::GCCAsmStmt::*)(clang::StringLiteral *)",
                    "name": "setAsmString",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "llvm::SmallVectorImpl<clang::GCCAsmStmt::AsmStringPiece> &",
                            "Pieces"
                        ],
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "unsigned int &",
                            "DiagOffs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (SmallVectorImpl<clang::GCCAsmStmt::AsmStringPiece> &, const clang::ASTContext &, unsigned int &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::GCCAsmStmt::*)(llvm::SmallVectorImpl<clang::GCCAsmStmt::AsmStringPiece> &, const clang::ASTContext &, unsigned int &) const",
                    "name": "AnalyzeAsmString",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::string (const clang::ASTContext &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::GCCAsmStmt::*)(const clang::ASTContext &) const",
                    "name": "generateAsmString",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::IdentifierInfo *(unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::IdentifierInfo *",
                    "signature": "clang::IdentifierInfo * (clang::GCCAsmStmt::*)(unsigned int) const",
                    "name": "getOutputIdentifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::GCCAsmStmt::*)(unsigned int) const",
                    "name": "getOutputName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::GCCAsmStmt::*)(unsigned int) const",
                    "name": "getOutputConstraint",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::StringLiteral *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::StringLiteral *",
                    "signature": "const clang::StringLiteral * (clang::GCCAsmStmt::*)(unsigned int) const",
                    "name": "getOutputConstraintLiteral",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::StringLiteral *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::StringLiteral *",
                    "signature": "clang::StringLiteral * (clang::GCCAsmStmt::*)(unsigned int)",
                    "name": "getOutputConstraintLiteral",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::GCCAsmStmt::*)(unsigned int)",
                    "name": "getOutputExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::GCCAsmStmt::*)(unsigned int) const",
                    "name": "getOutputExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::IdentifierInfo *(unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::IdentifierInfo *",
                    "signature": "clang::IdentifierInfo * (clang::GCCAsmStmt::*)(unsigned int) const",
                    "name": "getInputIdentifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::GCCAsmStmt::*)(unsigned int) const",
                    "name": "getInputName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::GCCAsmStmt::*)(unsigned int) const",
                    "name": "getInputConstraint",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::StringLiteral *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::StringLiteral *",
                    "signature": "const clang::StringLiteral * (clang::GCCAsmStmt::*)(unsigned int) const",
                    "name": "getInputConstraintLiteral",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::StringLiteral *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::StringLiteral *",
                    "signature": "clang::StringLiteral * (clang::GCCAsmStmt::*)(unsigned int)",
                    "name": "getInputConstraintLiteral",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::GCCAsmStmt::*)(unsigned int)",
                    "name": "getInputExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ],
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::GCCAsmStmt::*)(unsigned int, clang::Expr *)",
                    "name": "setInputExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::GCCAsmStmt::*)(unsigned int) const",
                    "name": "getInputExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "llvm::StringRef",
                            "SymbolicName"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "int (llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "int",
                    "signature": "int (clang::GCCAsmStmt::*)(llvm::StringRef) const",
                    "name": "getNamedOperand",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::GCCAsmStmt::*)(unsigned int) const",
                    "name": "getClobber",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::StringLiteral *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::StringLiteral *",
                    "signature": "clang::StringLiteral * (clang::GCCAsmStmt::*)(unsigned int)",
                    "name": "getClobberStringLiteral",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GCCAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::StringLiteral *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::StringLiteral *",
                    "signature": "const clang::StringLiteral * (clang::GCCAsmStmt::*)(unsigned int) const",
                    "name": "getClobberStringLiteral",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::GCCAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::GCCAsmStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GCCAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::GCCAsmStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::AsmStmt"
            ],
            "name": "GCCAsmStmt"
        },
        {
            "typename": "clang::MSAsmStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::MSAsmStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MSAsmStmt::*)() const",
                    "name": "getLBraceLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::MSAsmStmt::*)(clang::SourceLocation)",
                    "name": "setLBraceLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MSAsmStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::MSAsmStmt::*)(clang::SourceLocation)",
                    "name": "setEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::MSAsmStmt::*)() const",
                    "name": "hasBraces",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::MSAsmStmt::*)()",
                    "name": "getNumAsmToks",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MSAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Token *()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::Token *",
                    "signature": "clang::Token * (clang::MSAsmStmt::*)()",
                    "name": "getAsmToks",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::MSAsmStmt::*)() const",
                    "name": "getAsmString",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::string (const clang::ASTContext &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::MSAsmStmt::*)(const clang::ASTContext &) const",
                    "name": "generateAsmString",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::MSAsmStmt::*)(unsigned int) const",
                    "name": "getOutputConstraint",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MSAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::MSAsmStmt::*)(unsigned int)",
                    "name": "getOutputExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MSAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::MSAsmStmt::*)(unsigned int) const",
                    "name": "getOutputExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::MSAsmStmt::*)(unsigned int) const",
                    "name": "getInputConstraint",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MSAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::MSAsmStmt::*)(unsigned int)",
                    "name": "getInputExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ],
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::MSAsmStmt::*)(unsigned int, clang::Expr *)",
                    "name": "setInputExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MSAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::MSAsmStmt::*)(unsigned int) const",
                    "name": "getInputExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<llvm::StringRef> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<llvm::StringRef>",
                    "signature": "llvm::ArrayRef<llvm::StringRef> (clang::MSAsmStmt::*)() const",
                    "name": "getAllConstraints",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<llvm::StringRef> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<llvm::StringRef>",
                    "signature": "llvm::ArrayRef<llvm::StringRef> (clang::MSAsmStmt::*)() const",
                    "name": "getClobbers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::Expr *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::Expr *>",
                    "signature": "llvm::ArrayRef<clang::Expr *> (clang::MSAsmStmt::*)() const",
                    "name": "getAllExprs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::MSAsmStmt::*)(unsigned int) const",
                    "name": "getClobber",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MSAsmStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSAsmStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::MSAsmStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::AsmStmt"
            ],
            "name": "MSAsmStmt"
        },
        {
            "typename": "clang::SEHExceptStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::SEHExceptStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::SEHExceptStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SEHExceptStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SEHExceptStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SEHExceptStmt::*)() const",
                    "name": "getExceptLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SEHExceptStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SEHExceptStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SEHExceptStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::SEHExceptStmt::*)() const",
                    "name": "getFilterExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SEHExceptStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CompoundStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CompoundStmt *",
                    "signature": "clang::CompoundStmt * (clang::SEHExceptStmt::*)() const",
                    "name": "getBlock",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SEHExceptStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SEHExceptStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "SEHExceptStmt"
        },
        {
            "typename": "clang::SEHFinallyStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::SEHFinallyStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::SEHFinallyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SEHFinallyStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SEHFinallyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SEHFinallyStmt::*)() const",
                    "name": "getFinallyLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SEHFinallyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SEHFinallyStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SEHFinallyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CompoundStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CompoundStmt *",
                    "signature": "clang::CompoundStmt * (clang::SEHFinallyStmt::*)() const",
                    "name": "getBlock",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SEHFinallyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SEHFinallyStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "SEHFinallyStmt"
        },
        {
            "typename": "clang::SEHTryStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::SEHTryStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::SEHTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SEHTryStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SEHTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SEHTryStmt::*)() const",
                    "name": "getTryLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SEHTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SEHTryStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SEHTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SEHTryStmt::*)() const",
                    "name": "getIsCXXTry",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SEHTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CompoundStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CompoundStmt *",
                    "signature": "clang::CompoundStmt * (clang::SEHTryStmt::*)() const",
                    "name": "getTryBlock",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SEHTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::SEHTryStmt::*)() const",
                    "name": "getHandler",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SEHTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SEHExceptStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SEHExceptStmt *",
                    "signature": "clang::SEHExceptStmt * (clang::SEHTryStmt::*)() const",
                    "name": "getExceptHandler",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SEHTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SEHFinallyStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SEHFinallyStmt *",
                    "signature": "clang::SEHFinallyStmt * (clang::SEHTryStmt::*)() const",
                    "name": "getFinallyHandler",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SEHTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SEHTryStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "SEHTryStmt"
        },
        {
            "typename": "clang::SEHLeaveStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::SEHLeaveStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::SEHLeaveStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SEHLeaveStmt::*)() const",
                    "name": "getLeaveLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SEHLeaveStmt",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SEHLeaveStmt::*)(clang::SourceLocation)",
                    "name": "setLeaveLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SEHLeaveStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SEHLeaveStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SEHLeaveStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SEHLeaveStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SEHLeaveStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SEHLeaveStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "SEHLeaveStmt"
        },
        {
            "typename": "clang::CapturedStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CapturedStmt>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CapturedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CapturedStmt::*)()",
                    "name": "getCapturedStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CapturedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::CapturedStmt::*)() const",
                    "name": "getCapturedStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CapturedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CapturedDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CapturedDecl *",
                    "signature": "clang::CapturedDecl * (clang::CapturedStmt::*)()",
                    "name": "getCapturedDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CapturedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CapturedDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CapturedDecl *",
                    "signature": "const clang::CapturedDecl * (clang::CapturedStmt::*)() const",
                    "name": "getCapturedDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedStmt",
                    "args": [
                        [
                            "clang::CapturedDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CapturedDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CapturedStmt::*)(clang::CapturedDecl *)",
                    "name": "setCapturedDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CapturedRegionKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CapturedRegionKind",
                    "signature": "clang::CapturedRegionKind (clang::CapturedStmt::*)() const",
                    "name": "getCapturedRegionKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedStmt",
                    "args": [
                        [
                            "clang::CapturedRegionKind",
                            "Kind"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CapturedRegionKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CapturedStmt::*)(clang::CapturedRegionKind)",
                    "name": "setCapturedRegionKind",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CapturedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::RecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::RecordDecl *",
                    "signature": "const clang::RecordDecl * (clang::CapturedStmt::*)() const",
                    "name": "getCapturedRecordDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedStmt",
                    "args": [
                        [
                            "clang::RecordDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::RecordDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CapturedStmt::*)(clang::RecordDecl *)",
                    "name": "setCapturedRecordDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedStmt",
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "Var"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::VarDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CapturedStmt::*)(const clang::VarDecl *) const",
                    "name": "capturesVariable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CapturedStmt::capture_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::CapturedStmt::Capture *>",
                    "signature": "llvm::iterator_range<clang::CapturedStmt::Capture *> (clang::CapturedStmt::*)()",
                    "name": "captures",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CapturedStmt::capture_const_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<const clang::CapturedStmt::Capture *>",
                    "signature": "llvm::iterator_range<const clang::CapturedStmt::Capture *> (clang::CapturedStmt::*)() const",
                    "name": "captures",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CapturedStmt::*)() const",
                    "name": "capture_size",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CapturedStmt::capture_init_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::Expr **>",
                    "signature": "llvm::iterator_range<clang::Expr **> (clang::CapturedStmt::*)()",
                    "name": "capture_inits",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CapturedStmt::const_capture_init_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::Expr *const *>",
                    "signature": "llvm::iterator_range<clang::Expr *const *> (clang::CapturedStmt::*)() const",
                    "name": "capture_inits",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CapturedStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CapturedStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::CapturedStmt::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CapturedStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CapturedStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "CapturedStmt"
        },
        {
            "typename": "clang::Expr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::Expr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::Expr::*)() const",
                    "name": "getType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::QualType",
                            "t"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Expr::*)(clang::QualType)",
                    "name": "setType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "isValueDependent",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "bool",
                            "VD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Expr::*)(bool)",
                    "name": "setValueDependent",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "isTypeDependent",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "bool",
                            "TD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Expr::*)(bool)",
                    "name": "setTypeDependent",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "isInstantiationDependent",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "bool",
                            "ID"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Expr::*)(bool)",
                    "name": "setInstantiationDependent",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "containsUnexpandedParameterPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "bool",
                            "PP"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Expr::*)(bool)",
                    "name": "setContainsUnexpandedParameterPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::Expr::*)() const",
                    "name": "getExprLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "isLValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "isRValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "isXValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "isGLValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr::LValueClassification (clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr::LValueClassification",
                    "signature": "clang::Expr::LValueClassification (clang::Expr::*)(clang::ASTContext &) const",
                    "name": "ClassifyLValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::SourceLocation *",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr::isModifiableLvalueResult (clang::ASTContext &, clang::SourceLocation *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr::isModifiableLvalueResult",
                    "signature": "clang::Expr::isModifiableLvalueResult (clang::Expr::*)(clang::ASTContext &, clang::SourceLocation *) const",
                    "name": "isModifiableLvalue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr::Classification (clang::ASTContext &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr::Classification",
                    "signature": "clang::Expr::Classification (clang::Expr::*)(clang::ASTContext &) const",
                    "name": "Classify",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::SourceLocation &",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr::Classification (clang::ASTContext &, clang::SourceLocation &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr::Classification",
                    "signature": "clang::Expr::Classification (clang::Expr::*)(clang::ASTContext &, clang::SourceLocation &) const",
                    "name": "ClassifyModifiable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ExprValueKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ExprValueKind",
                    "signature": "clang::ExprValueKind (clang::Expr::*)() const",
                    "name": "getValueKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ExprObjectKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ExprObjectKind",
                    "signature": "clang::ExprObjectKind (clang::Expr::*)() const",
                    "name": "getObjectKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "isOrdinaryOrBitFieldObject",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::ExprValueKind",
                            "Cat"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ExprValueKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Expr::*)(clang::ExprValueKind)",
                    "name": "setValueKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::ExprObjectKind",
                            "Cat"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ExprObjectKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::Expr::*)(clang::ExprObjectKind)",
                    "name": "setObjectKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "refersToBitField",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FieldDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::FieldDecl *",
                    "signature": "clang::FieldDecl * (clang::Expr::*)()",
                    "name": "getSourceBitField",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FieldDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::FieldDecl *",
                    "signature": "const clang::FieldDecl * (clang::Expr::*)() const",
                    "name": "getSourceBitField",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Decl *",
                    "signature": "clang::Decl * (clang::Expr::*)()",
                    "name": "getReferencedDeclOfCallee",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Decl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Decl *",
                    "signature": "const clang::Decl * (clang::Expr::*)() const",
                    "name": "getReferencedDeclOfCallee",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ObjCPropertyRefExpr *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ObjCPropertyRefExpr *",
                    "signature": "const clang::ObjCPropertyRefExpr * (clang::Expr::*)() const",
                    "name": "getObjCProperty",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "isObjCSelfExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "refersToVectorElement",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "refersToGlobalRegisterVar",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "hasPlaceholderType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::BuiltinType::Kind",
                            "K"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (BuiltinType::Kind) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(clang::BuiltinType::Kind) const",
                    "name": "hasPlaceholderType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "isKnownToHaveBooleanValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "llvm::APSInt &",
                            "Result"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::SourceLocation *",
                            "Loc"
                        ],
                        [
                            "bool",
                            "isEvaluated"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (llvm::APSInt &, const clang::ASTContext &, clang::SourceLocation *, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(llvm::APSInt &, const clang::ASTContext &, clang::SourceLocation *, bool) const",
                    "name": "isIntegerConstantExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::SourceLocation *",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &, clang::SourceLocation *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(const clang::ASTContext &, clang::SourceLocation *) const",
                    "name": "isIntegerConstantExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(const clang::ASTContext &) const",
                    "name": "isCXX98IntegralConstantExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::APValue *",
                            "Result"
                        ],
                        [
                            "clang::SourceLocation *",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &, clang::APValue *, clang::SourceLocation *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(const clang::ASTContext &, clang::APValue *, clang::SourceLocation *) const",
                    "name": "isCXX11ConstantExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::Expr::EvalResult &",
                            "Result"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "bool",
                            "InConstantContext"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::Expr::EvalResult &, const clang::ASTContext &, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(clang::Expr::EvalResult &, const clang::ASTContext &, bool) const",
                    "name": "EvaluateAsRValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "bool &",
                            "Result"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (bool &, const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(bool &, const clang::ASTContext &) const",
                    "name": "EvaluateAsBooleanCondition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::Expr::EvalResult &",
                            "Result"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::Expr::SideEffectsKind",
                            "AllowSideEffects"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::Expr::EvalResult &, const clang::ASTContext &, clang::Expr::SideEffectsKind) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(clang::Expr::EvalResult &, const clang::ASTContext &, clang::Expr::SideEffectsKind) const",
                    "name": "EvaluateAsInt",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "llvm::APFloat &",
                            "Result"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::Expr::SideEffectsKind",
                            "AllowSideEffects"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (llvm::APFloat &, const clang::ASTContext &, clang::Expr::SideEffectsKind) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(llvm::APFloat &, const clang::ASTContext &, clang::Expr::SideEffectsKind) const",
                    "name": "EvaluateAsFloat",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::Expr::SideEffectsKind",
                            "AllowSideEffects"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &, clang::Expr::SideEffectsKind) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(const clang::ASTContext &, clang::Expr::SideEffectsKind) const",
                    "name": "isEvaluatable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "bool",
                            "IncludePossibleEffects"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &, bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(const clang::ASTContext &, bool) const",
                    "name": "HasSideEffects",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(const clang::ASTContext &) const",
                    "name": "hasNonTrivialCall",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > *",
                            "Diag"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::APSInt (const clang::ASTContext &, SmallVectorImpl<clang::PartialDiagnosticAt> *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::APSInt",
                    "signature": "llvm::APSInt (clang::Expr::*)(const clang::ASTContext &, llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > *) const",
                    "name": "EvaluateKnownConstInt",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > *",
                            "Diag"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::APSInt (const clang::ASTContext &, SmallVectorImpl<clang::PartialDiagnosticAt> *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::APSInt",
                    "signature": "llvm::APSInt (clang::Expr::*)(const clang::ASTContext &, llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > *) const",
                    "name": "EvaluateKnownConstIntCheckOverflow",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::Expr::*)(const clang::ASTContext &) const",
                    "name": "EvaluateForOverflow",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::Expr::EvalResult &",
                            "Result"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::Expr::EvalResult &, const clang::ASTContext &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(clang::Expr::EvalResult &, const clang::ASTContext &) const",
                    "name": "EvaluateAsLValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::APValue &",
                            "Result"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "const clang::VarDecl *",
                            "VD"
                        ],
                        [
                            "llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > &",
                            "Notes"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::APValue &, const clang::ASTContext &, const clang::VarDecl *, SmallVectorImpl<clang::PartialDiagnosticAt> &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(clang::APValue &, const clang::ASTContext &, const clang::VarDecl *, llvm::SmallVectorImpl<std::pair<clang::SourceLocation, clang::PartialDiagnostic> > &) const",
                    "name": "EvaluateAsInitializer",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::APValue &",
                            "Value"
                        ],
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "const clang::FunctionDecl *",
                            "Callee"
                        ],
                        [
                            "llvm::ArrayRef<const clang::Expr *>",
                            "Args"
                        ],
                        [
                            "const clang::Expr *",
                            "This"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::APValue &, clang::ASTContext &, const clang::FunctionDecl *, ArrayRef<const clang::Expr *>, const clang::Expr *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(clang::APValue &, clang::ASTContext &, const clang::FunctionDecl *, llvm::ArrayRef<const clang::Expr *>, const clang::Expr *) const",
                    "name": "EvaluateWithSubstitution",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::Expr::EvalResult &",
                            "Result"
                        ],
                        [
                            "clang::Expr::ConstExprUsage",
                            "Usage"
                        ],
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::Expr::EvalResult &, clang::Expr::ConstExprUsage, const clang::ASTContext &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(clang::Expr::EvalResult &, clang::Expr::ConstExprUsage, const clang::ASTContext &) const",
                    "name": "EvaluateAsConstantExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "unsigned long &",
                            "Result"
                        ],
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "unsigned int",
                            "Type"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (uint64_t &, clang::ASTContext &, unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(unsigned long &, clang::ASTContext &, unsigned int) const",
                    "name": "tryEvaluateObjectSize",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "clang::Expr::NullPointerConstantValueDependence",
                            "NPC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr::NullPointerConstantKind (clang::ASTContext &, clang::Expr::NullPointerConstantValueDependence) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr::NullPointerConstantKind",
                    "signature": "clang::Expr::NullPointerConstantKind (clang::Expr::*)(clang::ASTContext &, clang::Expr::NullPointerConstantValueDependence) const",
                    "name": "isNullPointerConstant",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(clang::ASTContext &) const",
                    "name": "isOBJCGCCandidate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(clang::ASTContext &) const",
                    "name": "isBoundMemberFunction",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "name": "IgnoreImpCasts",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "name": "IgnoreImplicit",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "name": "IgnoreImplicit",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "name": "IgnoreParens",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "name": "IgnoreParenCasts",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "name": "IgnoreCasts",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "name": "IgnoreParenImpCasts",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "name": "IgnoreConversionOperator",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "name": "IgnoreConversionOperator",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "name": "IgnoreParenImpCasts",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "name": "IgnoreParenLValueCasts",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "name": "IgnoreParenLValueCasts",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(clang::ASTContext &)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::Expr::*)(clang::ASTContext &)",
                    "name": "IgnoreParenNoopCasts",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::Expr::*)()",
                    "name": "ignoreParenBaseCasts",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "name": "ignoreParenBaseCasts",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "isDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "const clang::CXXRecordDecl *",
                            "TempTy"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::ASTContext &, const clang::CXXRecordDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)(clang::ASTContext &, const clang::CXXRecordDecl *) const",
                    "name": "isTemporaryObject",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::Expr::*)() const",
                    "name": "isImplicitCXXThis",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "name": "IgnoreImpCasts",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "name": "IgnoreParens",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "name": "IgnoreParenCasts",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "name": "IgnoreCasts",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::Expr::*)(clang::ASTContext &) const",
                    "name": "IgnoreParenNoopCasts",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::CXXRecordDecl *",
                    "signature": "const clang::CXXRecordDecl * (clang::Expr::*)() const",
                    "name": "getBestDynamicClassType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "name": "getBestDynamicClassTypeExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [
                        [
                            "llvm::SmallVectorImpl<const clang::Expr *> &",
                            "CommaLHS"
                        ],
                        [
                            "llvm::SmallVectorImpl<clang::SubobjectAdjustment> &",
                            "Adjustments"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(SmallVectorImpl<const clang::Expr *> &, SmallVectorImpl<clang::SubobjectAdjustment> &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::Expr::*)(llvm::SmallVectorImpl<const clang::Expr *> &, llvm::SmallVectorImpl<clang::SubobjectAdjustment> &) const",
                    "name": "skipRValueSubobjectAdjustments",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::Expr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::Expr::*)() const",
                    "name": "skipRValueSubobjectAdjustments",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "Expr"
        },
        {
            "typename": "clang::FullExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::FullExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FullExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::FullExpr::*)() const",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FullExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::FullExpr::*)()",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::FullExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FullExpr::*)(clang::Expr *)",
                    "name": "setSubExpr",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "FullExpr"
        },
        {
            "typename": "clang::ConstantExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ConstantExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ConstantExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ConstantExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ConstantExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ConstantExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ConstantExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ConstantExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ConstantExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::ConstantExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::FullExpr"
            ],
            "name": "ConstantExpr"
        },
        {
            "typename": "clang::OpaqueValueExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::OpaqueValueExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::OpaqueValueExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::OpaqueValueExpr::*)() const",
                    "name": "getLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OpaqueValueExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::OpaqueValueExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OpaqueValueExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::OpaqueValueExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OpaqueValueExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::OpaqueValueExpr::*)() const",
                    "name": "getExprLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OpaqueValueExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::OpaqueValueExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::OpaqueValueExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::OpaqueValueExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::OpaqueValueExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::OpaqueValueExpr::*)() const",
                    "name": "getSourceExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OpaqueValueExpr",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::OpaqueValueExpr::*)(bool)",
                    "name": "setIsUnique",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OpaqueValueExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::OpaqueValueExpr::*)() const",
                    "name": "isUnique",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "OpaqueValueExpr"
        },
        {
            "typename": "clang::DeclRefExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::DeclRefExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ValueDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::ValueDecl *",
                    "signature": "clang::ValueDecl * (clang::DeclRefExpr::*)()",
                    "name": "getDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ValueDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::ValueDecl *",
                    "signature": "const clang::ValueDecl * (clang::DeclRefExpr::*)() const",
                    "name": "getDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [
                        [
                            "clang::ValueDecl *",
                            "NewD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ValueDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclRefExpr::*)(clang::ValueDecl *)",
                    "name": "setDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationNameInfo () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclarationNameInfo",
                    "signature": "clang::DeclarationNameInfo (clang::DeclRefExpr::*)() const",
                    "name": "getNameInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclRefExpr::*)() const",
                    "name": "getLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclRefExpr::*)(clang::SourceLocation)",
                    "name": "setLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclRefExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclRefExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclRefExpr::*)() const",
                    "name": "hasQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "signature": "clang::NestedNameSpecifierLoc (clang::DeclRefExpr::*)() const",
                    "name": "getQualifierLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifier *",
                    "signature": "clang::NestedNameSpecifier * (clang::DeclRefExpr::*)() const",
                    "name": "getQualifier",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamedDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::NamedDecl *",
                    "signature": "clang::NamedDecl * (clang::DeclRefExpr::*)()",
                    "name": "getFoundDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::NamedDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::NamedDecl *",
                    "signature": "const clang::NamedDecl * (clang::DeclRefExpr::*)() const",
                    "name": "getFoundDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclRefExpr::*)() const",
                    "name": "hasTemplateKWAndArgsInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclRefExpr::*)() const",
                    "name": "getTemplateKeywordLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclRefExpr::*)() const",
                    "name": "getLAngleLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DeclRefExpr::*)() const",
                    "name": "getRAngleLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclRefExpr::*)() const",
                    "name": "hasTemplateKeyword",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclRefExpr::*)() const",
                    "name": "hasExplicitTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [
                        [
                            "clang::TemplateArgumentListInfo &",
                            "List"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TemplateArgumentListInfo &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::DeclRefExpr::*)(clang::TemplateArgumentListInfo &) const",
                    "name": "copyTemplateArgumentsInto",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TemplateArgumentLoc *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::TemplateArgumentLoc *",
                    "signature": "const clang::TemplateArgumentLoc * (clang::DeclRefExpr::*)() const",
                    "name": "getTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::DeclRefExpr::*)() const",
                    "name": "getNumTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::TemplateArgumentLoc> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::TemplateArgumentLoc>",
                    "signature": "llvm::ArrayRef<clang::TemplateArgumentLoc> (clang::DeclRefExpr::*)() const",
                    "name": "template_arguments",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclRefExpr::*)() const",
                    "name": "hadMultipleCandidates",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DeclRefExpr::*)(bool)",
                    "name": "setHadMultipleCandidates",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DeclRefExpr::*)() const",
                    "name": "refersToEnclosingVariableOrCapture",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::DeclRefExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::DeclRefExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "DeclRefExpr"
        },
        {
            "typename": "clang::IntegerLiteral",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::IntegerLiteral>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::IntegerLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::IntegerLiteral::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IntegerLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::IntegerLiteral::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IntegerLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::IntegerLiteral::*)() const",
                    "name": "getLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IntegerLiteral",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Location"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::IntegerLiteral::*)(clang::SourceLocation)",
                    "name": "setLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::IntegerLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::IntegerLiteral::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::IntegerLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::IntegerLiteral::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "IntegerLiteral"
        },
        {
            "typename": "clang::FixedPointLiteral",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::FixedPointLiteral>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::FixedPointLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::FixedPointLiteral::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FixedPointLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::FixedPointLiteral::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FixedPointLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::FixedPointLiteral::*)() const",
                    "name": "getLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FixedPointLiteral",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Location"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FixedPointLiteral::*)(clang::SourceLocation)",
                    "name": "setLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FixedPointLiteral",
                    "args": [
                        [
                            "unsigned int",
                            "Radix"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::string (unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::FixedPointLiteral::*)(unsigned int) const",
                    "name": "getValueAsString",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FixedPointLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::FixedPointLiteral::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::FixedPointLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::FixedPointLiteral::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "FixedPointLiteral"
        },
        {
            "typename": "clang::CharacterLiteral",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CharacterLiteral>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CharacterLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CharacterLiteral::*)() const",
                    "name": "getLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CharacterLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CharacterLiteral::CharacterKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharacterLiteral::CharacterKind",
                    "signature": "clang::CharacterLiteral::CharacterKind (clang::CharacterLiteral::*)() const",
                    "name": "getKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CharacterLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CharacterLiteral::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CharacterLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CharacterLiteral::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CharacterLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CharacterLiteral::*)() const",
                    "name": "getValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CharacterLiteral",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Location"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CharacterLiteral::*)(clang::SourceLocation)",
                    "name": "setLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CharacterLiteral",
                    "args": [
                        [
                            "clang::CharacterLiteral::CharacterKind",
                            "kind"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CharacterLiteral::CharacterKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CharacterLiteral::*)(clang::CharacterLiteral::CharacterKind)",
                    "name": "setKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CharacterLiteral",
                    "args": [
                        [
                            "unsigned int",
                            "Val"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CharacterLiteral::*)(unsigned int)",
                    "name": "setValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CharacterLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CharacterLiteral::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CharacterLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::CharacterLiteral::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CharacterLiteral"
        },
        {
            "typename": "clang::FloatingLiteral",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::FloatingLiteral>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::FloatingLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::APFloat () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::APFloat",
                    "signature": "llvm::APFloat (clang::FloatingLiteral::*)() const",
                    "name": "getValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FloatingLiteral",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "const llvm::APFloat &",
                            "Val"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &, const llvm::APFloat &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FloatingLiteral::*)(const clang::ASTContext &, const llvm::APFloat &)",
                    "name": "setValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FloatingLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::APFloatSemantics () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt::APFloatSemantics",
                    "signature": "clang::Stmt::APFloatSemantics (clang::FloatingLiteral::*)() const",
                    "name": "getRawSemantics",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FloatingLiteral",
                    "args": [
                        [
                            "clang::Stmt::APFloatSemantics",
                            "Sem"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt::APFloatSemantics)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FloatingLiteral::*)(clang::Stmt::APFloatSemantics)",
                    "name": "setRawSemantics",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FloatingLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const llvm::fltSemantics &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const llvm::fltSemantics &",
                    "signature": "const llvm::fltSemantics & (clang::FloatingLiteral::*)() const",
                    "name": "getSemantics",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FloatingLiteral",
                    "args": [
                        [
                            "const llvm::fltSemantics &",
                            "Sem"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const llvm::fltSemantics &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FloatingLiteral::*)(const llvm::fltSemantics &)",
                    "name": "setSemantics",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FloatingLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FloatingLiteral::*)() const",
                    "name": "isExact",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FloatingLiteral",
                    "args": [
                        [
                            "bool",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FloatingLiteral::*)(bool)",
                    "name": "setExact",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FloatingLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "double () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "double",
                    "signature": "double (clang::FloatingLiteral::*)() const",
                    "name": "getValueAsApproximateDouble",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FloatingLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::FloatingLiteral::*)() const",
                    "name": "getLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FloatingLiteral",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FloatingLiteral::*)(clang::SourceLocation)",
                    "name": "setLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FloatingLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::FloatingLiteral::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FloatingLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::FloatingLiteral::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FloatingLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::FloatingLiteral::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::FloatingLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::FloatingLiteral::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "FloatingLiteral"
        },
        {
            "typename": "clang::ImaginaryLiteral",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ImaginaryLiteral>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ImaginaryLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::ImaginaryLiteral::*)() const",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ImaginaryLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ImaginaryLiteral::*)()",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ImaginaryLiteral",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ImaginaryLiteral::*)(clang::Expr *)",
                    "name": "setSubExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ImaginaryLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ImaginaryLiteral::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ImaginaryLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ImaginaryLiteral::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ImaginaryLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ImaginaryLiteral::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ImaginaryLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::ImaginaryLiteral::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "ImaginaryLiteral"
        },
        {
            "typename": "clang::StringLiteral",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::StringLiteral>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::StringLiteral::*)() const",
                    "name": "getString",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::StringLiteral::*)() const",
                    "name": "getBytes",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::StringLiteral::*)(llvm::raw_ostream &) const",
                    "name": "outputString",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [
                        [
                            "unsigned long",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "uint32_t (size_t) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::StringLiteral::*)(unsigned long) const",
                    "name": "getCodeUnit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::StringLiteral::*)() const",
                    "name": "getByteLength",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::StringLiteral::*)() const",
                    "name": "getLength",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::StringLiteral::*)() const",
                    "name": "getCharByteWidth",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::StringLiteral::StringKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::StringLiteral::StringKind",
                    "signature": "clang::StringLiteral::StringKind (clang::StringLiteral::*)() const",
                    "name": "getKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::StringLiteral::*)() const",
                    "name": "isAscii",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::StringLiteral::*)() const",
                    "name": "isWide",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::StringLiteral::*)() const",
                    "name": "isUTF8",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::StringLiteral::*)() const",
                    "name": "isUTF16",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::StringLiteral::*)() const",
                    "name": "isUTF32",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::StringLiteral::*)() const",
                    "name": "isPascal",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::StringLiteral::*)() const",
                    "name": "containsNonAscii",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::StringLiteral::*)() const",
                    "name": "containsNonAsciiOrNull",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::StringLiteral::*)() const",
                    "name": "getNumConcatenated",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [
                        [
                            "unsigned int",
                            "TokNum"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::StringLiteral::*)(unsigned int) const",
                    "name": "getStrTokenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [
                        [
                            "unsigned int",
                            "ByteNo"
                        ],
                        [
                            "const clang::SourceManager &",
                            "SM"
                        ],
                        [
                            "const clang::LangOptions &",
                            "Features"
                        ],
                        [
                            "const clang::TargetInfo &",
                            "Target"
                        ],
                        [
                            "unsigned int *",
                            "StartToken"
                        ],
                        [
                            "unsigned int *",
                            "StartTokenByteOffset"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (unsigned int, const clang::SourceManager &, const clang::LangOptions &, const clang::TargetInfo &, unsigned int *, unsigned int *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::StringLiteral::*)(unsigned int, const clang::SourceManager &, const clang::LangOptions &, const clang::TargetInfo &, unsigned int *, unsigned int *) const",
                    "name": "getLocationOfByte",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::StringLiteral::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::StringLiteral::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::StringLiteral::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::StringLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::StringLiteral::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "StringLiteral"
        },
        {
            "typename": "clang::PredefinedExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::PredefinedExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::PredefinedExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::PredefinedExpr::IdentKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::PredefinedExpr::IdentKind",
                    "signature": "clang::PredefinedExpr::IdentKind (clang::PredefinedExpr::*)() const",
                    "name": "getIdentKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::PredefinedExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::PredefinedExpr::*)() const",
                    "name": "getLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::PredefinedExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::PredefinedExpr::*)(clang::SourceLocation)",
                    "name": "setLocation",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::PredefinedExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::StringLiteral *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::StringLiteral *",
                    "signature": "clang::StringLiteral * (clang::PredefinedExpr::*)()",
                    "name": "getFunctionName",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::PredefinedExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::StringLiteral *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::StringLiteral *",
                    "signature": "const clang::StringLiteral * (clang::PredefinedExpr::*)() const",
                    "name": "getFunctionName",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::PredefinedExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::PredefinedExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::PredefinedExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::PredefinedExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::PredefinedExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::PredefinedExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "PredefinedExpr"
        },
        {
            "typename": "clang::ParenExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ParenExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ParenExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::ParenExpr::*)() const",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ParenExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ParenExpr::*)()",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ParenExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ParenExpr::*)(clang::Expr *)",
                    "name": "setSubExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParenExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ParenExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParenExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ParenExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParenExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ParenExpr::*)() const",
                    "name": "getLParen",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParenExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ParenExpr::*)(clang::SourceLocation)",
                    "name": "setLParen",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParenExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ParenExpr::*)() const",
                    "name": "getRParen",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParenExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ParenExpr::*)(clang::SourceLocation)",
                    "name": "setRParen",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParenExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ParenExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ParenExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::ParenExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "ParenExpr"
        },
        {
            "typename": "clang::UnaryOperator",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::UnaryOperator>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::UnaryOperator::Opcode () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::UnaryOperatorKind",
                    "signature": "clang::UnaryOperatorKind (clang::UnaryOperator::*)() const",
                    "name": "getOpcode",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [
                        [
                            "clang::UnaryOperatorKind",
                            "Opc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::UnaryOperator::Opcode)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::UnaryOperator::*)(clang::UnaryOperatorKind)",
                    "name": "setOpcode",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::UnaryOperator::*)() const",
                    "name": "getSubExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::UnaryOperator::*)(clang::Expr *)",
                    "name": "setSubExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnaryOperator::*)() const",
                    "name": "getOperatorLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::UnaryOperator::*)(clang::SourceLocation)",
                    "name": "setOperatorLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnaryOperator::*)() const",
                    "name": "canOverflow",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [
                        [
                            "bool",
                            "C"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::UnaryOperator::*)(bool)",
                    "name": "setCanOverflow",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnaryOperator::*)() const",
                    "name": "isPrefix",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnaryOperator::*)() const",
                    "name": "isPostfix",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnaryOperator::*)() const",
                    "name": "isIncrementOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnaryOperator::*)() const",
                    "name": "isDecrementOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnaryOperator::*)() const",
                    "name": "isIncrementDecrementOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnaryOperator::*)() const",
                    "name": "isArithmeticOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnaryOperator::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnaryOperator::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnaryOperator::*)() const",
                    "name": "getExprLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::UnaryOperator::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::UnaryOperator::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "UnaryOperator"
        },
        {
            "typename": "clang::OffsetOfExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::OffsetOfExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::OffsetOfExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::OffsetOfExpr::*)() const",
                    "name": "getOperatorLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OffsetOfExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::OffsetOfExpr::*)(clang::SourceLocation)",
                    "name": "setOperatorLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OffsetOfExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::OffsetOfExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OffsetOfExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "R"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::OffsetOfExpr::*)(clang::SourceLocation)",
                    "name": "setRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::OffsetOfExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::OffsetOfExpr::*)() const",
                    "name": "getTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OffsetOfExpr",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "tsi"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::OffsetOfExpr::*)(clang::TypeSourceInfo *)",
                    "name": "setTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OffsetOfExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::OffsetOfNode &(unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::OffsetOfNode &",
                    "signature": "const clang::OffsetOfNode & (clang::OffsetOfExpr::*)(unsigned int) const",
                    "name": "getComponent",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OffsetOfExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ],
                        [
                            "clang::OffsetOfNode",
                            "ON"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int, clang::OffsetOfNode)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::OffsetOfExpr::*)(unsigned int, clang::OffsetOfNode)",
                    "name": "setComponent",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OffsetOfExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::OffsetOfExpr::*)() const",
                    "name": "getNumComponents",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::OffsetOfExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::OffsetOfExpr::*)(unsigned int)",
                    "name": "getIndexExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::OffsetOfExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::OffsetOfExpr::*)(unsigned int) const",
                    "name": "getIndexExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::OffsetOfExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ],
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::OffsetOfExpr::*)(unsigned int, clang::Expr *)",
                    "name": "setIndexExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OffsetOfExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::OffsetOfExpr::*)() const",
                    "name": "getNumExpressions",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OffsetOfExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::OffsetOfExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OffsetOfExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::OffsetOfExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OffsetOfExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::OffsetOfExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::OffsetOfExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::OffsetOfExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "OffsetOfExpr"
        },
        {
            "typename": "clang::UnaryExprOrTypeTraitExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::UnaryExprOrTypeTraitExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::UnaryExprOrTypeTrait () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::UnaryExprOrTypeTrait",
                    "signature": "clang::UnaryExprOrTypeTrait (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "name": "getKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [
                        [
                            "clang::UnaryExprOrTypeTrait",
                            "K"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::UnaryExprOrTypeTrait)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::UnaryExprOrTypeTraitExpr::*)(clang::UnaryExprOrTypeTrait)",
                    "name": "setKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "name": "isArgumentType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "name": "getArgumentType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "name": "getArgumentTypeInfo",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::UnaryExprOrTypeTraitExpr::*)()",
                    "name": "getArgumentExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "name": "getArgumentExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::UnaryExprOrTypeTraitExpr::*)(clang::Expr *)",
                    "name": "setArgument",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "TInfo"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::UnaryExprOrTypeTraitExpr::*)(clang::TypeSourceInfo *)",
                    "name": "setArgument",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "name": "getTypeOfArgument",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "name": "getOperatorLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::UnaryExprOrTypeTraitExpr::*)(clang::SourceLocation)",
                    "name": "setOperatorLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::UnaryExprOrTypeTraitExpr::*)(clang::SourceLocation)",
                    "name": "setRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::UnaryExprOrTypeTraitExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UnaryExprOrTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::UnaryExprOrTypeTraitExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "UnaryExprOrTypeTraitExpr"
        },
        {
            "typename": "clang::ArraySubscriptExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ArraySubscriptExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ArraySubscriptExpr::*)()",
                    "name": "getLHS",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::ArraySubscriptExpr::*)() const",
                    "name": "getLHS",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ArraySubscriptExpr::*)(clang::Expr *)",
                    "name": "setLHS",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ArraySubscriptExpr::*)()",
                    "name": "getRHS",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::ArraySubscriptExpr::*)() const",
                    "name": "getRHS",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ArraySubscriptExpr::*)(clang::Expr *)",
                    "name": "setRHS",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ArraySubscriptExpr::*)()",
                    "name": "getBase",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::ArraySubscriptExpr::*)() const",
                    "name": "getBase",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ArraySubscriptExpr::*)()",
                    "name": "getIdx",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::ArraySubscriptExpr::*)() const",
                    "name": "getIdx",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ArraySubscriptExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ArraySubscriptExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ArraySubscriptExpr::*)() const",
                    "name": "getRBracketLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ArraySubscriptExpr::*)(clang::SourceLocation)",
                    "name": "setRBracketLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ArraySubscriptExpr::*)() const",
                    "name": "getExprLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ArraySubscriptExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ArraySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::ArraySubscriptExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "ArraySubscriptExpr"
        },
        {
            "typename": "clang::CallExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CallExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CallExpr::*)()",
                    "name": "getCallee",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CallExpr::*)() const",
                    "name": "getCallee",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "F"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CallExpr::*)(clang::Expr *)",
                    "name": "setCallee",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CallExpr::ADLCallKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CallExpr::ADLCallKind",
                    "signature": "clang::CallExpr::ADLCallKind (clang::CallExpr::*)() const",
                    "name": "getADLCallKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [
                        [
                            "clang::CallExpr::ADLCallKind",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CallExpr::ADLCallKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CallExpr::*)(clang::CallExpr::ADLCallKind)",
                    "name": "setADLCallKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CallExpr::*)() const",
                    "name": "usesADL",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Decl *",
                    "signature": "clang::Decl * (clang::CallExpr::*)()",
                    "name": "getCalleeDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Decl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Decl *",
                    "signature": "const clang::Decl * (clang::CallExpr::*)() const",
                    "name": "getCalleeDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::FunctionDecl *",
                    "signature": "clang::FunctionDecl * (clang::CallExpr::*)()",
                    "name": "getDirectCallee",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FunctionDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::FunctionDecl *",
                    "signature": "const clang::FunctionDecl * (clang::CallExpr::*)() const",
                    "name": "getDirectCallee",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CallExpr::*)() const",
                    "name": "getNumArgs",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CallExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Arg"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CallExpr::*)(unsigned int)",
                    "name": "getArg",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CallExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Arg"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CallExpr::*)(unsigned int) const",
                    "name": "getArg",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Arg"
                        ],
                        [
                            "clang::Expr *",
                            "ArgExpr"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CallExpr::*)(unsigned int, clang::Expr *)",
                    "name": "setArg",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [
                        [
                            "unsigned int",
                            "NewNumArgs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CallExpr::*)(unsigned int)",
                    "name": "shrinkNumArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CallExpr::arg_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::Stmt::ExprIterator>",
                    "signature": "llvm::iterator_range<clang::Stmt::ExprIterator> (clang::CallExpr::*)()",
                    "name": "arguments",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CallExpr::const_arg_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::Stmt::ConstExprIterator>",
                    "signature": "llvm::iterator_range<clang::Stmt::ConstExprIterator> (clang::CallExpr::*)() const",
                    "name": "arguments",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::Stmt *> ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::ArrayRef<clang::Stmt *>",
                    "signature": "llvm::ArrayRef<clang::Stmt *> (clang::CallExpr::*)()",
                    "name": "getRawSubExprs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CallExpr::*)() const",
                    "name": "getNumCommas",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CallExpr::*)() const",
                    "name": "getBuiltinCallee",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CallExpr::*)(const clang::ASTContext &) const",
                    "name": "isUnevaluatedBuiltinCall",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::CallExpr::*)(const clang::ASTContext &) const",
                    "name": "getCallReturnType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CallExpr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Attr *(const clang::ASTContext &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::Attr *",
                    "signature": "const clang::Attr * (clang::CallExpr::*)(const clang::ASTContext &) const",
                    "name": "getUnusedResultAttr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CallExpr::*)(const clang::ASTContext &) const",
                    "name": "hasUnusedResultAttr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CallExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CallExpr::*)(clang::SourceLocation)",
                    "name": "setRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CallExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CallExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CallExpr::*)(const clang::ASTContext &) const",
                    "name": "isBuiltinAssumeFalse",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CallExpr::*)() const",
                    "name": "isCallToStdMove",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CallExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::CallExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CallExpr"
        },
        {
            "typename": "clang::MemberExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::MemberExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::MemberExpr::*)(clang::Expr *)",
                    "name": "setBase",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::MemberExpr::*)() const",
                    "name": "getBase",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ValueDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ValueDecl *",
                    "signature": "clang::ValueDecl * (clang::MemberExpr::*)() const",
                    "name": "getMemberDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [
                        [
                            "clang::ValueDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ValueDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::MemberExpr::*)(clang::ValueDecl *)",
                    "name": "setMemberDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclAccessPair () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclAccessPair",
                    "signature": "clang::DeclAccessPair (clang::MemberExpr::*)() const",
                    "name": "getFoundDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::MemberExpr::*)() const",
                    "name": "hasQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "signature": "clang::NestedNameSpecifierLoc (clang::MemberExpr::*)() const",
                    "name": "getQualifierLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifier *",
                    "signature": "clang::NestedNameSpecifier * (clang::MemberExpr::*)() const",
                    "name": "getQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "name": "getTemplateKeywordLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "name": "getLAngleLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "name": "getRAngleLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::MemberExpr::*)() const",
                    "name": "hasTemplateKeyword",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::MemberExpr::*)() const",
                    "name": "hasExplicitTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [
                        [
                            "clang::TemplateArgumentListInfo &",
                            "List"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TemplateArgumentListInfo &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::MemberExpr::*)(clang::TemplateArgumentListInfo &) const",
                    "name": "copyTemplateArgumentsInto",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TemplateArgumentLoc *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::TemplateArgumentLoc *",
                    "signature": "const clang::TemplateArgumentLoc * (clang::MemberExpr::*)() const",
                    "name": "getTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::MemberExpr::*)() const",
                    "name": "getNumTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::TemplateArgumentLoc> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::TemplateArgumentLoc>",
                    "signature": "llvm::ArrayRef<clang::TemplateArgumentLoc> (clang::MemberExpr::*)() const",
                    "name": "template_arguments",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationNameInfo () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclarationNameInfo",
                    "signature": "clang::DeclarationNameInfo (clang::MemberExpr::*)() const",
                    "name": "getMemberNameInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "name": "getOperatorLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::MemberExpr::*)() const",
                    "name": "isArrow",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [
                        [
                            "bool",
                            "A"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::MemberExpr::*)(bool)",
                    "name": "setArrow",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "name": "getMemberLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::MemberExpr::*)(clang::SourceLocation)",
                    "name": "setMemberLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MemberExpr::*)() const",
                    "name": "getExprLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::MemberExpr::*)() const",
                    "name": "isImplicitAccess",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::MemberExpr::*)() const",
                    "name": "hadMultipleCandidates",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::MemberExpr::*)(bool)",
                    "name": "setHadMultipleCandidates",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [
                        [
                            "const clang::LangOptions &",
                            "LO"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::LangOptions &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::MemberExpr::*)(const clang::LangOptions &) const",
                    "name": "performsVirtualDispatch",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::MemberExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::MemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::MemberExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "MemberExpr"
        },
        {
            "typename": "clang::CompoundLiteralExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CompoundLiteralExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CompoundLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CompoundLiteralExpr::*)() const",
                    "name": "getInitializer",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CompoundLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CompoundLiteralExpr::*)()",
                    "name": "getInitializer",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundLiteralExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CompoundLiteralExpr::*)(clang::Expr *)",
                    "name": "setInitializer",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CompoundLiteralExpr::*)() const",
                    "name": "isFileScope",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundLiteralExpr",
                    "args": [
                        [
                            "bool",
                            "FS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CompoundLiteralExpr::*)(bool)",
                    "name": "setFileScope",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CompoundLiteralExpr::*)() const",
                    "name": "getLParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundLiteralExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CompoundLiteralExpr::*)(clang::SourceLocation)",
                    "name": "setLParenLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CompoundLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::CompoundLiteralExpr::*)() const",
                    "name": "getTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundLiteralExpr",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "tinfo"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CompoundLiteralExpr::*)(clang::TypeSourceInfo *)",
                    "name": "setTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CompoundLiteralExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CompoundLiteralExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CompoundLiteralExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::CompoundLiteralExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CompoundLiteralExpr"
        },
        {
            "typename": "clang::CastExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CastExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CastKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CastKind",
                    "signature": "clang::CastKind (clang::CastExpr::*)() const",
                    "name": "getCastKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CastExpr",
                    "args": [
                        [
                            "clang::CastKind",
                            "K"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CastKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CastExpr::*)(clang::CastKind)",
                    "name": "setCastKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const char *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const char *",
                    "signature": "const char * (clang::CastExpr::*)() const",
                    "name": "getCastKindName",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CastExpr::*)()",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CastExpr::*)() const",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CastExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CastExpr::*)(clang::Expr *)",
                    "name": "setSubExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CastExpr::*)()",
                    "name": "getSubExprAsWritten",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CastExpr::*)() const",
                    "name": "getSubExprAsWritten",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamedDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NamedDecl *",
                    "signature": "clang::NamedDecl * (clang::CastExpr::*)() const",
                    "name": "getConversionFunction",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CastExpr::*)() const",
                    "name": "path_empty",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CastExpr::*)() const",
                    "name": "path_size",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FieldDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::FieldDecl *",
                    "signature": "const clang::FieldDecl * (clang::CastExpr::*)() const",
                    "name": "getTargetUnionField",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CastExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::CastExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CastExpr"
        },
        {
            "typename": "clang::ImplicitCastExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ImplicitCastExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ImplicitCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ImplicitCastExpr::*)() const",
                    "name": "isPartOfExplicitCast",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ImplicitCastExpr",
                    "args": [
                        [
                            "bool",
                            "PartOfExplicitCast"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ImplicitCastExpr::*)(bool)",
                    "name": "setIsPartOfExplicitCast",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ImplicitCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ImplicitCastExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ImplicitCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ImplicitCastExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::CastExpr"
            ],
            "name": "ImplicitCastExpr"
        },
        {
            "typename": "clang::ExplicitCastExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ExplicitCastExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ExplicitCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::ExplicitCastExpr::*)() const",
                    "name": "getTypeInfoAsWritten",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExplicitCastExpr",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "writtenTy"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ExplicitCastExpr::*)(clang::TypeSourceInfo *)",
                    "name": "setTypeInfoAsWritten",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExplicitCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ExplicitCastExpr::*)() const",
                    "name": "getTypeAsWritten",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::CastExpr"
            ],
            "name": "ExplicitCastExpr"
        },
        {
            "typename": "clang::CStyleCastExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CStyleCastExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CStyleCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CStyleCastExpr::*)() const",
                    "name": "getLParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CStyleCastExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CStyleCastExpr::*)(clang::SourceLocation)",
                    "name": "setLParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CStyleCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CStyleCastExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CStyleCastExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CStyleCastExpr::*)(clang::SourceLocation)",
                    "name": "setRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CStyleCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CStyleCastExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CStyleCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CStyleCastExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::ExplicitCastExpr"
            ],
            "name": "CStyleCastExpr"
        },
        {
            "typename": "clang::BinaryOperator",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::BinaryOperator>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::BinaryOperator::*)() const",
                    "name": "getExprLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::BinaryOperator::*)() const",
                    "name": "getOperatorLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BinaryOperator::*)(clang::SourceLocation)",
                    "name": "setOperatorLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::BinaryOperator::Opcode () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::BinaryOperatorKind",
                    "signature": "clang::BinaryOperatorKind (clang::BinaryOperator::*)() const",
                    "name": "getOpcode",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [
                        [
                            "clang::BinaryOperatorKind",
                            "Opc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::BinaryOperator::Opcode)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BinaryOperator::*)(clang::BinaryOperatorKind)",
                    "name": "setOpcode",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::BinaryOperator::*)() const",
                    "name": "getLHS",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BinaryOperator::*)(clang::Expr *)",
                    "name": "setLHS",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::BinaryOperator::*)() const",
                    "name": "getRHS",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BinaryOperator::*)(clang::Expr *)",
                    "name": "setRHS",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::BinaryOperator::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::BinaryOperator::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::BinaryOperator::*)() const",
                    "name": "getOpcodeStr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "name": "isPtrMemOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "name": "isMultiplicativeOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "name": "isAdditiveOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "name": "isShiftOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "name": "isBitwiseOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "name": "isRelationalOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "name": "isEqualityOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "name": "isComparisonOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "name": "isLogicalOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "name": "isAssignmentOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "name": "isCompoundAssignmentOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "name": "isShiftAssignOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::BinaryOperator::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::BinaryOperator::*)() const",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [
                        [
                            "clang::FPOptions",
                            "F"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FPOptions)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BinaryOperator::*)(clang::FPOptions)",
                    "name": "setFPFeatures",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FPOptions () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FPOptions",
                    "signature": "clang::FPOptions (clang::BinaryOperator::*)() const",
                    "name": "getFPFeatures",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "name": "isFPContractableWithinStatement",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::BinaryOperator::*)() const",
                    "name": "isFEnvAccessOn",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "BinaryOperator"
        },
        {
            "typename": "clang::CompoundAssignOperator",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CompoundAssignOperator>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CompoundAssignOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::CompoundAssignOperator::*)() const",
                    "name": "getComputationLHSType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundAssignOperator",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CompoundAssignOperator::*)(clang::QualType)",
                    "name": "setComputationLHSType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundAssignOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::CompoundAssignOperator::*)() const",
                    "name": "getComputationResultType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CompoundAssignOperator",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CompoundAssignOperator::*)(clang::QualType)",
                    "name": "setComputationResultType",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::BinaryOperator"
            ],
            "name": "CompoundAssignOperator"
        },
        {
            "typename": "clang::AbstractConditionalOperator",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::AbstractConditionalOperator>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AbstractConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::AbstractConditionalOperator::*)() const",
                    "name": "getCond",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AbstractConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::AbstractConditionalOperator::*)() const",
                    "name": "getTrueExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AbstractConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::AbstractConditionalOperator::*)() const",
                    "name": "getFalseExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AbstractConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AbstractConditionalOperator::*)() const",
                    "name": "getQuestionLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AbstractConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AbstractConditionalOperator::*)() const",
                    "name": "getColonLoc",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "AbstractConditionalOperator"
        },
        {
            "typename": "clang::ConditionalOperator",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ConditionalOperator>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ConditionalOperator::*)() const",
                    "name": "getCond",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ConditionalOperator::*)() const",
                    "name": "getTrueExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ConditionalOperator::*)() const",
                    "name": "getFalseExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ConditionalOperator::*)() const",
                    "name": "getLHS",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ConditionalOperator::*)() const",
                    "name": "getRHS",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ConditionalOperator::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ConditionalOperator::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ConditionalOperator::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::ConditionalOperator::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::AbstractConditionalOperator"
            ],
            "name": "ConditionalOperator"
        },
        {
            "typename": "clang::BinaryConditionalOperator",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::BinaryConditionalOperator>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BinaryConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::BinaryConditionalOperator::*)() const",
                    "name": "getCommon",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BinaryConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::OpaqueValueExpr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::OpaqueValueExpr *",
                    "signature": "clang::OpaqueValueExpr * (clang::BinaryConditionalOperator::*)() const",
                    "name": "getOpaqueValue",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BinaryConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::BinaryConditionalOperator::*)() const",
                    "name": "getCond",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BinaryConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::BinaryConditionalOperator::*)() const",
                    "name": "getTrueExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BinaryConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::BinaryConditionalOperator::*)() const",
                    "name": "getFalseExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::BinaryConditionalOperator::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::BinaryConditionalOperator::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::BinaryConditionalOperator::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BinaryConditionalOperator",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::BinaryConditionalOperator::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::AbstractConditionalOperator"
            ],
            "name": "BinaryConditionalOperator"
        },
        {
            "typename": "clang::AddrLabelExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::AddrLabelExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::AddrLabelExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AddrLabelExpr::*)() const",
                    "name": "getAmpAmpLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AddrLabelExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::AddrLabelExpr::*)(clang::SourceLocation)",
                    "name": "setAmpAmpLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AddrLabelExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AddrLabelExpr::*)() const",
                    "name": "getLabelLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AddrLabelExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::AddrLabelExpr::*)(clang::SourceLocation)",
                    "name": "setLabelLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AddrLabelExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AddrLabelExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AddrLabelExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AddrLabelExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AddrLabelExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LabelDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::LabelDecl *",
                    "signature": "clang::LabelDecl * (clang::AddrLabelExpr::*)() const",
                    "name": "getLabel",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AddrLabelExpr",
                    "args": [
                        [
                            "clang::LabelDecl *",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::LabelDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::AddrLabelExpr::*)(clang::LabelDecl *)",
                    "name": "setLabel",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AddrLabelExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::AddrLabelExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::AddrLabelExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::AddrLabelExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "AddrLabelExpr"
        },
        {
            "typename": "clang::StmtExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::StmtExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::StmtExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CompoundStmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CompoundStmt *",
                    "signature": "clang::CompoundStmt * (clang::StmtExpr::*)()",
                    "name": "getSubStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::StmtExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CompoundStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CompoundStmt *",
                    "signature": "const clang::CompoundStmt * (clang::StmtExpr::*)() const",
                    "name": "getSubStmt",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::StmtExpr",
                    "args": [
                        [
                            "clang::CompoundStmt *",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CompoundStmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::StmtExpr::*)(clang::CompoundStmt *)",
                    "name": "setSubStmt",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StmtExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::StmtExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StmtExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::StmtExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StmtExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::StmtExpr::*)() const",
                    "name": "getLParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StmtExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::StmtExpr::*)(clang::SourceLocation)",
                    "name": "setLParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StmtExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::StmtExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StmtExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::StmtExpr::*)(clang::SourceLocation)",
                    "name": "setRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StmtExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::StmtExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::StmtExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::StmtExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "StmtExpr"
        },
        {
            "typename": "clang::ShuffleVectorExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ShuffleVectorExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ShuffleVectorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ShuffleVectorExpr::*)() const",
                    "name": "getBuiltinLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ShuffleVectorExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ShuffleVectorExpr::*)(clang::SourceLocation)",
                    "name": "setBuiltinLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ShuffleVectorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ShuffleVectorExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ShuffleVectorExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ShuffleVectorExpr::*)(clang::SourceLocation)",
                    "name": "setRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ShuffleVectorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ShuffleVectorExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ShuffleVectorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ShuffleVectorExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ShuffleVectorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ShuffleVectorExpr::*)() const",
                    "name": "getNumSubExprs",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ShuffleVectorExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Index"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ShuffleVectorExpr::*)(unsigned int)",
                    "name": "getExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ShuffleVectorExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Index"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::ShuffleVectorExpr::*)(unsigned int) const",
                    "name": "getExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ShuffleVectorExpr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "llvm::ArrayRef<clang::Expr *>",
                            "Exprs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &, ArrayRef<clang::Expr *>)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ShuffleVectorExpr::*)(const clang::ASTContext &, llvm::ArrayRef<clang::Expr *>)",
                    "name": "setExprs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ShuffleVectorExpr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Ctx"
                        ],
                        [
                            "unsigned int",
                            "N"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::APSInt (const clang::ASTContext &, unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::APSInt",
                    "signature": "llvm::APSInt (clang::ShuffleVectorExpr::*)(const clang::ASTContext &, unsigned int) const",
                    "name": "getShuffleMaskIdx",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ShuffleVectorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ShuffleVectorExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ShuffleVectorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::ShuffleVectorExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "ShuffleVectorExpr"
        },
        {
            "typename": "clang::ConvertVectorExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ConvertVectorExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ConvertVectorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ConvertVectorExpr::*)() const",
                    "name": "getSrcExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ConvertVectorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::ConvertVectorExpr::*)() const",
                    "name": "getTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ConvertVectorExpr",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "ti"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ConvertVectorExpr::*)(clang::TypeSourceInfo *)",
                    "name": "setTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ConvertVectorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ConvertVectorExpr::*)() const",
                    "name": "getBuiltinLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ConvertVectorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ConvertVectorExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ConvertVectorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ConvertVectorExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ConvertVectorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ConvertVectorExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ConvertVectorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ConvertVectorExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ConvertVectorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::ConvertVectorExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "ConvertVectorExpr"
        },
        {
            "typename": "clang::ChooseExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ChooseExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ChooseExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ChooseExpr::*)() const",
                    "name": "isConditionTrue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ChooseExpr",
                    "args": [
                        [
                            "bool",
                            "isTrue"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ChooseExpr::*)(bool)",
                    "name": "setIsConditionTrue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ChooseExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ChooseExpr::*)() const",
                    "name": "isConditionDependent",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ChooseExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ChooseExpr::*)() const",
                    "name": "getChosenSubExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ChooseExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ChooseExpr::*)() const",
                    "name": "getCond",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ChooseExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ChooseExpr::*)(clang::Expr *)",
                    "name": "setCond",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ChooseExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ChooseExpr::*)() const",
                    "name": "getLHS",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ChooseExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ChooseExpr::*)(clang::Expr *)",
                    "name": "setLHS",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ChooseExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ChooseExpr::*)() const",
                    "name": "getRHS",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ChooseExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ChooseExpr::*)(clang::Expr *)",
                    "name": "setRHS",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ChooseExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ChooseExpr::*)() const",
                    "name": "getBuiltinLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ChooseExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ChooseExpr::*)(clang::SourceLocation)",
                    "name": "setBuiltinLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ChooseExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ChooseExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ChooseExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ChooseExpr::*)(clang::SourceLocation)",
                    "name": "setRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ChooseExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ChooseExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ChooseExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ChooseExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ChooseExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ChooseExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ChooseExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::ChooseExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "ChooseExpr"
        },
        {
            "typename": "clang::GNUNullExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::GNUNullExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::GNUNullExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::GNUNullExpr::*)() const",
                    "name": "getTokenLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GNUNullExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::GNUNullExpr::*)(clang::SourceLocation)",
                    "name": "setTokenLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GNUNullExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::GNUNullExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GNUNullExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::GNUNullExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GNUNullExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::GNUNullExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::GNUNullExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::GNUNullExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "GNUNullExpr"
        },
        {
            "typename": "clang::VAArgExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::VAArgExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VAArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::VAArgExpr::*)() const",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VAArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::VAArgExpr::*)()",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::VAArgExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VAArgExpr::*)(clang::Expr *)",
                    "name": "setSubExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VAArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VAArgExpr::*)() const",
                    "name": "isMicrosoftABI",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VAArgExpr",
                    "args": [
                        [
                            "bool",
                            "IsMS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VAArgExpr::*)(bool)",
                    "name": "setIsMicrosoftABI",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VAArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::VAArgExpr::*)() const",
                    "name": "getWrittenTypeInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VAArgExpr",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "TI"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VAArgExpr::*)(clang::TypeSourceInfo *)",
                    "name": "setWrittenTypeInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VAArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::VAArgExpr::*)() const",
                    "name": "getBuiltinLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VAArgExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VAArgExpr::*)(clang::SourceLocation)",
                    "name": "setBuiltinLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VAArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::VAArgExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VAArgExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VAArgExpr::*)(clang::SourceLocation)",
                    "name": "setRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VAArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::VAArgExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VAArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::VAArgExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VAArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::VAArgExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::VAArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::VAArgExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "VAArgExpr"
        },
        {
            "typename": "clang::InitListExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::InitListExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::InitListExpr::*)() const",
                    "name": "getNumInits",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::Expr *> ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::ArrayRef<clang::Expr *>",
                    "signature": "llvm::ArrayRef<clang::Expr *> (clang::InitListExpr::*)()",
                    "name": "inits",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::Expr *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::Expr *>",
                    "signature": "llvm::ArrayRef<clang::Expr *> (clang::InitListExpr::*)() const",
                    "name": "inits",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::InitListExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Init"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::InitListExpr::*)(unsigned int) const",
                    "name": "getInit",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::InitListExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Init"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::InitListExpr::*)(unsigned int)",
                    "name": "getInit",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Init"
                        ],
                        [
                            "clang::Expr *",
                            "expr"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::InitListExpr::*)(unsigned int, clang::Expr *)",
                    "name": "setInit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "unsigned int",
                            "NumInits"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &, unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::InitListExpr::*)(const clang::ASTContext &, unsigned int)",
                    "name": "reserveInits",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "Context"
                        ],
                        [
                            "unsigned int",
                            "NumInits"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &, unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::InitListExpr::*)(const clang::ASTContext &, unsigned int)",
                    "name": "resizeInits",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::InitListExpr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "unsigned int",
                            "Init"
                        ],
                        [
                            "clang::Expr *",
                            "expr"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(const clang::ASTContext &, unsigned int, clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::InitListExpr::*)(const clang::ASTContext &, unsigned int, clang::Expr *)",
                    "name": "updateInit",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::InitListExpr::*)()",
                    "name": "getArrayFiller",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::InitListExpr::*)() const",
                    "name": "getArrayFiller",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "filler"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::InitListExpr::*)(clang::Expr *)",
                    "name": "setArrayFiller",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::InitListExpr::*)() const",
                    "name": "hasArrayFiller",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FieldDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::FieldDecl *",
                    "signature": "clang::FieldDecl * (clang::InitListExpr::*)()",
                    "name": "getInitializedFieldInUnion",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FieldDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::FieldDecl *",
                    "signature": "const clang::FieldDecl * (clang::InitListExpr::*)() const",
                    "name": "getInitializedFieldInUnion",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [
                        [
                            "clang::FieldDecl *",
                            "FD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FieldDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::InitListExpr::*)(clang::FieldDecl *)",
                    "name": "setInitializedFieldInUnion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::InitListExpr::*)() const",
                    "name": "isExplicit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::InitListExpr::*)() const",
                    "name": "isStringLiteralInit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::InitListExpr::*)() const",
                    "name": "isTransparent",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [
                        [
                            "const clang::LangOptions &",
                            "LangOpts"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::LangOptions &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::InitListExpr::*)(const clang::LangOptions &) const",
                    "name": "isIdiomaticZeroInitializer",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::InitListExpr::*)() const",
                    "name": "getLBraceLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::InitListExpr::*)(clang::SourceLocation)",
                    "name": "setLBraceLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::InitListExpr::*)() const",
                    "name": "getRBraceLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::InitListExpr::*)(clang::SourceLocation)",
                    "name": "setRBraceLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::InitListExpr::*)() const",
                    "name": "isSemanticForm",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::InitListExpr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::InitListExpr *",
                    "signature": "clang::InitListExpr * (clang::InitListExpr::*)() const",
                    "name": "getSemanticForm",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::InitListExpr::*)() const",
                    "name": "isSyntacticForm",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::InitListExpr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::InitListExpr *",
                    "signature": "clang::InitListExpr * (clang::InitListExpr::*)() const",
                    "name": "getSyntacticForm",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [
                        [
                            "clang::InitListExpr *",
                            "Init"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::InitListExpr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::InitListExpr::*)(clang::InitListExpr *)",
                    "name": "setSyntacticForm",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::InitListExpr::*)() const",
                    "name": "hadArrayRangeDesignator",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [
                        [
                            "bool",
                            "ARD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::InitListExpr::*)(bool)",
                    "name": "sawArrayRangeDesignator",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::InitListExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::InitListExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::InitListExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::InitListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::InitListExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "InitListExpr"
        },
        {
            "typename": "clang::DesignatedInitExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::DesignatedInitExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::DesignatedInitExpr::*)() const",
                    "name": "size",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::MutableArrayRef<Designator> ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::MutableArrayRef<clang::DesignatedInitExpr::Designator>",
                    "signature": "llvm::MutableArrayRef<clang::DesignatedInitExpr::Designator> (clang::DesignatedInitExpr::*)()",
                    "name": "designators",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::ArrayRef<Designator> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::DesignatedInitExpr::Designator>",
                    "signature": "llvm::ArrayRef<clang::DesignatedInitExpr::Designator> (clang::DesignatedInitExpr::*)() const",
                    "name": "designators",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DesignatedInitExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::DesignatedInitExpr::Designator *(unsigned int)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::DesignatedInitExpr::Designator *",
                    "signature": "clang::DesignatedInitExpr::Designator * (clang::DesignatedInitExpr::*)(unsigned int)",
                    "name": "getDesignator",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DesignatedInitExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::DesignatedInitExpr::Designator *(unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::DesignatedInitExpr::Designator *",
                    "signature": "const clang::DesignatedInitExpr::Designator * (clang::DesignatedInitExpr::*)(unsigned int) const",
                    "name": "getDesignator",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "const clang::DesignatedInitExpr::Designator *",
                            "Desigs"
                        ],
                        [
                            "unsigned int",
                            "NumDesigs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &, const clang::DesignatedInitExpr::Designator *, unsigned int)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DesignatedInitExpr::*)(const clang::ASTContext &, const clang::DesignatedInitExpr::Designator *, unsigned int)",
                    "name": "setDesignators",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DesignatedInitExpr",
                    "args": [
                        [
                            "const clang::DesignatedInitExpr::Designator &",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(const clang::DesignatedInitExpr::Designator &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::DesignatedInitExpr::*)(const clang::DesignatedInitExpr::Designator &) const",
                    "name": "getArrayIndex",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DesignatedInitExpr",
                    "args": [
                        [
                            "const clang::DesignatedInitExpr::Designator &",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(const clang::DesignatedInitExpr::Designator &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::DesignatedInitExpr::*)(const clang::DesignatedInitExpr::Designator &) const",
                    "name": "getArrayRangeStart",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DesignatedInitExpr",
                    "args": [
                        [
                            "const clang::DesignatedInitExpr::Designator &",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(const clang::DesignatedInitExpr::Designator &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::DesignatedInitExpr::*)(const clang::DesignatedInitExpr::Designator &) const",
                    "name": "getArrayRangeEnd",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DesignatedInitExpr::*)() const",
                    "name": "getEqualOrColonLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DesignatedInitExpr::*)(clang::SourceLocation)",
                    "name": "setEqualOrColonLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DesignatedInitExpr::*)() const",
                    "name": "usesGNUSyntax",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [
                        [
                            "bool",
                            "GNU"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DesignatedInitExpr::*)(bool)",
                    "name": "setGNUSyntax",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DesignatedInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::DesignatedInitExpr::*)() const",
                    "name": "getInit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "init"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DesignatedInitExpr::*)(clang::Expr *)",
                    "name": "setInit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::DesignatedInitExpr::*)() const",
                    "name": "getNumSubExprs",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DesignatedInitExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::DesignatedInitExpr::*)(unsigned int) const",
                    "name": "getSubExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Idx"
                        ],
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DesignatedInitExpr::*)(unsigned int, clang::Expr *)",
                    "name": "setSubExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "unsigned int",
                            "Idx"
                        ],
                        [
                            "const clang::DesignatedInitExpr::Designator *",
                            "First"
                        ],
                        [
                            "const clang::DesignatedInitExpr::Designator *",
                            "Last"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &, unsigned int, const clang::DesignatedInitExpr::Designator *, const clang::DesignatedInitExpr::Designator *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DesignatedInitExpr::*)(const clang::ASTContext &, unsigned int, const clang::DesignatedInitExpr::Designator *, const clang::DesignatedInitExpr::Designator *)",
                    "name": "ExpandDesignator",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::DesignatedInitExpr::*)() const",
                    "name": "getDesignatorsSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DesignatedInitExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DesignatedInitExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::DesignatedInitExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::DesignatedInitExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "DesignatedInitExpr"
        },
        {
            "typename": "clang::NoInitExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::NoInitExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::NoInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::NoInitExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NoInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::NoInitExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NoInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::NoInitExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::NoInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::NoInitExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "NoInitExpr"
        },
        {
            "typename": "clang::DesignatedInitUpdateExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::DesignatedInitUpdateExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitUpdateExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DesignatedInitUpdateExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitUpdateExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DesignatedInitUpdateExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DesignatedInitUpdateExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::DesignatedInitUpdateExpr::*)() const",
                    "name": "getBase",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitUpdateExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "Base"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DesignatedInitUpdateExpr::*)(clang::Expr *)",
                    "name": "setBase",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DesignatedInitUpdateExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::InitListExpr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::InitListExpr *",
                    "signature": "clang::InitListExpr * (clang::DesignatedInitUpdateExpr::*)() const",
                    "name": "getUpdater",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitUpdateExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "Updater"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::DesignatedInitUpdateExpr::*)(clang::Expr *)",
                    "name": "setUpdater",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitUpdateExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::DesignatedInitUpdateExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::DesignatedInitUpdateExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::DesignatedInitUpdateExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "DesignatedInitUpdateExpr"
        },
        {
            "typename": "clang::ArrayInitLoopExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ArrayInitLoopExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ArrayInitLoopExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::OpaqueValueExpr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::OpaqueValueExpr *",
                    "signature": "clang::OpaqueValueExpr * (clang::ArrayInitLoopExpr::*)() const",
                    "name": "getCommonExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ArrayInitLoopExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ArrayInitLoopExpr::*)() const",
                    "name": "getSubExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArrayInitLoopExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::APInt () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::APInt",
                    "signature": "llvm::APInt (clang::ArrayInitLoopExpr::*)() const",
                    "name": "getArraySize",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArrayInitLoopExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ArrayInitLoopExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArrayInitLoopExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ArrayInitLoopExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArrayInitLoopExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ArrayInitLoopExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ArrayInitLoopExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::ArrayInitLoopExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "ArrayInitLoopExpr"
        },
        {
            "typename": "clang::ArrayInitIndexExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ArrayInitIndexExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ArrayInitIndexExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ArrayInitIndexExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArrayInitIndexExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ArrayInitIndexExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArrayInitIndexExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ArrayInitIndexExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ArrayInitIndexExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::ArrayInitIndexExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "ArrayInitIndexExpr"
        },
        {
            "typename": "clang::ImplicitValueInitExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ImplicitValueInitExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ImplicitValueInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ImplicitValueInitExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ImplicitValueInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ImplicitValueInitExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ImplicitValueInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ImplicitValueInitExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ImplicitValueInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::ImplicitValueInitExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "ImplicitValueInitExpr"
        },
        {
            "typename": "clang::ParenListExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ParenListExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ParenListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ParenListExpr::*)() const",
                    "name": "getNumExprs",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ParenListExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Init"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ParenListExpr::*)(unsigned int)",
                    "name": "getExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ParenListExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Init"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::ParenListExpr::*)(unsigned int) const",
                    "name": "getExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ParenListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::Expr *> ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::ArrayRef<clang::Expr *>",
                    "signature": "llvm::ArrayRef<clang::Expr *> (clang::ParenListExpr::*)()",
                    "name": "exprs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParenListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ParenListExpr::*)() const",
                    "name": "getLParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParenListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ParenListExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParenListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ParenListExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParenListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ParenListExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ParenListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ParenListExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ParenListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::ParenListExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "ParenListExpr"
        },
        {
            "typename": "clang::GenericSelectionExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::GenericSelectionExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::GenericSelectionExpr::*)() const",
                    "name": "getNumAssocs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::GenericSelectionExpr::*)() const",
                    "name": "getGenericLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::GenericSelectionExpr::*)() const",
                    "name": "getDefaultLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::GenericSelectionExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GenericSelectionExpr",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::GenericSelectionExpr::*)(unsigned int) const",
                    "name": "getAssocExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GenericSelectionExpr",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::GenericSelectionExpr::*)(unsigned int)",
                    "name": "getAssocExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::Expr *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::Expr *>",
                    "signature": "llvm::ArrayRef<clang::Expr *> (clang::GenericSelectionExpr::*)() const",
                    "name": "getAssocExprs",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GenericSelectionExpr",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::TypeSourceInfo *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::TypeSourceInfo *",
                    "signature": "const clang::TypeSourceInfo * (clang::GenericSelectionExpr::*)(unsigned int) const",
                    "name": "getAssocTypeSourceInfo",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GenericSelectionExpr",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::GenericSelectionExpr::*)(unsigned int)",
                    "name": "getAssocTypeSourceInfo",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::TypeSourceInfo *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::TypeSourceInfo *>",
                    "signature": "llvm::ArrayRef<clang::TypeSourceInfo *> (clang::GenericSelectionExpr::*)() const",
                    "name": "getAssocTypeSourceInfos",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GenericSelectionExpr",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::GenericSelectionExpr::*)(unsigned int) const",
                    "name": "getAssocType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::GenericSelectionExpr::*)() const",
                    "name": "getControllingExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::GenericSelectionExpr::*)()",
                    "name": "getControllingExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::GenericSelectionExpr::*)() const",
                    "name": "isResultDependent",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::GenericSelectionExpr::*)() const",
                    "name": "getResultIndex",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::GenericSelectionExpr::*)() const",
                    "name": "getResultExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::GenericSelectionExpr::*)()",
                    "name": "getResultExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::GenericSelectionExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::GenericSelectionExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::GenericSelectionExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::GenericSelectionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::GenericSelectionExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "GenericSelectionExpr"
        },
        {
            "typename": "clang::ExtVectorElementExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ExtVectorElementExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ExtVectorElementExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::ExtVectorElementExpr::*)() const",
                    "name": "getBase",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ExtVectorElementExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ExtVectorElementExpr::*)()",
                    "name": "getBase",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ExtVectorElementExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ExtVectorElementExpr::*)(clang::Expr *)",
                    "name": "setBase",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExtVectorElementExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::IdentifierInfo &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::IdentifierInfo &",
                    "signature": "clang::IdentifierInfo & (clang::ExtVectorElementExpr::*)() const",
                    "name": "getAccessor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExtVectorElementExpr",
                    "args": [
                        [
                            "clang::IdentifierInfo *",
                            "II"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::IdentifierInfo *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ExtVectorElementExpr::*)(clang::IdentifierInfo *)",
                    "name": "setAccessor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExtVectorElementExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ExtVectorElementExpr::*)() const",
                    "name": "getAccessorLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExtVectorElementExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ExtVectorElementExpr::*)(clang::SourceLocation)",
                    "name": "setAccessorLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExtVectorElementExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ExtVectorElementExpr::*)() const",
                    "name": "getNumElements",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExtVectorElementExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ExtVectorElementExpr::*)() const",
                    "name": "containsDuplicateElements",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExtVectorElementExpr",
                    "args": [
                        [
                            "llvm::SmallVectorImpl<unsigned int> &",
                            "Elts"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (SmallVectorImpl<uint32_t> &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::ExtVectorElementExpr::*)(llvm::SmallVectorImpl<unsigned int> &) const",
                    "name": "getEncodedElementAccess",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExtVectorElementExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ExtVectorElementExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExtVectorElementExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ExtVectorElementExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExtVectorElementExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ExtVectorElementExpr::*)() const",
                    "name": "isArrow",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExtVectorElementExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ExtVectorElementExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ExtVectorElementExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::ExtVectorElementExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "ExtVectorElementExpr"
        },
        {
            "typename": "clang::BlockExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::BlockExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BlockExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::BlockDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::BlockDecl *",
                    "signature": "const clang::BlockDecl * (clang::BlockExpr::*)() const",
                    "name": "getBlockDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BlockExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::BlockDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::BlockDecl *",
                    "signature": "clang::BlockDecl * (clang::BlockExpr::*)()",
                    "name": "getBlockDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BlockExpr",
                    "args": [
                        [
                            "clang::BlockDecl *",
                            "BD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::BlockDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BlockExpr::*)(clang::BlockDecl *)",
                    "name": "setBlockDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::BlockExpr::*)() const",
                    "name": "getCaretLocation",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BlockExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::BlockExpr::*)() const",
                    "name": "getBody",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BlockExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::BlockExpr::*)()",
                    "name": "getBody",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BlockExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::BlockExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::BlockExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BlockExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FunctionProtoType *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::FunctionProtoType *",
                    "signature": "const clang::FunctionProtoType * (clang::BlockExpr::*)() const",
                    "name": "getFunctionType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BlockExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::BlockExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::BlockExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::BlockExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "BlockExpr"
        },
        {
            "typename": "clang::AsTypeExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::AsTypeExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AsTypeExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::AsTypeExpr::*)() const",
                    "name": "getSrcExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsTypeExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AsTypeExpr::*)() const",
                    "name": "getBuiltinLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsTypeExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AsTypeExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsTypeExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AsTypeExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsTypeExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AsTypeExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AsTypeExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::AsTypeExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::AsTypeExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::AsTypeExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "AsTypeExpr"
        },
        {
            "typename": "clang::PseudoObjectExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::PseudoObjectExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::PseudoObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::PseudoObjectExpr::*)()",
                    "name": "getSyntacticForm",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::PseudoObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::PseudoObjectExpr::*)() const",
                    "name": "getSyntacticForm",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::PseudoObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::PseudoObjectExpr::*)() const",
                    "name": "getResultExprIndex",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::PseudoObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::PseudoObjectExpr::*)()",
                    "name": "getResultExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::PseudoObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::PseudoObjectExpr::*)() const",
                    "name": "getResultExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::PseudoObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::PseudoObjectExpr::*)() const",
                    "name": "getNumSemanticExprs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::PseudoObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::iterator_range<semantics_iterator> ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::Expr *const *>",
                    "signature": "llvm::iterator_range<clang::Expr *const *> (clang::PseudoObjectExpr::*)()",
                    "name": "semantics",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::PseudoObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::iterator_range<const_semantics_iterator> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<const clang::Expr *const *>",
                    "signature": "llvm::iterator_range<const clang::Expr *const *> (clang::PseudoObjectExpr::*)() const",
                    "name": "semantics",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::PseudoObjectExpr",
                    "args": [
                        [
                            "unsigned int",
                            "index"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::PseudoObjectExpr::*)(unsigned int)",
                    "name": "getSemanticExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::PseudoObjectExpr",
                    "args": [
                        [
                            "unsigned int",
                            "index"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::PseudoObjectExpr::*)(unsigned int) const",
                    "name": "getSemanticExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::PseudoObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::PseudoObjectExpr::*)() const",
                    "name": "getExprLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::PseudoObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::PseudoObjectExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::PseudoObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::PseudoObjectExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::PseudoObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::PseudoObjectExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::PseudoObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::PseudoObjectExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "PseudoObjectExpr"
        },
        {
            "typename": "clang::AtomicExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::AtomicExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::AtomicExpr::*)() const",
                    "name": "getPtr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::AtomicExpr::*)() const",
                    "name": "getOrder",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::AtomicExpr::*)() const",
                    "name": "getScope",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::AtomicExpr::*)() const",
                    "name": "getVal1",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::AtomicExpr::*)() const",
                    "name": "getOrderFail",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::AtomicExpr::*)() const",
                    "name": "getVal2",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::AtomicExpr::*)() const",
                    "name": "getWeak",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::AtomicExpr::*)() const",
                    "name": "getValueType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::AtomicExpr::AtomicOp () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::AtomicExpr::AtomicOp",
                    "signature": "clang::AtomicExpr::AtomicOp (clang::AtomicExpr::*)() const",
                    "name": "getOp",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::AtomicExpr::*)() const",
                    "name": "getNumSubExprs",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::AtomicExpr::*)() const",
                    "name": "isVolatile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::AtomicExpr::*)() const",
                    "name": "isCmpXChg",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::AtomicExpr::*)() const",
                    "name": "isOpenCL",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AtomicExpr::*)() const",
                    "name": "getBuiltinLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AtomicExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AtomicExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AtomicExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::AtomicExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::AtomicExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::AtomicExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "std::unique_ptr<AtomicScopeModel> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::unique_ptr<clang::AtomicScopeModel, std::default_delete<clang::AtomicScopeModel> >",
                    "signature": "std::unique_ptr<clang::AtomicScopeModel, std::default_delete<clang::AtomicScopeModel> > (clang::AtomicExpr::*)() const",
                    "name": "getScopeModel",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "AtomicExpr"
        },
        {
            "typename": "clang::TypoExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::TypoExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::TypoExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::TypoExpr::*)()",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::TypoExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::const_child_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ConstStmtIterator>",
                    "signature": "llvm::iterator_range<clang::ConstStmtIterator> (clang::TypoExpr::*)() const",
                    "name": "children",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::TypoExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::TypoExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypoExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::TypoExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "TypoExpr"
        },
        {
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)()",
                    "name": "clearIDTables",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "const clang::SourceManager &",
                            "Old"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::SourceManager &)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)(const clang::SourceManager &)",
                    "name": "initializeForReplay",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DiagnosticsEngine &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DiagnosticsEngine &",
                    "signature": "clang::DiagnosticsEngine & (clang::SourceManager::*)() const",
                    "name": "getDiagnostics",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FileManager &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FileManager &",
                    "signature": "clang::FileManager & (clang::SourceManager::*)() const",
                    "name": "getFileManager",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "bool",
                            "value"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)(bool)",
                    "name": "setOverridenFilesKeepOriginalName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)() const",
                    "name": "userFilesAreVolatile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ModuleBuildStack () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc> >",
                    "signature": "llvm::ArrayRef<std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc> > (clang::SourceManager::*)() const",
                    "name": "getModuleBuildStack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "llvm::ArrayRef<std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc> >",
                            "stack"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ModuleBuildStack)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)(llvm::ArrayRef<std::pair<std::__cxx11::basic_string<char>, clang::FullSourceLoc> >)",
                    "name": "setModuleBuildStack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "llvm::StringRef",
                            "moduleName"
                        ],
                        [
                            "clang::FullSourceLoc",
                            "importLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::StringRef, clang::FullSourceLoc)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)(llvm::StringRef, clang::FullSourceLoc)",
                    "name": "pushModuleBuildStack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FileID () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FileID",
                    "signature": "clang::FileID (clang::SourceManager::*)() const",
                    "name": "getMainFileID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FileID)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)(clang::FileID)",
                    "name": "setMainFileID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "Preamble"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FileID)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)(clang::FileID)",
                    "name": "setPreambleFileID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FileID () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FileID",
                    "signature": "clang::FileID (clang::SourceManager::*)() const",
                    "name": "getPreambleFileID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ],
                        [
                            "clang::SourceLocation",
                            "IncludePos"
                        ],
                        [
                            "clang::SrcMgr::CharacteristicKind",
                            "FileCharacter"
                        ],
                        [
                            "int",
                            "LoadedID"
                        ],
                        [
                            "unsigned int",
                            "LoadedOffset"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::FileID (const clang::FileEntry *, clang::SourceLocation, SrcMgr::CharacteristicKind, int, unsigned int)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::FileID",
                    "signature": "clang::FileID (clang::SourceManager::*)(const clang::FileEntry *, clang::SourceLocation, clang::SrcMgr::CharacteristicKind, int, unsigned int)",
                    "name": "createFileID",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >",
                            "Buffer"
                        ],
                        [
                            "clang::SrcMgr::CharacteristicKind",
                            "FileCharacter"
                        ],
                        [
                            "int",
                            "LoadedID"
                        ],
                        [
                            "unsigned int",
                            "LoadedOffset"
                        ],
                        [
                            "clang::SourceLocation",
                            "IncludeLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::FileID (std::unique_ptr<llvm::MemoryBuffer>, SrcMgr::CharacteristicKind, int, unsigned int, clang::SourceLocation)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::FileID",
                    "signature": "clang::FileID (clang::SourceManager::*)(std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >, clang::SrcMgr::CharacteristicKind, int, unsigned int, clang::SourceLocation)",
                    "name": "createFileID",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceManager::UnownedTag",
                            ""
                        ],
                        [
                            "llvm::MemoryBuffer *",
                            "Buffer"
                        ],
                        [
                            "clang::SrcMgr::CharacteristicKind",
                            "FileCharacter"
                        ],
                        [
                            "int",
                            "LoadedID"
                        ],
                        [
                            "unsigned int",
                            "LoadedOffset"
                        ],
                        [
                            "clang::SourceLocation",
                            "IncludeLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::FileID (clang::SourceManager::UnownedTag, llvm::MemoryBuffer *, SrcMgr::CharacteristicKind, int, unsigned int, clang::SourceLocation)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::FileID",
                    "signature": "clang::FileID (clang::SourceManager::*)(clang::SourceManager::UnownedTag, llvm::MemoryBuffer *, clang::SrcMgr::CharacteristicKind, int, unsigned int, clang::SourceLocation)",
                    "name": "createFileID",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ],
                        [
                            "clang::SrcMgr::CharacteristicKind",
                            "FileCharacter"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::FileID (const clang::FileEntry *, SrcMgr::CharacteristicKind)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::FileID",
                    "signature": "clang::FileID (clang::SourceManager::*)(const clang::FileEntry *, clang::SrcMgr::CharacteristicKind)",
                    "name": "getOrCreateFileID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "clang::SourceLocation",
                            "ExpansionLoc"
                        ],
                        [
                            "unsigned int",
                            "TokLength"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (clang::SourceLocation, clang::SourceLocation, unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation, unsigned int)",
                    "name": "createMacroArgExpansionLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "clang::SourceLocation",
                            "ExpansionLocStart"
                        ],
                        [
                            "clang::SourceLocation",
                            "ExpansionLocEnd"
                        ],
                        [
                            "unsigned int",
                            "TokLength"
                        ],
                        [
                            "bool",
                            "ExpansionIsTokenRange"
                        ],
                        [
                            "int",
                            "LoadedID"
                        ],
                        [
                            "unsigned int",
                            "LoadedOffset"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (clang::SourceLocation, clang::SourceLocation, clang::SourceLocation, unsigned int, bool, int, unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation, clang::SourceLocation, unsigned int, bool, int, unsigned int)",
                    "name": "createExpansionLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "SpellingLoc"
                        ],
                        [
                            "clang::SourceLocation",
                            "TokenStart"
                        ],
                        [
                            "clang::SourceLocation",
                            "TokenEnd"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (clang::SourceLocation, clang::SourceLocation, clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation, clang::SourceLocation)",
                    "name": "createTokenSplitLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "File"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::MemoryBuffer *(const clang::FileEntry *, bool *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::MemoryBuffer *",
                    "signature": "llvm::MemoryBuffer * (clang::SourceManager::*)(const clang::FileEntry *, bool *)",
                    "name": "getMemoryBufferForFile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ],
                        [
                            "llvm::MemoryBuffer *",
                            "Buffer"
                        ],
                        [
                            "bool",
                            "DoNotFree"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::FileEntry *, llvm::MemoryBuffer *, bool)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)(const clang::FileEntry *, llvm::MemoryBuffer *, bool)",
                    "name": "overrideFileContents",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ],
                        [
                            "std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >",
                            "Buffer"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::FileEntry *, std::unique_ptr<llvm::MemoryBuffer>)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)(const clang::FileEntry *, std::unique_ptr<llvm::MemoryBuffer, std::default_delete<llvm::MemoryBuffer> >)",
                    "name": "overrideFileContents",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ],
                        [
                            "const clang::FileEntry *",
                            "NewFile"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::FileEntry *, const clang::FileEntry *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)(const clang::FileEntry *, const clang::FileEntry *)",
                    "name": "overrideFileContents",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "File"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::FileEntry *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(const clang::FileEntry *) const",
                    "name": "isFileOverridden",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "File"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::FileEntry *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)(const clang::FileEntry *)",
                    "name": "disableFileContentsOverride",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::FileEntry *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)(const clang::FileEntry *)",
                    "name": "setFileIsTransient",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "bool",
                            "Transient"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)(bool)",
                    "name": "setAllFilesAreTransient",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::MemoryBuffer *(clang::FileID, clang::SourceLocation, bool *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::MemoryBuffer *",
                    "signature": "llvm::MemoryBuffer * (clang::SourceManager::*)(clang::FileID, clang::SourceLocation, bool *) const",
                    "name": "getBuffer",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::MemoryBuffer *(clang::FileID, bool *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::MemoryBuffer *",
                    "signature": "llvm::MemoryBuffer * (clang::SourceManager::*)(clang::FileID, bool *) const",
                    "name": "getBuffer",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::FileEntry *(clang::FileID) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::FileEntry *",
                    "signature": "const clang::FileEntry * (clang::SourceManager::*)(clang::FileID) const",
                    "name": "getFileEntryForID",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "const clang::SrcMgr::SLocEntry &",
                            "sloc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::FileEntry *(const SrcMgr::SLocEntry &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::FileEntry *",
                    "signature": "const clang::FileEntry * (clang::SourceManager::*)(const clang::SrcMgr::SLocEntry &) const",
                    "name": "getFileEntryForSLocEntry",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (clang::FileID, bool *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::SourceManager::*)(clang::FileID, bool *) const",
                    "name": "getBufferData",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::FileID) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::FileID) const",
                    "name": "getNumCreatedFIDsForFileID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "unsigned int",
                            "NumFIDs"
                        ],
                        [
                            "bool",
                            "Force"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FileID, unsigned int, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)(clang::FileID, unsigned int, bool) const",
                    "name": "setNumCreatedFIDsForFileID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "SpellingLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::FileID (clang::SourceLocation) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FileID",
                    "signature": "clang::FileID (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getFileID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "SpellingLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getFilename",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (clang::FileID) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::FileID) const",
                    "name": "getLocForStartOfFile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (clang::FileID) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::FileID) const",
                    "name": "getLocForEndOfFile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (clang::FileID) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::FileID) const",
                    "name": "getIncludeLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::pair<SourceLocation, StringRef> (clang::SourceLocation) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::pair<clang::SourceLocation, llvm::StringRef>",
                    "signature": "std::pair<clang::SourceLocation, llvm::StringRef> (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getModuleImportLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getExpansionLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getFileLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CharSourceRange (clang::SourceLocation) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharSourceRange",
                    "signature": "clang::CharSourceRange (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getImmediateExpansionRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CharSourceRange (clang::SourceLocation) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharSourceRange",
                    "signature": "clang::CharSourceRange (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getExpansionRange",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceRange",
                            "Range"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CharSourceRange (clang::SourceRange) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharSourceRange",
                    "signature": "clang::CharSourceRange (clang::SourceManager::*)(clang::SourceRange) const",
                    "name": "getExpansionRange",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::CharSourceRange",
                            "Range"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CharSourceRange (clang::CharSourceRange) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharSourceRange",
                    "signature": "clang::CharSourceRange (clang::SourceManager::*)(clang::CharSourceRange) const",
                    "name": "getExpansionRange",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getSpellingLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getImmediateSpellingLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "unsigned int",
                            "Offset"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (clang::FileID, unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::FileID, unsigned int) const",
                    "name": "getComposedLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::pair<FileID, unsigned int> (clang::SourceLocation) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::pair<clang::FileID, unsigned int>",
                    "signature": "std::pair<clang::FileID, unsigned int> (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getDecomposedLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::pair<FileID, unsigned int> (clang::SourceLocation) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::pair<clang::FileID, unsigned int>",
                    "signature": "std::pair<clang::FileID, unsigned int> (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getDecomposedExpansionLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::pair<FileID, unsigned int> (clang::SourceLocation) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::pair<clang::FileID, unsigned int>",
                    "signature": "std::pair<clang::FileID, unsigned int> (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getDecomposedSpellingLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::pair<FileID, unsigned int> (clang::FileID) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::pair<clang::FileID, unsigned int>",
                    "signature": "std::pair<clang::FileID, unsigned int> (clang::SourceManager::*)(clang::FileID) const",
                    "name": "getDecomposedIncludedLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "SpellingLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getFileOffset",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "clang::SourceLocation *",
                            "StartLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation *) const",
                    "name": "isMacroArgExpansion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "isMacroBodyExpansion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "clang::SourceLocation *",
                            "MacroBegin"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation *) const",
                    "name": "isAtStartOfImmediateMacroExpansion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "clang::SourceLocation *",
                            "MacroEnd"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation *) const",
                    "name": "isAtEndOfImmediateMacroExpansion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "clang::SourceLocation",
                            "Start"
                        ],
                        [
                            "unsigned int",
                            "Length"
                        ],
                        [
                            "unsigned int *",
                            "RelativeOffset"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation, unsigned int, unsigned int *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation, unsigned int, unsigned int *) const",
                    "name": "isInSLocAddrSpace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "LHS"
                        ],
                        [
                            "clang::SourceLocation",
                            "RHS"
                        ],
                        [
                            "int *",
                            "RelativeOffset"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation, int *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation, int *) const",
                    "name": "isInSameSLocAddrSpace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "SL"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const char *(clang::SourceLocation, bool *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "aux",
                    "const": true,
                    "result_type": "const char *",
                    "signature": "const char * (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "name": "getCharacterData",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "unsigned int",
                            "FilePos"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::FileID, unsigned int, bool *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::FileID, unsigned int, bool *) const",
                    "name": "getColumnNumber",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::SourceLocation, bool *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "aux",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "name": "getSpellingColumnNumber",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::SourceLocation, bool *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "aux",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "name": "getExpansionColumnNumber",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::SourceLocation, bool *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "aux",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "name": "getPresumedColumnNumber",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "unsigned int",
                            "FilePos"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::FileID, unsigned int, bool *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::FileID, unsigned int, bool *) const",
                    "name": "getLineNumber",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::SourceLocation, bool *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "aux",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "name": "getSpellingLineNumber",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::SourceLocation, bool *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "aux",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "name": "getExpansionLineNumber",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::SourceLocation, bool *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "aux",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "name": "getPresumedLineNumber",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef (clang::SourceLocation, bool *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "aux",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::SourceManager::*)(clang::SourceLocation, bool *) const",
                    "name": "getBufferName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "SrcMgr::CharacteristicKind (clang::SourceLocation) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SrcMgr::CharacteristicKind",
                    "signature": "clang::SrcMgr::CharacteristicKind (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getFileCharacteristic",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "bool",
                            "UseLineDirectives"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::PresumedLoc (clang::SourceLocation, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::PresumedLoc",
                    "signature": "clang::PresumedLoc (clang::SourceManager::*)(clang::SourceLocation, bool) const",
                    "name": "getPresumedLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "isInMainFile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc1"
                        ],
                        [
                            "clang::SourceLocation",
                            "Loc2"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation) const",
                    "name": "isWrittenInSameFile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "isWrittenInMainFile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "isWrittenInBuiltinFile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "isWrittenInCommandLineFile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "isInSystemHeader",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "isInExternCSystemHeader",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "isInSystemMacro",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::FileID) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceManager::*)(clang::FileID) const",
                    "name": "getFileIDSize",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "unsigned int *",
                            "RelativeOffset"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation, clang::FileID, unsigned int *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::FileID, unsigned int *) const",
                    "name": "isInFileID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Str"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (llvm::StringRef)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceManager::*)(llvm::StringRef)",
                    "name": "getLineTableFilenameID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ],
                        [
                            "unsigned int",
                            "LineNo"
                        ],
                        [
                            "int",
                            "FilenameID"
                        ],
                        [
                            "bool",
                            "IsFileEntry"
                        ],
                        [
                            "bool",
                            "IsFileExit"
                        ],
                        [
                            "clang::SrcMgr::CharacteristicKind",
                            "FileKind"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation, unsigned int, int, bool, bool, SrcMgr::CharacteristicKind)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)(clang::SourceLocation, unsigned int, int, bool, bool, clang::SrcMgr::CharacteristicKind)",
                    "name": "AddLineNote",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)() const",
                    "name": "hasLineTable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LineTableInfo &()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::LineTableInfo &",
                    "signature": "clang::LineTableInfo & (clang::SourceManager::*)()",
                    "name": "getLineTable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "size_t () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (clang::SourceManager::*)() const",
                    "name": "getContentCacheSize",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceManager::MemoryBufferSizes () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceManager::MemoryBufferSizes",
                    "signature": "clang::SourceManager::MemoryBufferSizes (clang::SourceManager::*)() const",
                    "name": "getMemoryBufferSizes",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "size_t () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (clang::SourceManager::*)() const",
                    "name": "getDataStructureSizes",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ],
                        [
                            "unsigned int",
                            "Line"
                        ],
                        [
                            "unsigned int",
                            "Col"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (const clang::FileEntry *, unsigned int, unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(const clang::FileEntry *, unsigned int, unsigned int) const",
                    "name": "translateFileLineCol",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "SourceFile"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::FileID (const clang::FileEntry *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FileID",
                    "signature": "clang::FileID (clang::SourceManager::*)(const clang::FileEntry *) const",
                    "name": "translateFile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "unsigned int",
                            "Line"
                        ],
                        [
                            "unsigned int",
                            "Col"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (clang::FileID, unsigned int, unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::FileID, unsigned int, unsigned int) const",
                    "name": "translateLineCol",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getMacroArgExpandedLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "LHS"
                        ],
                        [
                            "clang::SourceLocation",
                            "RHS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation) const",
                    "name": "isBeforeInTranslationUnit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "std::pair<clang::FileID, unsigned int> &",
                            "LOffs"
                        ],
                        [
                            "std::pair<clang::FileID, unsigned int> &",
                            "ROffs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::pair<bool, bool> (std::pair<FileID, unsigned int> &, std::pair<FileID, unsigned int> &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::pair<bool, bool>",
                    "signature": "std::pair<bool, bool> (clang::SourceManager::*)(std::pair<clang::FileID, unsigned int> &, std::pair<clang::FileID, unsigned int> &) const",
                    "name": "isInTheSameTranslationUnit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "LHS"
                        ],
                        [
                            "clang::SourceLocation",
                            "RHS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation) const",
                    "name": "isBeforeInSLocAddrSpace",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "LHS"
                        ],
                        [
                            "unsigned int",
                            "RHS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation, unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, unsigned int) const",
                    "name": "isBeforeInSLocAddrSpace",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Location"
                        ],
                        [
                            "clang::SourceLocation",
                            "Start"
                        ],
                        [
                            "clang::SourceLocation",
                            "End"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation, clang::SourceLocation, clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation, clang::SourceLocation, clang::SourceLocation) const",
                    "name": "isPointWithin",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "const clang::FileEntry *",
                            "File"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::FileEntry *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(const clang::FileEntry *) const",
                    "name": "hasFileInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)() const",
                    "name": "PrintStats",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)() const",
                    "name": "dump",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceManager::*)() const",
                    "name": "local_sloc_entry_size",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "unsigned int",
                            "Index"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const SrcMgr::SLocEntry &(unsigned int, bool *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::SrcMgr::SLocEntry &",
                    "signature": "const clang::SrcMgr::SLocEntry & (clang::SourceManager::*)(unsigned int, bool *) const",
                    "name": "getLocalSLocEntry",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceManager::*)() const",
                    "name": "loaded_sloc_entry_size",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "unsigned int",
                            "Index"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const SrcMgr::SLocEntry &(unsigned int, bool *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::SrcMgr::SLocEntry &",
                    "signature": "const clang::SrcMgr::SLocEntry & (clang::SourceManager::*)(unsigned int, bool *) const",
                    "name": "getLoadedSLocEntry",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ],
                        [
                            "bool *",
                            "Invalid"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const SrcMgr::SLocEntry &(clang::FileID, bool *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::SrcMgr::SLocEntry &",
                    "signature": "const clang::SrcMgr::SLocEntry & (clang::SourceManager::*)(clang::FileID, bool *) const",
                    "name": "getSLocEntry",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SourceManager::*)() const",
                    "name": "getNextLocalOffset",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::ExternalSLocEntrySource *",
                            "Source"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ExternalSLocEntrySource *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::SourceManager::*)(clang::ExternalSLocEntrySource *)",
                    "name": "setExternalSLocEntrySource",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "unsigned int",
                            "NumSLocEntries"
                        ],
                        [
                            "unsigned int",
                            "TotalSize"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::pair<int, unsigned int> (unsigned int, unsigned int)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "std::pair<int, unsigned int>",
                    "signature": "std::pair<int, unsigned int> (clang::SourceManager::*)(unsigned int, unsigned int)",
                    "name": "AllocateLoadedSLocEntries",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "isLoadedSourceLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "isLocalSourceLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::FileID) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::FileID) const",
                    "name": "isLoadedFileID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::FileID",
                            "FID"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::FileID) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SourceManager::*)(clang::FileID) const",
                    "name": "isLocalFileID",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getImmediateMacroCallerLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SourceManager",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation (clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SourceManager::*)(clang::SourceLocation) const",
                    "name": "getTopMacroCallerLoc",
                    "is_overload": false
                }
            ],
            "typename": "clang::SourceManager",
            "is_disabled": false,
            "supers": [],
            "name": "SourceManager",
            "node": false
        },
        {
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "std::vector<Decl *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::vector<clang::Decl *, std::allocator<clang::Decl *> >",
                    "signature": "std::vector<clang::Decl *, std::allocator<clang::Decl *> > (clang::ASTContext::*)() const",
                    "name": "getTraversalScope",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const std::vector<clang::Decl *, std::allocator<clang::Decl *> > &",
                            ""
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const std::vector<Decl *> &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const std::vector<clang::Decl *, std::allocator<clang::Decl *> > &)",
                    "name": "setTraversalScope",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ast_type_traits::DynTypedNode &",
                            "Node"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::ASTContext::DynTypedNodeList (const ast_type_traits::DynTypedNode &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::ASTContext::DynTypedNodeList",
                    "signature": "clang::ASTContext::DynTypedNodeList (clang::ASTContext::*)(const clang::ast_type_traits::DynTypedNode &)",
                    "name": "getParents",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::PrintingPolicy &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::PrintingPolicy &",
                    "signature": "const clang::PrintingPolicy & (clang::ASTContext::*)() const",
                    "name": "getPrintingPolicy",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::PrintingPolicy &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::PrintingPolicy &)",
                    "name": "setPrintingPolicy",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceManager &()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::SourceManager &",
                    "signature": "clang::SourceManager & (clang::ASTContext::*)()",
                    "name": "getSourceManager",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::SourceManager &() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::SourceManager &",
                    "signature": "const clang::SourceManager & (clang::ASTContext::*)() const",
                    "name": "getSourceManager",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::BumpPtrAllocator &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096> &",
                    "signature": "llvm::BumpPtrAllocatorImpl<llvm::MallocAllocator, 4096, 4096> & (clang::ASTContext::*)() const",
                    "name": "getAllocator",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "void *",
                            "Ptr"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (void *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(void *) const",
                    "name": "Deallocate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "size_t () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (clang::ASTContext::*)() const",
                    "name": "getASTAllocatedMemory",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "size_t () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (clang::ASTContext::*)() const",
                    "name": "getSideTableAllocatedMemory",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "PartialDiagnostic::StorageAllocator &()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::PartialDiagnostic::StorageAllocator &",
                    "signature": "clang::PartialDiagnostic::StorageAllocator & (clang::ASTContext::*)()",
                    "name": "getDiagAllocator",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TargetInfo &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::TargetInfo &",
                    "signature": "const clang::TargetInfo & (clang::ASTContext::*)() const",
                    "name": "getTargetInfo",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TargetInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::TargetInfo *",
                    "signature": "const clang::TargetInfo * (clang::ASTContext::*)() const",
                    "name": "getAuxTargetInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "unsigned int",
                            "DestWidth"
                        ],
                        [
                            "unsigned int",
                            "Signed"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (unsigned int, unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(unsigned int, unsigned int) const",
                    "name": "getIntTypeForBitwidth",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "unsigned int",
                            "DestWidth"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(unsigned int) const",
                    "name": "getRealTypeForBitwidth",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::AtomicExpr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::AtomicExpr *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(const clang::AtomicExpr *) const",
                    "name": "AtomicUsesUnsupportedLibcall",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::LangOptions &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::LangOptions &",
                    "signature": "const clang::LangOptions & (clang::ASTContext::*)() const",
                    "name": "getLangOpts",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::SanitizerBlacklist &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::SanitizerBlacklist &",
                    "signature": "const clang::SanitizerBlacklist & (clang::ASTContext::*)() const",
                    "name": "getSanitizerBlacklist",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::XRayFunctionFilter &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::XRayFunctionFilter &",
                    "signature": "const clang::XRayFunctionFilter & (clang::ASTContext::*)() const",
                    "name": "getXRayFilter",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DiagnosticsEngine &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DiagnosticsEngine &",
                    "signature": "clang::DiagnosticsEngine & (clang::ASTContext::*)() const",
                    "name": "getDiagnostics",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::FullSourceLoc (clang::SourceLocation) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FullSourceLoc",
                    "signature": "clang::FullSourceLoc (clang::ASTContext::*)(clang::SourceLocation) const",
                    "name": "getFullLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::RawComment *(const clang::Decl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::RawComment *",
                    "signature": "clang::RawComment * (clang::ASTContext::*)(const clang::Decl *) const",
                    "name": "getRawCommentForDeclNoCache",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::RawCommentList &()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::RawCommentList &",
                    "signature": "clang::RawCommentList & (clang::ASTContext::*)()",
                    "name": "getRawCommentList",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::RawComment &",
                            "RC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::RawComment &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::RawComment &)",
                    "name": "addComment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ],
                        [
                            "const clang::Preprocessor *",
                            "PP"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "comments::FullComment *(const clang::Decl *, const clang::Preprocessor *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::comments::FullComment *",
                    "signature": "clang::comments::FullComment * (clang::ASTContext::*)(const clang::Decl *, const clang::Preprocessor *) const",
                    "name": "getCommentForDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "comments::FullComment *(const clang::Decl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::comments::FullComment *",
                    "signature": "clang::comments::FullComment * (clang::ASTContext::*)(const clang::Decl *) const",
                    "name": "getLocalCommentForDeclUncached",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::comments::FullComment *",
                            "FC"
                        ],
                        [
                            "const clang::Decl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "comments::FullComment *(comments::FullComment *, const clang::Decl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::comments::FullComment *",
                    "signature": "clang::comments::FullComment * (clang::ASTContext::*)(clang::comments::FullComment *, const clang::Decl *) const",
                    "name": "cloneFullComment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "comments::CommandTraits &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::comments::CommandTraits &",
                    "signature": "clang::comments::CommandTraits & (clang::ASTContext::*)() const",
                    "name": "getCommentCommandTraits",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::AttrVec &(const clang::Decl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::SmallVector<clang::Attr *, 4> &",
                    "signature": "llvm::SmallVector<clang::Attr *, 4> & (clang::ASTContext::*)(const clang::Decl *)",
                    "name": "getDeclAttrs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::Decl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::Decl *)",
                    "name": "eraseDeclAttrs",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "Var"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::MemberSpecializationInfo *(const clang::VarDecl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::MemberSpecializationInfo *",
                    "signature": "clang::MemberSpecializationInfo * (clang::ASTContext::*)(const clang::VarDecl *)",
                    "name": "getInstantiatedFromStaticDataMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "Var"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::ASTContext::TemplateOrSpecializationInfo (const clang::VarDecl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::PointerUnion<clang::VarTemplateDecl *, clang::MemberSpecializationInfo *>",
                    "signature": "llvm::PointerUnion<clang::VarTemplateDecl *, clang::MemberSpecializationInfo *> (clang::ASTContext::*)(const clang::VarDecl *)",
                    "name": "getTemplateOrSpecializationInfo",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::FunctionDecl *",
                            "FD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionDecl *(const clang::FunctionDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::FunctionDecl *",
                    "signature": "clang::FunctionDecl * (clang::ASTContext::*)(const clang::FunctionDecl *)",
                    "name": "getClassScopeSpecializationPattern",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "FD"
                        ],
                        [
                            "clang::FunctionDecl *",
                            "Pattern"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FunctionDecl *, clang::FunctionDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::FunctionDecl *, clang::FunctionDecl *)",
                    "name": "setClassScopeSpecializationPattern",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::VarDecl *",
                            "Inst"
                        ],
                        [
                            "clang::VarDecl *",
                            "Tmpl"
                        ],
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ],
                        [
                            "clang::SourceLocation",
                            "PointOfInstantiation"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::VarDecl *, clang::VarDecl *, clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::VarDecl *, clang::VarDecl *, clang::TemplateSpecializationKind, clang::SourceLocation)",
                    "name": "setInstantiatedFromStaticDataMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::VarDecl *",
                            "Inst"
                        ],
                        [
                            "llvm::PointerUnion<clang::VarTemplateDecl *, clang::MemberSpecializationInfo *>",
                            "TSI"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::VarDecl *, clang::ASTContext::TemplateOrSpecializationInfo)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::VarDecl *, llvm::PointerUnion<clang::VarTemplateDecl *, clang::MemberSpecializationInfo *>)",
                    "name": "setTemplateOrSpecializationInfo",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "Inst"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::NamedDecl *(clang::NamedDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::NamedDecl *",
                    "signature": "clang::NamedDecl * (clang::ASTContext::*)(clang::NamedDecl *)",
                    "name": "getInstantiatedFromUsingDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "Inst"
                        ],
                        [
                            "clang::NamedDecl *",
                            "Pattern"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::NamedDecl *, clang::NamedDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::NamedDecl *, clang::NamedDecl *)",
                    "name": "setInstantiatedFromUsingDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::UsingShadowDecl *",
                            "Inst"
                        ],
                        [
                            "clang::UsingShadowDecl *",
                            "Pattern"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::UsingShadowDecl *, clang::UsingShadowDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::UsingShadowDecl *, clang::UsingShadowDecl *)",
                    "name": "setInstantiatedFromUsingShadowDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::UsingShadowDecl *",
                            "Inst"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::UsingShadowDecl *(clang::UsingShadowDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::UsingShadowDecl *",
                    "signature": "clang::UsingShadowDecl * (clang::ASTContext::*)(clang::UsingShadowDecl *)",
                    "name": "getInstantiatedFromUsingShadowDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::FieldDecl *",
                            "Field"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::FieldDecl *(clang::FieldDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::FieldDecl *",
                    "signature": "clang::FieldDecl * (clang::ASTContext::*)(clang::FieldDecl *)",
                    "name": "getInstantiatedFromUnnamedFieldDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::FieldDecl *",
                            "Inst"
                        ],
                        [
                            "clang::FieldDecl *",
                            "Tmpl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FieldDecl *, clang::FieldDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::FieldDecl *, clang::FieldDecl *)",
                    "name": "setInstantiatedFromUnnamedFieldDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::CXXMethodDecl *",
                            "Method"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (const clang::CXXMethodDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(const clang::CXXMethodDecl *) const",
                    "name": "overridden_methods_size",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::CXXMethodDecl *",
                            "Method"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::ASTContext::overridden_method_range (const clang::CXXMethodDecl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<const clang::CXXMethodDecl *const *>",
                    "signature": "llvm::iterator_range<const clang::CXXMethodDecl *const *> (clang::ASTContext::*)(const clang::CXXMethodDecl *) const",
                    "name": "overridden_methods",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::CXXMethodDecl *",
                            "Method"
                        ],
                        [
                            "const clang::CXXMethodDecl *",
                            "Overridden"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::CXXMethodDecl *, const clang::CXXMethodDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::CXXMethodDecl *, const clang::CXXMethodDecl *)",
                    "name": "addOverriddenMethod",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::NamedDecl *",
                            "Method"
                        ],
                        [
                            "llvm::SmallVectorImpl<const clang::NamedDecl *> &",
                            "Overridden"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::NamedDecl *, SmallVectorImpl<const clang::NamedDecl *> &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::NamedDecl *, llvm::SmallVectorImpl<const clang::NamedDecl *> &) const",
                    "name": "getOverriddenMethods",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::ImportDecl *",
                            "Import"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ImportDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::ImportDecl *)",
                    "name": "addedLocalImportDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ASTContext::import_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::ASTContext::import_iterator>",
                    "signature": "llvm::iterator_range<clang::ASTContext::import_iterator> (clang::ASTContext::*)() const",
                    "name": "local_imports",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::Decl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl *(clang::Decl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::Decl *",
                    "signature": "clang::Decl * (clang::ASTContext::*)(clang::Decl *)",
                    "name": "getPrimaryMergedDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::Decl *",
                            "D"
                        ],
                        [
                            "clang::Decl *",
                            "Primary"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Decl *, clang::Decl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::Decl *, clang::Decl *)",
                    "name": "setPrimaryMergedDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "ND"
                        ],
                        [
                            "clang::Module *",
                            "M"
                        ],
                        [
                            "bool",
                            "NotifyListeners"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::NamedDecl *, clang::Module *, bool)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::NamedDecl *, clang::Module *, bool)",
                    "name": "mergeDefinitionIntoModule",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "ND"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::NamedDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::NamedDecl *)",
                    "name": "deduplicateMergedDefinitonsFor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::NamedDecl *",
                            "Def"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::Module *> (const clang::NamedDecl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::ArrayRef<clang::Module *>",
                    "signature": "llvm::ArrayRef<clang::Module *> (clang::ASTContext::*)(const clang::NamedDecl *)",
                    "name": "getModulesWithMergedDefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::Module *",
                            "M"
                        ],
                        [
                            "clang::Decl *",
                            "Init"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Module *, clang::Decl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::Module *, clang::Decl *)",
                    "name": "addModuleInitializer",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::Module *",
                            "M"
                        ],
                        [
                            "llvm::ArrayRef<unsigned int>",
                            "IDs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Module *, ArrayRef<uint32_t>)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::Module *, llvm::ArrayRef<unsigned int>)",
                    "name": "addLazyModuleInitializers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::Module *",
                            "M"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::Decl *> (clang::Module *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::ArrayRef<clang::Decl *>",
                    "signature": "llvm::ArrayRef<clang::Decl *> (clang::ASTContext::*)(clang::Module *)",
                    "name": "getModuleInitializers",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TranslationUnitDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TranslationUnitDecl *",
                    "signature": "clang::TranslationUnitDecl * (clang::ASTContext::*)() const",
                    "name": "getTranslationUnitDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ExternCContextDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ExternCContextDecl *",
                    "signature": "clang::ExternCContextDecl * (clang::ASTContext::*)() const",
                    "name": "getExternCContextDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::BuiltinTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::BuiltinTemplateDecl *",
                    "signature": "clang::BuiltinTemplateDecl * (clang::ASTContext::*)() const",
                    "name": "getMakeIntegerSeqDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::BuiltinTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::BuiltinTemplateDecl *",
                    "signature": "clang::BuiltinTemplateDecl * (clang::ASTContext::*)() const",
                    "name": "getTypePackElementDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "llvm::IntrusiveRefCntPtr<clang::ExternalASTSource>",
                            "Source"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (IntrusiveRefCntPtr<clang::ExternalASTSource>)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(llvm::IntrusiveRefCntPtr<clang::ExternalASTSource>)",
                    "name": "setExternalSource",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ExternalASTSource *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ExternalASTSource *",
                    "signature": "clang::ExternalASTSource * (clang::ASTContext::*)() const",
                    "name": "getExternalSource",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::ASTMutationListener *",
                            "Listener"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ASTMutationListener *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::ASTMutationListener *)",
                    "name": "setASTMutationListener",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ASTMutationListener *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ASTMutationListener *",
                    "signature": "clang::ASTMutationListener * (clang::ASTContext::*)() const",
                    "name": "getASTMutationListener",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)() const",
                    "name": "PrintStats",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const SmallVectorImpl<clang::Type *> &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const llvm::SmallVectorImpl<clang::Type *> &",
                    "signature": "const llvm::SmallVectorImpl<clang::Type *> & (clang::ASTContext::*)() const",
                    "name": "getTypes",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::BuiltinTemplateKind",
                            "BTK"
                        ],
                        [
                            "const clang::IdentifierInfo *",
                            "II"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::BuiltinTemplateDecl *(clang::BuiltinTemplateKind, const clang::IdentifierInfo *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::BuiltinTemplateDecl *",
                    "signature": "clang::BuiltinTemplateDecl * (clang::ASTContext::*)(clang::BuiltinTemplateKind, const clang::IdentifierInfo *) const",
                    "name": "buildBuiltinTemplateDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "llvm::StringRef",
                            "Name"
                        ],
                        [
                            "clang::TagTypeKind",
                            "TK"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::RecordDecl *(llvm::StringRef, RecordDecl::TagKind) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::RecordDecl *",
                    "signature": "clang::RecordDecl * (clang::ASTContext::*)(llvm::StringRef, clang::TagTypeKind) const",
                    "name": "buildImplicitRecord",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "llvm::StringRef",
                            "Name"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TypedefDecl *(clang::QualType, llvm::StringRef) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypedefDecl *",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)(clang::QualType, llvm::StringRef) const",
                    "name": "buildImplicitTypedef",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypedefDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypedefDecl *",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "name": "getInt128Decl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypedefDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypedefDecl *",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "name": "getUInt128Decl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "clang::LangAS",
                            "AddressSpace"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::LangAS) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::LangAS) const",
                    "name": "getAddrSpaceQualType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "removeAddrSpaceQualType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "type"
                        ],
                        [
                            "llvm::ArrayRef<clang::ObjCProtocolDecl *>",
                            "protocols"
                        ],
                        [
                            "bool &",
                            "hasError"
                        ],
                        [
                            "bool",
                            "allowOnPointerType"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, ArrayRef<clang::ObjCProtocolDecl *>, bool &, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, llvm::ArrayRef<clang::ObjCProtocolDecl *>, bool &, bool) const",
                    "name": "applyObjCProtocolQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "clang::Qualifiers::GC",
                            "gcAttr"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, Qualifiers::GC) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Qualifiers::GC) const",
                    "name": "getObjCGCQualType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getRestrictType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getVolatileType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getConstType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::FunctionType *",
                            "Fn"
                        ],
                        [
                            "clang::FunctionType::ExtInfo",
                            "EInfo"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::FunctionType *(const clang::FunctionType *, FunctionType::ExtInfo)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "const clang::FunctionType *",
                    "signature": "const clang::FunctionType * (clang::ASTContext::*)(const clang::FunctionType *, clang::FunctionType::ExtInfo)",
                    "name": "adjustFunctionType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "ResultType"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CanQualType (clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CanQual<clang::Type>",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getCanonicalFunctionResultType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "FD"
                        ],
                        [
                            "clang::QualType",
                            "ResultType"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FunctionDecl *, clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::FunctionDecl *, clang::QualType)",
                    "name": "adjustDeducedFunctionResultType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "Orig"
                        ],
                        [
                            "const clang::FunctionProtoType::ExceptionSpecInfo &",
                            "ESI"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, const FunctionProtoType::ExceptionSpecInfo &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, const clang::FunctionProtoType::ExceptionSpecInfo &)",
                    "name": "getFunctionTypeWithExceptionSpec",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "clang::QualType",
                            "U"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "name": "hasSameFunctionTypeIgnoringExceptionSpec",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "FD"
                        ],
                        [
                            "const clang::FunctionProtoType::ExceptionSpecInfo &",
                            "ESI"
                        ],
                        [
                            "bool",
                            "AsWritten"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FunctionDecl *, const FunctionProtoType::ExceptionSpecInfo &, bool)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::FunctionDecl *, const clang::FunctionProtoType::ExceptionSpecInfo &, bool)",
                    "name": "adjustExceptionSpec",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getComplexType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::CanQual<clang::Type>",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CanQualType (clang::CanQualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CanQual<clang::Type>",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)(clang::CanQual<clang::Type>) const",
                    "name": "getComplexType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getPointerType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::CanQual<clang::Type>",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CanQualType (clang::CanQualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CanQual<clang::Type>",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)(clang::CanQual<clang::Type>) const",
                    "name": "getPointerType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "Orig"
                        ],
                        [
                            "clang::QualType",
                            "New"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType) const",
                    "name": "getAdjustedType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::CanQual<clang::Type>",
                            "Orig"
                        ],
                        [
                            "clang::CanQual<clang::Type>",
                            "New"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CanQualType (clang::CanQualType, clang::CanQualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CanQual<clang::Type>",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)(clang::CanQual<clang::Type>, clang::CanQual<clang::Type>) const",
                    "name": "getAdjustedType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getDecayedType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::CanQual<clang::Type>",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CanQualType (clang::CanQualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CanQual<clang::Type>",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)(clang::CanQual<clang::Type>) const",
                    "name": "getDecayedType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getAtomicType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getBlockPointerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getBlockDescriptorType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getReadPipeType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getWritePipeType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getBlockDescriptorExtendedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "TargetInfo::OpenCLTypeKind (const clang::Type *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TargetInfo::OpenCLTypeKind",
                    "signature": "clang::TargetInfo::OpenCLTypeKind (clang::ASTContext::*)(const clang::Type *) const",
                    "name": "getOpenCLTypeKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::LangAS (const clang::Type *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::LangAS",
                    "signature": "clang::LangAS (clang::ASTContext::*)(const clang::Type *) const",
                    "name": "getOpenCLTypeAddrSpace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "FD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FunctionDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::FunctionDecl *)",
                    "name": "setcudaConfigureCallDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::FunctionDecl *",
                    "signature": "clang::FunctionDecl * (clang::ASTContext::*)()",
                    "name": "getcudaConfigureCallDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "Ty"
                        ],
                        [
                            "const clang::VarDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, const clang::VarDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, const clang::VarDecl *)",
                    "name": "BlockRequiresCopying",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "Ty"
                        ],
                        [
                            "clang::Qualifiers::ObjCLifetime &",
                            "Lifetime"
                        ],
                        [
                            "bool &",
                            "HasByrefExtendedLayout"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, Qualifiers::ObjCLifetime &, bool &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::Qualifiers::ObjCLifetime &, bool &) const",
                    "name": "getByrefLifetime",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "bool",
                            "SpelledAsLValue"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, bool) const",
                    "name": "getLValueReferenceType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getRValueReferenceType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "const clang::Type *",
                            "Cls"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, const clang::Type *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, const clang::Type *) const",
                    "name": "getMemberPointerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "EltTy"
                        ],
                        [
                            "clang::Expr *",
                            "NumElts"
                        ],
                        [
                            "clang::ArrayType::ArraySizeModifier",
                            "ASM"
                        ],
                        [
                            "unsigned int",
                            "IndexTypeQuals"
                        ],
                        [
                            "clang::SourceRange",
                            "Brackets"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::Expr *, ArrayType::ArraySizeModifier, unsigned int, clang::SourceRange) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Expr *, clang::ArrayType::ArraySizeModifier, unsigned int, clang::SourceRange) const",
                    "name": "getVariableArrayType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "EltTy"
                        ],
                        [
                            "clang::Expr *",
                            "NumElts"
                        ],
                        [
                            "clang::ArrayType::ArraySizeModifier",
                            "ASM"
                        ],
                        [
                            "unsigned int",
                            "IndexTypeQuals"
                        ],
                        [
                            "clang::SourceRange",
                            "Brackets"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::Expr *, ArrayType::ArraySizeModifier, unsigned int, clang::SourceRange) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Expr *, clang::ArrayType::ArraySizeModifier, unsigned int, clang::SourceRange) const",
                    "name": "getDependentSizedArrayType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "EltTy"
                        ],
                        [
                            "clang::ArrayType::ArraySizeModifier",
                            "ASM"
                        ],
                        [
                            "unsigned int",
                            "IndexTypeQuals"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, ArrayType::ArraySizeModifier, unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::ArrayType::ArraySizeModifier, unsigned int) const",
                    "name": "getIncompleteArrayType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "EltTy"
                        ],
                        [
                            "const llvm::APInt &",
                            "ArySize"
                        ],
                        [
                            "clang::ArrayType::ArraySizeModifier",
                            "ASM"
                        ],
                        [
                            "unsigned int",
                            "IndexTypeQuals"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, const llvm::APInt &, ArrayType::ArraySizeModifier, unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, const llvm::APInt &, clang::ArrayType::ArraySizeModifier, unsigned int) const",
                    "name": "getConstantArrayType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "Ty"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getVariableArrayDecayedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "VectorType"
                        ],
                        [
                            "unsigned int",
                            "NumElts"
                        ],
                        [
                            "clang::VectorType::VectorKind",
                            "VecKind"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, unsigned int, VectorType::VectorKind) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, unsigned int, clang::VectorType::VectorKind) const",
                    "name": "getVectorType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "VectorType"
                        ],
                        [
                            "clang::Expr *",
                            "SizeExpr"
                        ],
                        [
                            "clang::SourceLocation",
                            "AttrLoc"
                        ],
                        [
                            "clang::VectorType::VectorKind",
                            "VecKind"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::Expr *, clang::SourceLocation, VectorType::VectorKind) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Expr *, clang::SourceLocation, clang::VectorType::VectorKind) const",
                    "name": "getDependentVectorType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "VectorType"
                        ],
                        [
                            "unsigned int",
                            "NumElts"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, unsigned int) const",
                    "name": "getExtVectorType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "VectorType"
                        ],
                        [
                            "clang::Expr *",
                            "SizeExpr"
                        ],
                        [
                            "clang::SourceLocation",
                            "AttrLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::Expr *, clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Expr *, clang::SourceLocation) const",
                    "name": "getDependentSizedExtVectorType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "PointeeType"
                        ],
                        [
                            "clang::Expr *",
                            "AddrSpaceExpr"
                        ],
                        [
                            "clang::SourceLocation",
                            "AttrLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::Expr *, clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Expr *, clang::SourceLocation) const",
                    "name": "getDependentAddressSpaceType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "ResultTy"
                        ],
                        [
                            "const clang::FunctionType::ExtInfo &",
                            "Info"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, const FunctionType::ExtInfo &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, const clang::FunctionType::ExtInfo &) const",
                    "name": "getFunctionNoProtoType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "ResultTy"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getFunctionNoProtoType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "ResultTy"
                        ],
                        [
                            "llvm::ArrayRef<clang::QualType>",
                            "Args"
                        ],
                        [
                            "const clang::FunctionProtoType::ExtProtoInfo &",
                            "EPI"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, ArrayRef<clang::QualType>, const FunctionProtoType::ExtProtoInfo &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, llvm::ArrayRef<clang::QualType>, const clang::FunctionProtoType::ExtProtoInfo &) const",
                    "name": "getFunctionType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "StrLTy"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "adjustStringLiteralBaseType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::TypeDecl *",
                            "Decl"
                        ],
                        [
                            "const clang::TypeDecl *",
                            "PrevDecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::TypeDecl *, const clang::TypeDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::TypeDecl *, const clang::TypeDecl *) const",
                    "name": "getTypeDeclType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::TypedefNameDecl *",
                            "Decl"
                        ],
                        [
                            "clang::QualType",
                            "Canon"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::TypedefNameDecl *, clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::TypedefNameDecl *, clang::QualType) const",
                    "name": "getTypedefType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::RecordDecl *",
                            "Decl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::RecordDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::RecordDecl *) const",
                    "name": "getRecordType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::EnumDecl *",
                            "Decl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::EnumDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::EnumDecl *) const",
                    "name": "getEnumType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::CXXRecordDecl *",
                            "Decl"
                        ],
                        [
                            "clang::QualType",
                            "TST"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::CXXRecordDecl *, clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::CXXRecordDecl *, clang::QualType) const",
                    "name": "getInjectedClassNameType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::attr::Kind",
                            "attrKind"
                        ],
                        [
                            "clang::QualType",
                            "modifiedType"
                        ],
                        [
                            "clang::QualType",
                            "equivalentType"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (attr::Kind, clang::QualType, clang::QualType)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::attr::Kind, clang::QualType, clang::QualType)",
                    "name": "getAttributedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::TemplateTypeParmType *",
                            "Replaced"
                        ],
                        [
                            "clang::QualType",
                            "Replacement"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::TemplateTypeParmType *, clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::TemplateTypeParmType *, clang::QualType) const",
                    "name": "getSubstTemplateTypeParmType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::TemplateTypeParmType *",
                            "Replaced"
                        ],
                        [
                            "const clang::TemplateArgument &",
                            "ArgPack"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::TemplateTypeParmType *, const clang::TemplateArgument &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::TemplateTypeParmType *, const clang::TemplateArgument &)",
                    "name": "getSubstTemplateTypeParmPackType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "unsigned int",
                            "Depth"
                        ],
                        [
                            "unsigned int",
                            "Index"
                        ],
                        [
                            "bool",
                            "ParameterPack"
                        ],
                        [
                            "clang::TemplateTypeParmDecl *",
                            "ParmDecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (unsigned int, unsigned int, bool, clang::TemplateTypeParmDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(unsigned int, unsigned int, bool, clang::TemplateTypeParmDecl *) const",
                    "name": "getTemplateTypeParmType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TemplateName",
                            "T"
                        ],
                        [
                            "llvm::ArrayRef<clang::TemplateArgument>",
                            "Args"
                        ],
                        [
                            "clang::QualType",
                            "Canon"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::TemplateName, ArrayRef<clang::TemplateArgument>, clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::TemplateName, llvm::ArrayRef<clang::TemplateArgument>, clang::QualType) const",
                    "name": "getTemplateSpecializationType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TemplateName",
                            "T"
                        ],
                        [
                            "llvm::ArrayRef<clang::TemplateArgument>",
                            "Args"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::TemplateName, ArrayRef<clang::TemplateArgument>) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::TemplateName, llvm::ArrayRef<clang::TemplateArgument>) const",
                    "name": "getCanonicalTemplateSpecializationType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TemplateName",
                            "T"
                        ],
                        [
                            "const clang::TemplateArgumentListInfo &",
                            "Args"
                        ],
                        [
                            "clang::QualType",
                            "Canon"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::TemplateName, const clang::TemplateArgumentListInfo &, clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::TemplateName, const clang::TemplateArgumentListInfo &, clang::QualType) const",
                    "name": "getTemplateSpecializationType",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TemplateName",
                            "T"
                        ],
                        [
                            "clang::SourceLocation",
                            "TLoc"
                        ],
                        [
                            "const clang::TemplateArgumentListInfo &",
                            "Args"
                        ],
                        [
                            "clang::QualType",
                            "Canon"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *(clang::TemplateName, clang::SourceLocation, const clang::TemplateArgumentListInfo &, clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::ASTContext::*)(clang::TemplateName, clang::SourceLocation, const clang::TemplateArgumentListInfo &, clang::QualType) const",
                    "name": "getTemplateSpecializationTypeInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "NamedType"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getParenType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::ElaboratedTypeKeyword",
                            "Keyword"
                        ],
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ],
                        [
                            "clang::QualType",
                            "NamedType"
                        ],
                        [
                            "clang::TagDecl *",
                            "OwnedTagDecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, clang::QualType, clang::TagDecl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, clang::QualType, clang::TagDecl *) const",
                    "name": "getElaboratedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::ElaboratedTypeKeyword",
                            "Keyword"
                        ],
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ],
                        [
                            "const clang::IdentifierInfo *",
                            "Name"
                        ],
                        [
                            "clang::QualType",
                            "Canon"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, const clang::IdentifierInfo *, clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, const clang::IdentifierInfo *, clang::QualType) const",
                    "name": "getDependentNameType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::ElaboratedTypeKeyword",
                            "Keyword"
                        ],
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ],
                        [
                            "const clang::IdentifierInfo *",
                            "Name"
                        ],
                        [
                            "const clang::TemplateArgumentListInfo &",
                            "Args"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, const clang::IdentifierInfo *, const clang::TemplateArgumentListInfo &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, const clang::IdentifierInfo *, const clang::TemplateArgumentListInfo &) const",
                    "name": "getDependentTemplateSpecializationType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::ElaboratedTypeKeyword",
                            "Keyword"
                        ],
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ],
                        [
                            "const clang::IdentifierInfo *",
                            "Name"
                        ],
                        [
                            "llvm::ArrayRef<clang::TemplateArgument>",
                            "Args"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, const clang::IdentifierInfo *, ArrayRef<clang::TemplateArgument>) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::ElaboratedTypeKeyword, clang::NestedNameSpecifier *, const clang::IdentifierInfo *, llvm::ArrayRef<clang::TemplateArgument>) const",
                    "name": "getDependentTemplateSpecializationType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "ParamDecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateArgument (clang::NamedDecl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::TemplateArgument",
                    "signature": "clang::TemplateArgument (clang::ASTContext::*)(clang::NamedDecl *)",
                    "name": "getInjectedTemplateArg",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::TemplateParameterList *",
                            "Params"
                        ],
                        [
                            "llvm::SmallVectorImpl<clang::TemplateArgument> &",
                            "Args"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::TemplateParameterList *, SmallVectorImpl<clang::TemplateArgument> &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::TemplateParameterList *, llvm::SmallVectorImpl<clang::TemplateArgument> &)",
                    "name": "getInjectedTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "Pattern"
                        ],
                        [
                            "llvm::Optional<unsigned int>",
                            "NumExpansions"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, Optional<unsigned int>)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, llvm::Optional<unsigned int>)",
                    "name": "getPackExpansionType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCInterfaceDecl *",
                            "Decl"
                        ],
                        [
                            "clang::ObjCInterfaceDecl *",
                            "PrevDecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::ObjCInterfaceDecl *, clang::ObjCInterfaceDecl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::ObjCInterfaceDecl *, clang::ObjCInterfaceDecl *) const",
                    "name": "getObjCInterfaceType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "Base"
                        ],
                        [
                            "llvm::ArrayRef<clang::QualType>",
                            "typeArgs"
                        ],
                        [
                            "llvm::ArrayRef<clang::ObjCProtocolDecl *>",
                            "protocols"
                        ],
                        [
                            "bool",
                            "isKindOf"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, ArrayRef<clang::QualType>, ArrayRef<clang::ObjCProtocolDecl *>, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, llvm::ArrayRef<clang::QualType>, llvm::ArrayRef<clang::ObjCProtocolDecl *>, bool) const",
                    "name": "getObjCObjectType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCTypeParamDecl *",
                            "Decl"
                        ],
                        [
                            "llvm::ArrayRef<clang::ObjCProtocolDecl *>",
                            "protocols"
                        ],
                        [
                            "clang::QualType",
                            "Canonical"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::ObjCTypeParamDecl *, ArrayRef<clang::ObjCProtocolDecl *>, clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::ObjCTypeParamDecl *, llvm::ArrayRef<clang::ObjCProtocolDecl *>, clang::QualType) const",
                    "name": "getObjCTypeParamType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "QT"
                        ],
                        [
                            "clang::ObjCInterfaceDecl *",
                            "Decl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::ObjCInterfaceDecl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::ObjCInterfaceDecl *)",
                    "name": "ObjCObjectAdoptsQTypeProtocols",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "QT"
                        ],
                        [
                            "clang::ObjCInterfaceDecl *",
                            "IDecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::ObjCInterfaceDecl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::ObjCInterfaceDecl *)",
                    "name": "QIdProtocolsAdoptObjCObjectProtocols",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "OIT"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getObjCObjectPointerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::Expr *",
                            "e"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::Expr *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::Expr *) const",
                    "name": "getTypeOfExprType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "t"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getTypeOfType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::Expr *",
                            "e"
                        ],
                        [
                            "clang::QualType",
                            "UnderlyingType"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::Expr *, clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::Expr *, clang::QualType) const",
                    "name": "getDecltypeType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "BaseType"
                        ],
                        [
                            "clang::QualType",
                            "UnderlyingType"
                        ],
                        [
                            "clang::UnaryTransformType::UTTKind",
                            "UKind"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::QualType, UnaryTransformType::UTTKind) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType, clang::UnaryTransformType::UTTKind) const",
                    "name": "getUnaryTransformType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "DeducedType"
                        ],
                        [
                            "clang::AutoTypeKeyword",
                            "Keyword"
                        ],
                        [
                            "bool",
                            "IsDependent"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::AutoTypeKeyword, bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::AutoTypeKeyword, bool) const",
                    "name": "getAutoType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getAutoDeductType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getAutoRRefDeductType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TemplateName",
                            "Template"
                        ],
                        [
                            "clang::QualType",
                            "DeducedType"
                        ],
                        [
                            "bool",
                            "IsDependent"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::TemplateName, clang::QualType, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::TemplateName, clang::QualType, bool) const",
                    "name": "getDeducedTemplateSpecializationType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::TagDecl *",
                            "Decl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::TagDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::TagDecl *) const",
                    "name": "getTagDeclType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CanQualType () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CanQual<clang::Type>",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)() const",
                    "name": "getSizeType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CanQualType () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CanQual<clang::Type>",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)() const",
                    "name": "getSignedSizeType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CanQualType () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CanQual<clang::Type>",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)() const",
                    "name": "getIntMaxType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CanQualType () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CanQual<clang::Type>",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)() const",
                    "name": "getUIntMaxType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getWCharType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getWideCharType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getSignedWCharType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getUnsignedWCharType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getWIntType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getIntPtrType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getUIntPtrType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getPointerDiffType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getUnsignedPointerDiffType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getProcessIDType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getCFConstantStringType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getObjCSuperType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "ST"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::QualType)",
                    "name": "setObjCSuperType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getRawCFConstantStringType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::QualType)",
                    "name": "setCFConstantStringType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypedefDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypedefDecl *",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "name": "getCFConstantStringDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::RecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::RecordDecl *",
                    "signature": "clang::RecordDecl * (clang::ASTContext::*)() const",
                    "name": "getCFConstantStringTagDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::ObjCInterfaceDecl *",
                            "Decl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ObjCInterfaceDecl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::ObjCInterfaceDecl *)",
                    "name": "setObjCConstantStringInterface",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getObjCConstantStringInterface",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getObjCNSStringType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::QualType)",
                    "name": "setObjCNSStringType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getObjCIdRedefinitionType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "RedefType"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::QualType)",
                    "name": "setObjCIdRedefinitionType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getObjCClassRedefinitionType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "RedefType"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::QualType)",
                    "name": "setObjCClassRedefinitionType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getObjCSelRedefinitionType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "RedefType"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::QualType)",
                    "name": "setObjCSelRedefinitionType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::IdentifierInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::IdentifierInfo *",
                    "signature": "clang::IdentifierInfo * (clang::ASTContext::*)() const",
                    "name": "getNSObjectName",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::IdentifierInfo *()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::IdentifierInfo *",
                    "signature": "clang::IdentifierInfo * (clang::ASTContext::*)()",
                    "name": "getNSCopyingName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CanQualType () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CanQual<clang::Type>",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)() const",
                    "name": "getNSUIntegerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CanQualType () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CanQual<clang::Type>",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)() const",
                    "name": "getNSIntegerType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::IdentifierInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::IdentifierInfo *",
                    "signature": "clang::IdentifierInfo * (clang::ASTContext::*)() const",
                    "name": "getBoolName",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::IdentifierInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::IdentifierInfo *",
                    "signature": "clang::IdentifierInfo * (clang::ASTContext::*)() const",
                    "name": "getMakeIntegerSeqName",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::IdentifierInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::IdentifierInfo *",
                    "signature": "clang::IdentifierInfo * (clang::ASTContext::*)() const",
                    "name": "getTypePackElementName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)()",
                    "name": "getObjCInstanceType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypedefDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::TypedefDecl *",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)()",
                    "name": "getObjCInstanceTypeDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TypeDecl *",
                            "FILEDecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::TypeDecl *)",
                    "name": "setFILEDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getFILEType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TypeDecl *",
                            "jmp_bufDecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::TypeDecl *)",
                    "name": "setjmp_bufDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getjmp_bufType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TypeDecl *",
                            "sigjmp_bufDecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::TypeDecl *)",
                    "name": "setsigjmp_bufDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getsigjmp_bufType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TypeDecl *",
                            "ucontext_tDecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::TypeDecl *)",
                    "name": "setucontext_tDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getucontext_tType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getLogicalOperationType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "std::__cxx11::basic_string<char> &",
                            "S"
                        ],
                        [
                            "const clang::FieldDecl *",
                            "Field"
                        ],
                        [
                            "clang::QualType *",
                            "NotEncodedT"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType, std::string &, const clang::FieldDecl *, clang::QualType *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::QualType, std::__cxx11::basic_string<char> &, const clang::FieldDecl *, clang::QualType *) const",
                    "name": "getObjCEncodingForType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "std::__cxx11::basic_string<char> &",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType, std::string &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::QualType, std::__cxx11::basic_string<char> &) const",
                    "name": "getObjCEncodingForPropertyType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType &",
                            "t"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::QualType &) const",
                    "name": "getLegacyIntegralTypeEncoding",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::Decl::ObjCDeclQualifier",
                            "QT"
                        ],
                        [
                            "std::__cxx11::basic_string<char> &",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (Decl::ObjCDeclQualifier, std::string &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::Decl::ObjCDeclQualifier, std::__cxx11::basic_string<char> &) const",
                    "name": "getObjCEncodingForTypeQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::FunctionDecl *",
                            "Decl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::string (const clang::FunctionDecl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::ASTContext::*)(const clang::FunctionDecl *) const",
                    "name": "getObjCEncodingForFunctionDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCMethodDecl *",
                            "Decl"
                        ],
                        [
                            "bool",
                            "Extended"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::string (const clang::ObjCMethodDecl *, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::ASTContext::*)(const clang::ObjCMethodDecl *, bool) const",
                    "name": "getObjCEncodingForMethodDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::BlockExpr *",
                            "blockExpr"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::string (const clang::BlockExpr *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::ASTContext::*)(const clang::BlockExpr *) const",
                    "name": "getObjCEncodingForBlock",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCPropertyDecl *",
                            "PD"
                        ],
                        [
                            "const clang::Decl *",
                            "Container"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::string (const clang::ObjCPropertyDecl *, const clang::Decl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::__cxx11::basic_string<char>",
                    "signature": "std::__cxx11::basic_string<char> (clang::ASTContext::*)(const clang::ObjCPropertyDecl *, const clang::Decl *) const",
                    "name": "getObjCEncodingForPropertyDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::ObjCProtocolDecl *",
                            "lProto"
                        ],
                        [
                            "clang::ObjCProtocolDecl *",
                            "rProto"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::ObjCProtocolDecl *, clang::ObjCProtocolDecl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::ObjCProtocolDecl *, clang::ObjCProtocolDecl *) const",
                    "name": "ProtocolCompatibleWithProtocol",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCPropertyDecl *",
                            "PD"
                        ],
                        [
                            "const clang::Decl *",
                            "Container"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::ObjCPropertyImplDecl *(const clang::ObjCPropertyDecl *, const clang::Decl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ObjCPropertyImplDecl *",
                    "signature": "clang::ObjCPropertyImplDecl * (clang::ASTContext::*)(const clang::ObjCPropertyDecl *, const clang::Decl *) const",
                    "name": "getObjCPropertyImplDeclForPropertyDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CharUnits (clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharUnits",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getObjCEncodingTypeSize",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypedefDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypedefDecl *",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "name": "getObjCIdDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getObjCIdType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypedefDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypedefDecl *",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "name": "getObjCSelDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getObjCSelType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypedefDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypedefDecl *",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "name": "getObjCClassDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getObjCClassType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ObjCInterfaceDecl *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ObjCInterfaceDecl *",
                    "signature": "clang::ObjCInterfaceDecl * (clang::ASTContext::*)() const",
                    "name": "getObjCProtocolDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypedefDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypedefDecl *",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "name": "getBOOLDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TypedefDecl *",
                            "TD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypedefDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::TypedefDecl *)",
                    "name": "setBOOLDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getBOOLType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getObjCProtoType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypedefDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypedefDecl *",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "name": "getBuiltinVaListDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getBuiltinVaListType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Decl *",
                    "signature": "clang::Decl * (clang::ASTContext::*)() const",
                    "name": "getVaListTagDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypedefDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypedefDecl *",
                    "signature": "clang::TypedefDecl * (clang::ASTContext::*)() const",
                    "name": "getBuiltinMSVaListDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)() const",
                    "name": "getBuiltinMSVaListType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::FunctionDecl *",
                            ""
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::FunctionDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(const clang::FunctionDecl *) const",
                    "name": "canBuiltinBeRedeclared",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "unsigned int",
                            "CVR"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, unsigned int) const",
                    "name": "getCVRQualifiedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::SplitQualType",
                            "split"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::SplitQualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::SplitQualType) const",
                    "name": "getQualifiedType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "clang::Qualifiers",
                            "Qs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::Qualifiers) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Qualifiers) const",
                    "name": "getQualifiedType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ],
                        [
                            "clang::Qualifiers",
                            "Qs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::Type *, clang::Qualifiers) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::Type *, clang::Qualifiers) const",
                    "name": "getQualifiedType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "type"
                        ],
                        [
                            "clang::Qualifiers::ObjCLifetime",
                            "lifetime"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, Qualifiers::ObjCLifetime)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Qualifiers::ObjCLifetime)",
                    "name": "getLifetimeQualifiedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "type"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getUnqualifiedObjCPointerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "Ty"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned char (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned char",
                    "signature": "unsigned char (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getFixedPointScale",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "Ty"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned char (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned char",
                    "signature": "unsigned char (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getFixedPointIBits",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "Ty"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::FixedPointSemantics (clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FixedPointSemantics",
                    "signature": "clang::FixedPointSemantics (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getFixedPointSemantics",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "Ty"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::APFixedPoint (clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::APFixedPoint",
                    "signature": "clang::APFixedPoint (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getFixedPointMax",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "Ty"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::APFixedPoint (clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::APFixedPoint",
                    "signature": "clang::APFixedPoint (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getFixedPointMin",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TemplateName",
                            "Name"
                        ],
                        [
                            "clang::SourceLocation",
                            "NameLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationNameInfo (clang::TemplateName, clang::SourceLocation) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclarationNameInfo",
                    "signature": "clang::DeclarationNameInfo (clang::ASTContext::*)(clang::TemplateName, clang::SourceLocation) const",
                    "name": "getNameForTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::UnresolvedSetIterator",
                            "Begin"
                        ],
                        [
                            "clang::UnresolvedSetIterator",
                            "End"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateName (clang::UnresolvedSetIterator, clang::UnresolvedSetIterator) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateName",
                    "signature": "clang::TemplateName (clang::ASTContext::*)(clang::UnresolvedSetIterator, clang::UnresolvedSetIterator) const",
                    "name": "getOverloadedTemplateName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ],
                        [
                            "bool",
                            "TemplateKeyword"
                        ],
                        [
                            "clang::TemplateDecl *",
                            "Template"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateName (clang::NestedNameSpecifier *, bool, clang::TemplateDecl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateName",
                    "signature": "clang::TemplateName (clang::ASTContext::*)(clang::NestedNameSpecifier *, bool, clang::TemplateDecl *) const",
                    "name": "getQualifiedTemplateName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ],
                        [
                            "const clang::IdentifierInfo *",
                            "Name"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateName (clang::NestedNameSpecifier *, const clang::IdentifierInfo *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateName",
                    "signature": "clang::TemplateName (clang::ASTContext::*)(clang::NestedNameSpecifier *, const clang::IdentifierInfo *) const",
                    "name": "getDependentTemplateName",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ],
                        [
                            "clang::OverloadedOperatorKind",
                            "Operator"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateName (clang::NestedNameSpecifier *, clang::OverloadedOperatorKind) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateName",
                    "signature": "clang::TemplateName (clang::ASTContext::*)(clang::NestedNameSpecifier *, clang::OverloadedOperatorKind) const",
                    "name": "getDependentTemplateName",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TemplateTemplateParmDecl *",
                            "param"
                        ],
                        [
                            "clang::TemplateName",
                            "replacement"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateName (clang::TemplateTemplateParmDecl *, clang::TemplateName) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateName",
                    "signature": "clang::TemplateName (clang::ASTContext::*)(clang::TemplateTemplateParmDecl *, clang::TemplateName) const",
                    "name": "getSubstTemplateTemplateParm",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TemplateTemplateParmDecl *",
                            "Param"
                        ],
                        [
                            "const clang::TemplateArgument &",
                            "ArgPack"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateName (clang::TemplateTemplateParmDecl *, const clang::TemplateArgument &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateName",
                    "signature": "clang::TemplateName (clang::ASTContext::*)(clang::TemplateTemplateParmDecl *, const clang::TemplateArgument &) const",
                    "name": "getSubstTemplateTemplateParmPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "unsigned int",
                            "ID"
                        ],
                        [
                            "clang::ASTContext::GetBuiltinTypeError &",
                            "Error"
                        ],
                        [
                            "unsigned int *",
                            "IntegerConstantArgs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (unsigned int, clang::ASTContext::GetBuiltinTypeError &, unsigned int *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(unsigned int, clang::ASTContext::GetBuiltinTypeError &, unsigned int *) const",
                    "name": "GetBuiltinType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "Ty"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "Qualifiers::GC (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Qualifiers::GC",
                    "signature": "clang::Qualifiers::GC (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getObjCGCAttrKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "FirstVec"
                        ],
                        [
                            "clang::QualType",
                            "SecondVec"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "name": "areCompatibleVectorTypes",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const llvm::fltSemantics &(clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const llvm::fltSemantics &",
                    "signature": "const llvm::fltSemantics & (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getFloatTypeSemantics",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeInfo (const clang::Type *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeInfo",
                    "signature": "clang::TypeInfo (clang::ASTContext::*)(const clang::Type *) const",
                    "name": "getTypeInfo",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeInfo (clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeInfo",
                    "signature": "clang::TypeInfo (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getTypeInfo",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getOpenMPDefaultSimdAlign",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "uint64_t (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getTypeSize",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "uint64_t (const clang::Type *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (clang::ASTContext::*)(const clang::Type *) const",
                    "name": "getTypeSize",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "uint64_t () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (clang::ASTContext::*)() const",
                    "name": "getCharWidth",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "long",
                            "BitSize"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CharUnits (int64_t) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharUnits",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(long) const",
                    "name": "toCharUnitsFromBits",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::CharUnits",
                            "CharSize"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "int64_t (clang::CharUnits) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "long",
                    "signature": "long (clang::ASTContext::*)(clang::CharUnits) const",
                    "name": "toBits",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CharUnits (clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharUnits",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getTypeSizeInChars",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CharUnits (const clang::Type *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharUnits",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(const clang::Type *) const",
                    "name": "getTypeSizeInChars",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getTypeAlign",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (const clang::Type *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(const clang::Type *) const",
                    "name": "getTypeAlign",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getTypeUnadjustedAlign",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (const clang::Type *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(const clang::Type *) const",
                    "name": "getTypeUnadjustedAlign",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getTypeAlignIfKnown",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CharUnits (clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharUnits",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getTypeAlignInChars",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CharUnits (const clang::Type *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharUnits",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(const clang::Type *) const",
                    "name": "getTypeAlignInChars",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CharUnits (clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharUnits",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getTypeUnadjustedAlignInChars",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CharUnits (const clang::Type *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharUnits",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(const clang::Type *) const",
                    "name": "getTypeUnadjustedAlignInChars",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::pair<CharUnits, CharUnits> (clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::pair<clang::CharUnits, clang::CharUnits>",
                    "signature": "std::pair<clang::CharUnits, clang::CharUnits> (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getTypeInfoDataSizeInChars",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::pair<CharUnits, CharUnits> (const clang::Type *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::pair<clang::CharUnits, clang::CharUnits>",
                    "signature": "std::pair<clang::CharUnits, clang::CharUnits> (clang::ASTContext::*)(const clang::Type *) const",
                    "name": "getTypeInfoInChars",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::pair<CharUnits, CharUnits> (clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::pair<clang::CharUnits, clang::CharUnits>",
                    "signature": "std::pair<clang::CharUnits, clang::CharUnits> (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getTypeInfoInChars",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::Type *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(const clang::Type *) const",
                    "name": "isAlignmentRequired",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType) const",
                    "name": "isAlignmentRequired",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (const clang::Type *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(const clang::Type *) const",
                    "name": "getPreferredTypeAlign",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)() const",
                    "name": "getTargetDefaultAlignForAttributeAligned",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getAlignOfGlobalVar",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CharUnits (clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharUnits",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getAlignOfGlobalVarInChars",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ],
                        [
                            "bool",
                            "ForAlignof"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CharUnits (const clang::Decl *, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharUnits",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(const clang::Decl *, bool) const",
                    "name": "getDeclAlign",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::RecordDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::ASTRecordLayout &(const clang::RecordDecl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ASTRecordLayout &",
                    "signature": "const clang::ASTRecordLayout & (clang::ASTContext::*)(const clang::RecordDecl *) const",
                    "name": "getASTRecordLayout",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCInterfaceDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::ASTRecordLayout &(const clang::ObjCInterfaceDecl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ASTRecordLayout &",
                    "signature": "const clang::ASTRecordLayout & (clang::ASTContext::*)(const clang::ObjCInterfaceDecl *) const",
                    "name": "getASTObjCInterfaceLayout",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::RecordDecl *",
                            "RD"
                        ],
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "bool",
                            "Simple"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::RecordDecl *, llvm::raw_ostream &, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::RecordDecl *, llvm::raw_ostream &, bool) const",
                    "name": "DumpRecordLayout",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCImplementationDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::ASTRecordLayout &(const clang::ObjCImplementationDecl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ASTRecordLayout &",
                    "signature": "const clang::ASTRecordLayout & (clang::ASTContext::*)(const clang::ObjCImplementationDecl *) const",
                    "name": "getASTObjCImplementationLayout",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "RD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXMethodDecl *(const clang::CXXRecordDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "const clang::CXXMethodDecl *",
                    "signature": "const clang::CXXMethodDecl * (clang::ASTContext::*)(const clang::CXXRecordDecl *)",
                    "name": "getCurrentKeyFunction",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::CXXMethodDecl *",
                            "method"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::CXXMethodDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::CXXMethodDecl *)",
                    "name": "setNonKeyFunction",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "RD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CharUnits (const clang::CXXRecordDecl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CharUnits",
                    "signature": "clang::CharUnits (clang::ASTContext::*)(const clang::CXXRecordDecl *) const",
                    "name": "getOffsetOfBaseWithVBPtr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ValueDecl *",
                            "FD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "uint64_t (const clang::ValueDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (clang::ASTContext::*)(const clang::ValueDecl *) const",
                    "name": "getFieldOffset",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCInterfaceDecl *",
                            "OID"
                        ],
                        [
                            "const clang::ObjCImplementationDecl *",
                            "ID"
                        ],
                        [
                            "const clang::ObjCIvarDecl *",
                            "Ivar"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "uint64_t (const clang::ObjCInterfaceDecl *, const clang::ObjCImplementationDecl *, const clang::ObjCIvarDecl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (clang::ASTContext::*)(const clang::ObjCInterfaceDecl *, const clang::ObjCImplementationDecl *, const clang::ObjCIvarDecl *) const",
                    "name": "lookupFieldBitOffset",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "RD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::CXXRecordDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(const clang::CXXRecordDecl *) const",
                    "name": "isNearlyEmpty",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VTableContextBase *()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::VTableContextBase *",
                    "signature": "clang::VTableContextBase * (clang::ASTContext::*)()",
                    "name": "getVTableContext",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::MangleContext *()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::MangleContext *",
                    "signature": "clang::MangleContext * (clang::ASTContext::*)()",
                    "name": "createMangleContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCInterfaceDecl *",
                            "OI"
                        ],
                        [
                            "bool",
                            "leafClass"
                        ],
                        [
                            "llvm::SmallVectorImpl<const clang::ObjCIvarDecl *> &",
                            "Ivars"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ObjCInterfaceDecl *, bool, SmallVectorImpl<const clang::ObjCIvarDecl *> &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::ObjCInterfaceDecl *, bool, llvm::SmallVectorImpl<const clang::ObjCIvarDecl *> &) const",
                    "name": "DeepCollectObjCIvars",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCInterfaceDecl *",
                            "OI"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (const clang::ObjCInterfaceDecl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(const clang::ObjCInterfaceDecl *) const",
                    "name": "CountNonClassIvars",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Decl *",
                            "CDecl"
                        ],
                        [
                            "llvm::SmallPtrSet<clang::ObjCProtocolDecl *, 8> &",
                            "Protocols"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::Decl *, llvm::SmallPtrSet<ObjCProtocolDecl *, 8> &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::Decl *, llvm::SmallPtrSet<clang::ObjCProtocolDecl *, 8> &)",
                    "name": "CollectInheritedProtocols",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "Ty"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType) const",
                    "name": "hasUniqueObjectRepresentations",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CanQualType (clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CanQual<clang::Type>",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getCanonicalType",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Type *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Type *(const clang::Type *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Type *",
                    "signature": "const clang::Type * (clang::ASTContext::*)(const clang::Type *) const",
                    "name": "getCanonicalType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CanQualType (clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CanQual<clang::Type>",
                    "signature": "clang::CanQual<clang::Type> (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getCanonicalParamType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T1"
                        ],
                        [
                            "clang::QualType",
                            "T2"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType) const",
                    "name": "hasSameType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Type *",
                            "T1"
                        ],
                        [
                            "const clang::Type *",
                            "T2"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::Type *, const clang::Type *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(const clang::Type *, const clang::Type *) const",
                    "name": "hasSameType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "clang::Qualifiers &",
                            "Quals"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::Qualifiers &)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::Qualifiers &)",
                    "name": "getUnqualifiedArrayType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T1"
                        ],
                        [
                            "clang::QualType",
                            "T2"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType) const",
                    "name": "hasSameUnqualifiedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "SubT"
                        ],
                        [
                            "clang::QualType",
                            "SuperT"
                        ],
                        [
                            "bool",
                            "IsParam"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::QualType, bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType, bool) const",
                    "name": "hasSameNullabilityTypeQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCMethodDecl *",
                            "MethodDecl"
                        ],
                        [
                            "const clang::ObjCMethodDecl *",
                            "MethodImp"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ObjCMethodDecl *, const clang::ObjCMethodDecl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(const clang::ObjCMethodDecl *, const clang::ObjCMethodDecl *)",
                    "name": "ObjCMethodsAreEqual",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType &",
                            "T1"
                        ],
                        [
                            "clang::QualType &",
                            "T2"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType &, clang::QualType &)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType &, clang::QualType &)",
                    "name": "UnwrapSimilarTypes",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType &",
                            "T1"
                        ],
                        [
                            "clang::QualType &",
                            "T2"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType &, clang::QualType &)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType &, clang::QualType &)",
                    "name": "UnwrapSimilarArrayTypes",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T1"
                        ],
                        [
                            "clang::QualType",
                            "T2"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "name": "hasSimilarType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T1"
                        ],
                        [
                            "clang::QualType",
                            "T2"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "name": "hasCvrSimilarType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::NestedNameSpecifier *",
                            "NNS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifier *(clang::NestedNameSpecifier *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifier *",
                    "signature": "clang::NestedNameSpecifier * (clang::ASTContext::*)(clang::NestedNameSpecifier *) const",
                    "name": "getCanonicalNestedNameSpecifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "bool",
                            "IsVariadic"
                        ],
                        [
                            "bool",
                            "IsCXXMethod"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CallingConv (bool, bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CallingConv",
                    "signature": "clang::CallingConv (clang::ASTContext::*)(bool, bool) const",
                    "name": "getDefaultCallingConvention",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TemplateName",
                            "Name"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateName (clang::TemplateName) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateName",
                    "signature": "clang::TemplateName (clang::ASTContext::*)(clang::TemplateName) const",
                    "name": "getCanonicalTemplateName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TemplateName",
                            "X"
                        ],
                        [
                            "clang::TemplateName",
                            "Y"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::TemplateName, clang::TemplateName)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::TemplateName, clang::TemplateName)",
                    "name": "hasSameTemplateName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::TemplateArgument &",
                            "Arg"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateArgument (const clang::TemplateArgument &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateArgument",
                    "signature": "clang::TemplateArgument (clang::ASTContext::*)(const clang::TemplateArgument &) const",
                    "name": "getCanonicalTemplateArgument",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::ArrayType *(clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ArrayType *",
                    "signature": "const clang::ArrayType * (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getAsArrayType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::ConstantArrayType *(clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ConstantArrayType *",
                    "signature": "const clang::ConstantArrayType * (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getAsConstantArrayType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::VariableArrayType *(clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::VariableArrayType *",
                    "signature": "const clang::VariableArrayType * (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getAsVariableArrayType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::IncompleteArrayType *(clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::IncompleteArrayType *",
                    "signature": "const clang::IncompleteArrayType * (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getAsIncompleteArrayType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::DependentSizedArrayType *(clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::DependentSizedArrayType *",
                    "signature": "const clang::DependentSizedArrayType * (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getAsDependentSizedArrayType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ArrayType *",
                            "VAT"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::ArrayType *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::ArrayType *) const",
                    "name": "getBaseElementType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "QT"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getBaseElementType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ConstantArrayType *",
                            "CA"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "uint64_t (const clang::ConstantArrayType *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (clang::ASTContext::*)(const clang::ConstantArrayType *) const",
                    "name": "getConstantArrayElementCount",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getAdjustedParameterType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getSignatureParameterType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getExceptionObjectType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getArrayDecayedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "PromotableType"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getPromotedIntegerType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "Qualifiers::ObjCLifetime (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Qualifiers::ObjCLifetime",
                    "signature": "clang::Qualifiers::ObjCLifetime (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getInnerObjCOwnership",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::Expr *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::Expr *) const",
                    "name": "isPromotableBitField",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "LHS"
                        ],
                        [
                            "clang::QualType",
                            "RHS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "int (clang::QualType, clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "int",
                    "signature": "int (clang::ASTContext::*)(clang::QualType, clang::QualType) const",
                    "name": "getIntegerTypeOrder",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "LHS"
                        ],
                        [
                            "clang::QualType",
                            "RHS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "int (clang::QualType, clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "int",
                    "signature": "int (clang::ASTContext::*)(clang::QualType, clang::QualType) const",
                    "name": "getFloatingTypeOrder",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "typeSize"
                        ],
                        [
                            "clang::QualType",
                            "typeDomain"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType) const",
                    "name": "getFloatingTypeOfSizeWithinDomain",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getTargetAddressSpace",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::Qualifiers",
                            "Q"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::Qualifiers) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(clang::Qualifiers) const",
                    "name": "getTargetAddressSpace",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::LangAS",
                            "AS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::LangAS) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(clang::LangAS) const",
                    "name": "getTargetAddressSpace",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "unsigned int",
                            "AS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::LangAS (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::LangAS",
                    "signature": "clang::LangAS (clang::ASTContext::*)(unsigned int) const",
                    "name": "getLangASForBuiltinAddressSpace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "QT"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "uint64_t (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getTargetNullPointerValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::LangAS",
                            "AS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::LangAS) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::LangAS) const",
                    "name": "addressSpaceMapManglingFor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T1"
                        ],
                        [
                            "clang::QualType",
                            "T2"
                        ],
                        [
                            "bool",
                            "CompareUnqualified"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::QualType, bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType, bool)",
                    "name": "typesAreCompatible",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            ""
                        ],
                        [
                            "clang::QualType",
                            ""
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "name": "propertyTypesAreCompatible",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            ""
                        ],
                        [
                            "clang::QualType",
                            ""
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "name": "typesAreBlockPointerCompatible",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType) const",
                    "name": "isObjCIdType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType) const",
                    "name": "isObjCClassType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType) const",
                    "name": "isObjCSelType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "LHS"
                        ],
                        [
                            "clang::QualType",
                            "RHS"
                        ],
                        [
                            "bool",
                            "ForCompare"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::QualType, bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType, bool)",
                    "name": "ObjCQualifiedIdTypesAreCompatible",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "LHS"
                        ],
                        [
                            "clang::QualType",
                            "RHS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "name": "ObjCQualifiedClassTypesAreCompatible",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCObjectPointerType *",
                            "LHSOPT"
                        ],
                        [
                            "const clang::ObjCObjectPointerType *",
                            "RHSOPT"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ObjCObjectPointerType *, const clang::ObjCObjectPointerType *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(const clang::ObjCObjectPointerType *, const clang::ObjCObjectPointerType *)",
                    "name": "canAssignObjCInterfaces",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCObjectType *",
                            "LHS"
                        ],
                        [
                            "const clang::ObjCObjectType *",
                            "RHS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ObjCObjectType *, const clang::ObjCObjectType *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(const clang::ObjCObjectType *, const clang::ObjCObjectType *)",
                    "name": "canAssignObjCInterfaces",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCObjectPointerType *",
                            "LHSOPT"
                        ],
                        [
                            "const clang::ObjCObjectPointerType *",
                            "RHSOPT"
                        ],
                        [
                            "bool",
                            "BlockReturnType"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::ObjCObjectPointerType *, const clang::ObjCObjectPointerType *, bool)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(const clang::ObjCObjectPointerType *, const clang::ObjCObjectPointerType *, bool)",
                    "name": "canAssignObjCInterfacesInBlockPointer",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "LHS"
                        ],
                        [
                            "clang::QualType",
                            "RHS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "name": "areComparableObjCPointerTypes",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCObjectPointerType *",
                            "LHSOPT"
                        ],
                        [
                            "const clang::ObjCObjectPointerType *",
                            "RHSOPT"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (const clang::ObjCObjectPointerType *, const clang::ObjCObjectPointerType *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(const clang::ObjCObjectPointerType *, const clang::ObjCObjectPointerType *)",
                    "name": "areCommonBaseCompatible",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "To"
                        ],
                        [
                            "clang::QualType",
                            "From"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::QualType, clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "name": "canBindObjCObjectType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            ""
                        ],
                        [
                            "clang::QualType",
                            ""
                        ],
                        [
                            "bool",
                            "OfBlockPointer"
                        ],
                        [
                            "bool",
                            "Unqualified"
                        ],
                        [
                            "bool",
                            "BlockReturnType"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::QualType, bool, bool, bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType, bool, bool, bool)",
                    "name": "mergeTypes",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            ""
                        ],
                        [
                            "clang::QualType",
                            ""
                        ],
                        [
                            "bool",
                            "OfBlockPointer"
                        ],
                        [
                            "bool",
                            "Unqualified"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::QualType, bool, bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType, bool, bool)",
                    "name": "mergeFunctionTypes",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            ""
                        ],
                        [
                            "clang::QualType",
                            ""
                        ],
                        [
                            "bool",
                            "OfBlockPointer"
                        ],
                        [
                            "bool",
                            "Unqualified"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::QualType, bool, bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType, bool, bool)",
                    "name": "mergeFunctionParameterTypes",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            ""
                        ],
                        [
                            "clang::QualType",
                            ""
                        ],
                        [
                            "bool",
                            "OfBlockPointer"
                        ],
                        [
                            "bool",
                            "Unqualified"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::QualType, bool, bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType, bool, bool)",
                    "name": "mergeTransparentUnionType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            ""
                        ],
                        [
                            "clang::QualType",
                            ""
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType, clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType, clang::QualType)",
                    "name": "mergeObjCGCQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::FunctionProtoType *",
                            "FirstFnType"
                        ],
                        [
                            "const clang::FunctionProtoType *",
                            "SecondFnType"
                        ],
                        [
                            "bool &",
                            "CanUseFirst"
                        ],
                        [
                            "bool &",
                            "CanUseSecond"
                        ],
                        [
                            "llvm::SmallVectorImpl<clang::FunctionType::ExtParameterInfo> &",
                            "NewParamInfos"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::FunctionProtoType *, const clang::FunctionProtoType *, bool &, bool &, SmallVectorImpl<FunctionProtoType::ExtParameterInfo> &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(const clang::FunctionProtoType *, const clang::FunctionProtoType *, bool &, bool &, llvm::SmallVectorImpl<clang::FunctionType::ExtParameterInfo> &)",
                    "name": "mergeExtParameterInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCContainerDecl *",
                            "CD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ObjCContainerDecl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::ObjCContainerDecl *)",
                    "name": "ResetObjCLayout",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getIntWidth",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getCorrespondingUnsignedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "Ty"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::QualType) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ASTContext::*)(clang::QualType) const",
                    "name": "getCorrespondingSaturatedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "unsigned long",
                            "Value"
                        ],
                        [
                            "clang::QualType",
                            "Type"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "llvm::APSInt (uint64_t, clang::QualType) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::APSInt",
                    "signature": "llvm::APSInt (clang::ASTContext::*)(unsigned long, clang::QualType) const",
                    "name": "MakeIntValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(const clang::Expr *)",
                    "name": "isSentinelNullExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::ObjCInterfaceDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::ObjCImplementationDecl *(clang::ObjCInterfaceDecl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::ObjCImplementationDecl *",
                    "signature": "clang::ObjCImplementationDecl * (clang::ASTContext::*)(clang::ObjCInterfaceDecl *)",
                    "name": "getObjCImplementation",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::ObjCCategoryDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::ObjCCategoryImplDecl *(clang::ObjCCategoryDecl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::ObjCCategoryImplDecl *",
                    "signature": "clang::ObjCCategoryImplDecl * (clang::ASTContext::*)(clang::ObjCCategoryDecl *)",
                    "name": "getObjCImplementation",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)()",
                    "name": "AnyObjCImplementation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::ObjCInterfaceDecl *",
                            "IFaceD"
                        ],
                        [
                            "clang::ObjCImplementationDecl *",
                            "ImplD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ObjCInterfaceDecl *, clang::ObjCImplementationDecl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::ObjCInterfaceDecl *, clang::ObjCImplementationDecl *)",
                    "name": "setObjCImplementation",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::ObjCCategoryDecl *",
                            "CatD"
                        ],
                        [
                            "clang::ObjCCategoryImplDecl *",
                            "ImplD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ObjCCategoryDecl *, clang::ObjCCategoryImplDecl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::ObjCCategoryDecl *, clang::ObjCCategoryImplDecl *)",
                    "name": "setObjCImplementation",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCMethodDecl *",
                            "MD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::ObjCMethodDecl *(const clang::ObjCMethodDecl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ObjCMethodDecl *",
                    "signature": "const clang::ObjCMethodDecl * (clang::ASTContext::*)(const clang::ObjCMethodDecl *) const",
                    "name": "getObjCMethodRedeclaration",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ObjCMethodDecl *",
                            "MD"
                        ],
                        [
                            "const clang::ObjCMethodDecl *",
                            "Redecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ObjCMethodDecl *, const clang::ObjCMethodDecl *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::ObjCMethodDecl *, const clang::ObjCMethodDecl *)",
                    "name": "setObjCMethodRedeclaration",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::NamedDecl *",
                            "ND"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::ObjCInterfaceDecl *(const clang::NamedDecl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ObjCInterfaceDecl *",
                    "signature": "const clang::ObjCInterfaceDecl * (clang::ASTContext::*)(const clang::NamedDecl *) const",
                    "name": "getObjContainingInterface",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "VD"
                        ],
                        [
                            "clang::Expr *",
                            "CopyExpr"
                        ],
                        [
                            "bool",
                            "CanThrow"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::VarDecl *, clang::Expr *, bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::VarDecl *, clang::Expr *, bool)",
                    "name": "setBlockVarCopyInit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "VD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::ASTContext::BlockVarCopyInit (const clang::VarDecl *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ASTContext::BlockVarCopyInit",
                    "signature": "clang::ASTContext::BlockVarCopyInit (clang::ASTContext::*)(const clang::VarDecl *) const",
                    "name": "getBlockVarCopyInit",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "unsigned int",
                            "Size"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *(clang::QualType, unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::ASTContext::*)(clang::QualType, unsigned int) const",
                    "name": "CreateTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *(clang::QualType, clang::SourceLocation) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::ASTContext::*)(clang::QualType, clang::SourceLocation) const",
                    "name": "getTrivialTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "void (*)(void *)",
                            "Callback"
                        ],
                        [
                            "void *",
                            "Data"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (void (*)(void *), void *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(void (*)(void *), void *)",
                    "name": "AddDeallocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::FunctionDecl *",
                            "FD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::GVALinkage (const clang::FunctionDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::GVALinkage",
                    "signature": "clang::GVALinkage (clang::ASTContext::*)(const clang::FunctionDecl *) const",
                    "name": "GetGVALinkageForFunction",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "VD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::GVALinkage (const clang::VarDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::GVALinkage",
                    "signature": "clang::GVALinkage (clang::ASTContext::*)(const clang::VarDecl *)",
                    "name": "GetGVALinkageForVariable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::Decl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::Decl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(const clang::Decl *)",
                    "name": "DeclMustBeEmitted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::FunctionDecl *",
                            "FD"
                        ],
                        [
                            "llvm::function_ref<void (clang::FunctionDecl *)>",
                            "Pred"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::FunctionDecl *, llvm::function_ref<void (FunctionDecl *)>) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::FunctionDecl *, llvm::function_ref<void (clang::FunctionDecl *)>) const",
                    "name": "forEachMultiversionedFunctionVersion",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::CXXRecordDecl *",
                            "RD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXConstructorDecl *(clang::CXXRecordDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "const clang::CXXConstructorDecl *",
                    "signature": "const clang::CXXConstructorDecl * (clang::ASTContext::*)(clang::CXXRecordDecl *)",
                    "name": "getCopyConstructorForExceptionObject",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::CXXRecordDecl *",
                            "RD"
                        ],
                        [
                            "clang::CXXConstructorDecl *",
                            "CD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CXXRecordDecl *, clang::CXXConstructorDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::CXXRecordDecl *, clang::CXXConstructorDecl *)",
                    "name": "addCopyConstructorForExceptionObject",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TagDecl *",
                            "TD"
                        ],
                        [
                            "clang::TypedefNameDecl *",
                            "TND"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TagDecl *, clang::TypedefNameDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::TagDecl *, clang::TypedefNameDecl *)",
                    "name": "addTypedefNameForUnnamedTagDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::TagDecl *",
                            "TD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TypedefNameDecl *(const clang::TagDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::TypedefNameDecl *",
                    "signature": "clang::TypedefNameDecl * (clang::ASTContext::*)(const clang::TagDecl *)",
                    "name": "getTypedefNameForUnnamedTagDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::TagDecl *",
                            "TD"
                        ],
                        [
                            "clang::DeclaratorDecl *",
                            "DD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TagDecl *, clang::DeclaratorDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::TagDecl *, clang::DeclaratorDecl *)",
                    "name": "addDeclaratorForUnnamedTagDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::TagDecl *",
                            "TD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclaratorDecl *(const clang::TagDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::DeclaratorDecl *",
                    "signature": "clang::DeclaratorDecl * (clang::ASTContext::*)(const clang::TagDecl *)",
                    "name": "getDeclaratorForUnnamedTagDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::NamedDecl *",
                            "ND"
                        ],
                        [
                            "unsigned int",
                            "Number"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::NamedDecl *, unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::NamedDecl *, unsigned int)",
                    "name": "setManglingNumber",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::NamedDecl *",
                            "ND"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (const clang::NamedDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(const clang::NamedDecl *) const",
                    "name": "getManglingNumber",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "VD"
                        ],
                        [
                            "unsigned int",
                            "Number"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::VarDecl *, unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::VarDecl *, unsigned int)",
                    "name": "setStaticLocalNumber",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "VD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (const clang::VarDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(const clang::VarDecl *) const",
                    "name": "getStaticLocalNumber",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::DeclContext *",
                            "DC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::MangleNumberingContext &(const clang::DeclContext *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::MangleNumberingContext &",
                    "signature": "clang::MangleNumberingContext & (clang::ASTContext::*)(const clang::DeclContext *)",
                    "name": "getManglingNumberContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "std::unique_ptr<MangleNumberingContext> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> >",
                    "signature": "std::unique_ptr<clang::MangleNumberingContext, std::default_delete<clang::MangleNumberingContext> > (clang::ASTContext::*)() const",
                    "name": "createMangleNumberingContext",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ParmVarDecl *",
                            "D"
                        ],
                        [
                            "unsigned int",
                            "index"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ParmVarDecl *, unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::ParmVarDecl *, unsigned int)",
                    "name": "setParameterIndex",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::ParmVarDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "unsigned int (const clang::ParmVarDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ASTContext::*)(const clang::ParmVarDecl *) const",
                    "name": "getParameterIndex",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::MaterializeTemporaryExpr *",
                            "E"
                        ],
                        [
                            "bool",
                            "MayCreate"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::APValue *(const clang::MaterializeTemporaryExpr *, bool)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::APValue *",
                    "signature": "clang::APValue * (clang::ASTContext::*)(const clang::MaterializeTemporaryExpr *, bool)",
                    "name": "getMaterializedTemporaryValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::TargetInfo &",
                            "Target"
                        ],
                        [
                            "const clang::TargetInfo *",
                            "AuxTarget"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::TargetInfo &, const clang::TargetInfo *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(const clang::TargetInfo &, const clang::TargetInfo *)",
                    "name": "InitBuiltinTypes",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "clang::Decl::ObjCDeclQualifier",
                            "QT"
                        ],
                        [
                            "clang::QualType",
                            "T"
                        ],
                        [
                            "std::__cxx11::basic_string<char> &",
                            "S"
                        ],
                        [
                            "bool",
                            "Extended"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (Decl::ObjCDeclQualifier, clang::QualType, std::string &, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::ASTContext::*)(clang::Decl::ObjCDeclQualifier, clang::QualType, std::__cxx11::basic_string<char> &, bool) const",
                    "name": "getObjCEncodingForMethodParameter",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "VD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::VarDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ASTContext::*)(const clang::VarDecl *) const",
                    "name": "isMSStaticDataMemberInlineDefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ASTContext",
                    "args": [
                        [
                            "const clang::VarDecl *",
                            "VD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::ASTContext::InlineVariableDefinitionKind (const clang::VarDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ASTContext::InlineVariableDefinitionKind",
                    "signature": "clang::ASTContext::InlineVariableDefinitionKind (clang::ASTContext::*)(const clang::VarDecl *) const",
                    "name": "getInlineVariableDefinitionKind",
                    "is_overload": false
                }
            ],
            "typename": "clang::ASTContext",
            "is_disabled": false,
            "supers": [],
            "name": "ASTContext",
            "node": false
        },
        {
            "typename": "clang::AccessSpecDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::AccessSpecDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::AccessSpecDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AccessSpecDecl::*)() const",
                    "name": "getAccessSpecifierLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AccessSpecDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "ASLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::AccessSpecDecl::*)(clang::SourceLocation)",
                    "name": "setAccessSpecifierLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AccessSpecDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::AccessSpecDecl::*)() const",
                    "name": "getColonLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AccessSpecDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "CLoc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::AccessSpecDecl::*)(clang::SourceLocation)",
                    "name": "setColonLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::AccessSpecDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::AccessSpecDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Decl"
            ],
            "name": "AccessSpecDecl"
        },
        {
            "typename": "clang::CXXRecordDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::CXXRecordDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXRecordDecl *",
                    "signature": "clang::CXXRecordDecl * (clang::CXXRecordDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXRecordDecl *",
                    "signature": "const clang::CXXRecordDecl * (clang::CXXRecordDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXRecordDecl *",
                    "signature": "clang::CXXRecordDecl * (clang::CXXRecordDecl::*)()",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXRecordDecl *",
                    "signature": "const clang::CXXRecordDecl * (clang::CXXRecordDecl::*)() const",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXRecordDecl *",
                    "signature": "clang::CXXRecordDecl * (clang::CXXRecordDecl::*)()",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXRecordDecl *",
                    "signature": "const clang::CXXRecordDecl * (clang::CXXRecordDecl::*)() const",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXRecordDecl *",
                    "signature": "clang::CXXRecordDecl * (clang::CXXRecordDecl::*)()",
                    "name": "getMostRecentNonInjectedDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXRecordDecl *",
                    "signature": "const clang::CXXRecordDecl * (clang::CXXRecordDecl::*)() const",
                    "name": "getMostRecentNonInjectedDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXRecordDecl *",
                    "signature": "clang::CXXRecordDecl * (clang::CXXRecordDecl::*)() const",
                    "name": "getDefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasDefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isDynamicClass",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "mayBeDynamicClass",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "mayBeNonDynamicClass",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)()",
                    "name": "setIsParsingBaseSpecifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isParsingBaseSpecifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CXXRecordDecl::*)() const",
                    "name": "getODRHash",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CXXRecordDecl::*)() const",
                    "name": "getNumBases",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl::base_class_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::CXXBaseSpecifier *>",
                    "signature": "llvm::iterator_range<clang::CXXBaseSpecifier *> (clang::CXXRecordDecl::*)()",
                    "name": "bases",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl::base_class_const_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<const clang::CXXBaseSpecifier *>",
                    "signature": "llvm::iterator_range<const clang::CXXBaseSpecifier *> (clang::CXXRecordDecl::*)() const",
                    "name": "bases",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CXXRecordDecl::*)() const",
                    "name": "getNumVBases",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl::base_class_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::CXXBaseSpecifier *>",
                    "signature": "llvm::iterator_range<clang::CXXBaseSpecifier *> (clang::CXXRecordDecl::*)()",
                    "name": "vbases",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl::base_class_const_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<const clang::CXXBaseSpecifier *>",
                    "signature": "llvm::iterator_range<const clang::CXXBaseSpecifier *> (clang::CXXRecordDecl::*)() const",
                    "name": "vbases",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasAnyDependentBases",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl::method_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::CXXMethodDecl> >",
                    "signature": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::CXXMethodDecl> > (clang::CXXRecordDecl::*)() const",
                    "name": "methods",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl::ctor_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::CXXConstructorDecl> >",
                    "signature": "llvm::iterator_range<clang::DeclContext::specific_decl_iterator<clang::CXXConstructorDecl> > (clang::CXXRecordDecl::*)() const",
                    "name": "ctors",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl::friend_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::CXXRecordDecl::friend_iterator>",
                    "signature": "llvm::iterator_range<clang::CXXRecordDecl::friend_iterator> (clang::CXXRecordDecl::*)() const",
                    "name": "friends",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "clang::FriendDecl *",
                            "FD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FriendDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::FriendDecl *)",
                    "name": "pushFriendDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasFriends",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "defaultedCopyConstructorIsDeleted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "defaultedMoveConstructorIsDeleted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "defaultedDestructorIsDeleted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasSimpleCopyConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasSimpleMoveConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasSimpleMoveAssignment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasSimpleDestructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasDefaultConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "needsImplicitDefaultConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasUserDeclaredConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasUserProvidedDefaultConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasUserDeclaredCopyConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "needsImplicitCopyConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "needsOverloadResolutionForCopyConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "implicitCopyConstructorHasConstParam",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasCopyConstructorWithConstParam",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasUserDeclaredMoveOperation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasUserDeclaredMoveConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasMoveConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)()",
                    "name": "setImplicitCopyConstructorIsDeleted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)()",
                    "name": "setImplicitMoveConstructorIsDeleted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)()",
                    "name": "setImplicitDestructorIsDeleted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "needsImplicitMoveConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "needsOverloadResolutionForMoveConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasUserDeclaredCopyAssignment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "needsImplicitCopyAssignment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "needsOverloadResolutionForCopyAssignment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "implicitCopyAssignmentHasConstParam",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasCopyAssignmentWithConstParam",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasUserDeclaredMoveAssignment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasMoveAssignment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)()",
                    "name": "setImplicitMoveAssignmentIsDeleted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "needsImplicitMoveAssignment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "needsOverloadResolutionForMoveAssignment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasUserDeclaredDestructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "needsImplicitDestructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "needsOverloadResolutionForDestructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isLambda",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isGenericLambda",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "lambdaIsDefaultConstructibleAndAssignable",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXMethodDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXMethodDecl *",
                    "signature": "clang::CXXMethodDecl * (clang::CXXRecordDecl::*)() const",
                    "name": "getLambdaCallOperator",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXMethodDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXMethodDecl *",
                    "signature": "clang::CXXMethodDecl * (clang::CXXRecordDecl::*)() const",
                    "name": "getLambdaStaticInvoker",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateParameterList *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateParameterList *",
                    "signature": "clang::TemplateParameterList * (clang::CXXRecordDecl::*)() const",
                    "name": "getGenericLambdaTemplateParameterList",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LambdaCaptureDefault () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::LambdaCaptureDefault",
                    "signature": "clang::LambdaCaptureDefault (clang::CXXRecordDecl::*)() const",
                    "name": "getLambdaCaptureDefault",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl::capture_const_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<const clang::LambdaCapture *>",
                    "signature": "llvm::iterator_range<const clang::LambdaCapture *> (clang::CXXRecordDecl::*)() const",
                    "name": "captures",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "const clang::NamedDecl *",
                            "Old"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::NamedDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)(const clang::NamedDecl *)",
                    "name": "removeConversion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::iterator_range<conversion_iterator> ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::UnresolvedSetIterator>",
                    "signature": "llvm::iterator_range<clang::UnresolvedSetIterator> (clang::CXXRecordDecl::*)()",
                    "name": "getVisibleConversionFunctions",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isAggregate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasInClassInitializer",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasUninitializedReferenceMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isPOD",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isCLike",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isEmpty",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasDirectFields",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isPolymorphic",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isAbstract",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isStandardLayout",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isCXX11StandardLayout",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasMutableFields",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasVariantMembers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasTrivialDefaultConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasNonTrivialDefaultConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasConstexprNonCopyMoveConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "defaultedDefaultConstructorIsConstexpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasConstexprDefaultConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasTrivialCopyConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasTrivialCopyConstructorForCall",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasNonTrivialCopyConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasNonTrivialCopyConstructorForCall",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasTrivialMoveConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasTrivialMoveConstructorForCall",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasNonTrivialMoveConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasNonTrivialMoveConstructorForCall",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasTrivialCopyAssignment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasNonTrivialCopyAssignment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasTrivialMoveAssignment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasNonTrivialMoveAssignment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasTrivialDestructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasTrivialDestructorForCall",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasNonTrivialDestructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasNonTrivialDestructorForCall",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)()",
                    "name": "setHasTrivialSpecialMemberForCall",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "allowConstDefaultInit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasIrrelevantDestructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasNonLiteralTypeFieldsOrBases",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasInheritedConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "hasInheritedAssignment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isTriviallyCopyable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isTrivial",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isLiteral",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXRecordDecl *",
                    "signature": "clang::CXXRecordDecl * (clang::CXXRecordDecl::*)() const",
                    "name": "getInstantiatedFromMemberClass",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::MemberSpecializationInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::MemberSpecializationInfo *",
                    "signature": "clang::MemberSpecializationInfo * (clang::CXXRecordDecl::*)() const",
                    "name": "getMemberSpecializationInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "clang::CXXRecordDecl *",
                            "RD"
                        ],
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CXXRecordDecl *, clang::TemplateSpecializationKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::CXXRecordDecl *, clang::TemplateSpecializationKind)",
                    "name": "setInstantiationOfMemberClass",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ClassTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ClassTemplateDecl *",
                    "signature": "clang::ClassTemplateDecl * (clang::CXXRecordDecl::*)() const",
                    "name": "getDescribedClassTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "clang::ClassTemplateDecl *",
                            "Template"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ClassTemplateDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::ClassTemplateDecl *)",
                    "name": "setDescribedClassTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateSpecializationKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateSpecializationKind",
                    "signature": "clang::TemplateSpecializationKind (clang::CXXRecordDecl::*)() const",
                    "name": "getTemplateSpecializationKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TemplateSpecializationKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::TemplateSpecializationKind)",
                    "name": "setTemplateSpecializationKind",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXRecordDecl *",
                    "signature": "const clang::CXXRecordDecl * (clang::CXXRecordDecl::*)() const",
                    "name": "getTemplateInstantiationPattern",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXRecordDecl *",
                    "signature": "clang::CXXRecordDecl * (clang::CXXRecordDecl::*)()",
                    "name": "getTemplateInstantiationPattern",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXDestructorDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXDestructorDecl *",
                    "signature": "clang::CXXDestructorDecl * (clang::CXXRecordDecl::*)() const",
                    "name": "getDestructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isAnyDestructorNoReturn",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FunctionDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::FunctionDecl *",
                    "signature": "const clang::FunctionDecl * (clang::CXXRecordDecl::*)() const",
                    "name": "isLocalClass",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::FunctionDecl *",
                    "signature": "clang::FunctionDecl * (clang::CXXRecordDecl::*)()",
                    "name": "isLocalClass",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "const clang::DeclContext *",
                            "CurContext"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::DeclContext *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)(const clang::DeclContext *) const",
                    "name": "isCurrentInstantiation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "Base"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::CXXRecordDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)(const clang::CXXRecordDecl *) const",
                    "name": "isDerivedFrom",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "Base"
                        ],
                        [
                            "clang::CXXBasePaths &",
                            "Paths"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::CXXRecordDecl *, clang::CXXBasePaths &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)(const clang::CXXRecordDecl *, clang::CXXBasePaths &) const",
                    "name": "isDerivedFrom",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "Base"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::CXXRecordDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)(const clang::CXXRecordDecl *) const",
                    "name": "isVirtuallyDerivedFrom",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "Base"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::CXXRecordDecl *) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)(const clang::CXXRecordDecl *) const",
                    "name": "isProvablyNotDerivedFrom",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "llvm::function_ref<bool (const clang::CXXRecordDecl *)>",
                            "BaseMatches"
                        ],
                        [
                            "bool",
                            "AllowShortCircuit"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::CXXRecordDecl::ForallBasesCallback, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)(llvm::function_ref<bool (const clang::CXXRecordDecl *)>, bool) const",
                    "name": "forallBases",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "llvm::function_ref<bool (const clang::CXXBaseSpecifier *, clang::CXXBasePath &)>",
                            "BaseMatches"
                        ],
                        [
                            "clang::CXXBasePaths &",
                            "Paths"
                        ],
                        [
                            "bool",
                            "LookupInDependent"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (clang::CXXRecordDecl::BaseMatchesCallback, clang::CXXBasePaths &, bool) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)(llvm::function_ref<bool (const clang::CXXBaseSpecifier *, clang::CXXBasePath &)>, clang::CXXBasePaths &, bool) const",
                    "name": "lookupInBases",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "clang::CXXFinalOverriderMap &",
                            "FinaOverriders"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CXXFinalOverriderMap &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::CXXFinalOverriderMap &) const",
                    "name": "getFinalOverriders",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "clang::CXXIndirectPrimaryBaseSet &",
                            "Bases"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CXXIndirectPrimaryBaseSet &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::CXXIndirectPrimaryBaseSet &) const",
                    "name": "getIndirectPrimaryBases",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "const clang::DeclarationName &",
                            "Name"
                        ],
                        [
                            "llvm::function_ref<bool (const clang::NamedDecl *)>",
                            "Filter"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "std::vector<const NamedDecl *> (const clang::DeclarationName &, llvm::function_ref<bool (const NamedDecl *)>)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "std::vector<const clang::NamedDecl *, std::allocator<const clang::NamedDecl *> >",
                    "signature": "std::vector<const clang::NamedDecl *, std::allocator<const clang::NamedDecl *> > (clang::CXXRecordDecl::*)(const clang::DeclarationName &, llvm::function_ref<bool (const clang::NamedDecl *)>)",
                    "name": "lookupDependentName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::ASTContext &) const",
                    "name": "viewInheritance",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "clang::CXXMethodDecl *",
                            "MD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CXXMethodDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::CXXMethodDecl *)",
                    "name": "finishedDefaultedOrDeletedMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "clang::CXXMethodDecl *",
                            "MD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CXXMethodDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::CXXMethodDecl *)",
                    "name": "setTrivialForCallFlags",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)()",
                    "name": "completeDefinition",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "clang::CXXFinalOverriderMap *",
                            "FinalOverriders"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CXXFinalOverriderMap *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)(clang::CXXFinalOverriderMap *)",
                    "name": "completeDefinition",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "mayBeAbstract",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CXXRecordDecl::*)() const",
                    "name": "getLambdaManglingNumber",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Decl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Decl *",
                    "signature": "clang::Decl * (clang::CXXRecordDecl::*)() const",
                    "name": "getLambdaContextDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [
                        [
                            "unsigned int",
                            "ManglingNumber"
                        ],
                        [
                            "clang::Decl *",
                            "ContextDecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int, clang::Decl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXRecordDecl::*)(unsigned int, clang::Decl *)",
                    "name": "setLambdaMangling",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "MSInheritanceAttr::Spelling () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::MSInheritanceAttr::Spelling",
                    "signature": "clang::MSInheritanceAttr::Spelling (clang::CXXRecordDecl::*)() const",
                    "name": "getMSInheritanceModel",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "MSInheritanceAttr::Spelling () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::MSInheritanceAttr::Spelling",
                    "signature": "clang::MSInheritanceAttr::Spelling (clang::CXXRecordDecl::*)() const",
                    "name": "calculateInheritanceModel",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "nullFieldOffsetIsZero",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "MSVtorDispAttr::Mode () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::MSVtorDispAttr::Mode",
                    "signature": "clang::MSVtorDispAttr::Mode (clang::CXXRecordDecl::*)() const",
                    "name": "getMSVtorDispMode",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isDependentLambda",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::CXXRecordDecl::*)() const",
                    "name": "getLambdaTypeInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXRecordDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXRecordDecl::*)() const",
                    "name": "isInterfaceLike",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::RecordDecl"
            ],
            "name": "CXXRecordDecl"
        },
        {
            "typename": "clang::CXXDeductionGuideDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::CXXDeductionGuideDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXDeductionGuideDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXDeductionGuideDecl::*)() const",
                    "name": "isExplicit",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDeductionGuideDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateDecl *",
                    "signature": "clang::TemplateDecl * (clang::CXXDeductionGuideDecl::*)() const",
                    "name": "getDeducedTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDeductionGuideDecl",
                    "args": [
                        [
                            "bool",
                            "isCDC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXDeductionGuideDecl::*)(bool)",
                    "name": "setIsCopyDeductionCandidate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDeductionGuideDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXDeductionGuideDecl::*)() const",
                    "name": "isCopyDeductionCandidate",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::FunctionDecl"
            ],
            "name": "CXXDeductionGuideDecl"
        },
        {
            "typename": "clang::CXXMethodDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::CXXMethodDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "name": "isStatic",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "name": "isInstance",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "name": "isConst",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "name": "isVolatile",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "name": "isVirtual",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXMethodDecl",
                    "args": [
                        [
                            "const clang::Expr *",
                            "Base"
                        ],
                        [
                            "bool",
                            "IsAppleKext"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXMethodDecl *(const clang::Expr *, bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXMethodDecl *",
                    "signature": "clang::CXXMethodDecl * (clang::CXXMethodDecl::*)(const clang::Expr *, bool)",
                    "name": "getDevirtualizedMethod",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXMethodDecl",
                    "args": [
                        [
                            "const clang::Expr *",
                            "Base"
                        ],
                        [
                            "bool",
                            "IsAppleKext"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXMethodDecl *(const clang::Expr *, bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXMethodDecl *",
                    "signature": "const clang::CXXMethodDecl * (clang::CXXMethodDecl::*)(const clang::Expr *, bool) const",
                    "name": "getDevirtualizedMethod",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [
                        [
                            "llvm::SmallVectorImpl<const clang::FunctionDecl *> &",
                            "PreventedBy"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (SmallVectorImpl<const clang::FunctionDecl *> &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXMethodDecl::*)(llvm::SmallVectorImpl<const clang::FunctionDecl *> &) const",
                    "name": "isUsualDeallocationFunction",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "name": "isCopyAssignmentOperator",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "name": "isMoveAssignmentOperator",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXMethodDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXMethodDecl *",
                    "signature": "clang::CXXMethodDecl * (clang::CXXMethodDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXMethodDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXMethodDecl *",
                    "signature": "const clang::CXXMethodDecl * (clang::CXXMethodDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXMethodDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXMethodDecl *",
                    "signature": "clang::CXXMethodDecl * (clang::CXXMethodDecl::*)()",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXMethodDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXMethodDecl *",
                    "signature": "const clang::CXXMethodDecl * (clang::CXXMethodDecl::*)() const",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "name": "isUserProvided",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [
                        [
                            "const clang::CXXMethodDecl *",
                            "MD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::CXXMethodDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXMethodDecl::*)(const clang::CXXMethodDecl *)",
                    "name": "addOverriddenMethod",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CXXMethodDecl::*)() const",
                    "name": "size_overridden_methods",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXMethodDecl::overridden_method_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<const clang::CXXMethodDecl *const *>",
                    "signature": "llvm::iterator_range<const clang::CXXMethodDecl *const *> (clang::CXXMethodDecl::*)() const",
                    "name": "overridden_methods",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXRecordDecl *",
                    "signature": "const clang::CXXRecordDecl * (clang::CXXMethodDecl::*)() const",
                    "name": "getParent",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXRecordDecl *",
                    "signature": "clang::CXXRecordDecl * (clang::CXXMethodDecl::*)()",
                    "name": "getParent",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::CXXMethodDecl::*)() const",
                    "name": "getThisType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Qualifiers () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Qualifiers",
                    "signature": "clang::Qualifiers (clang::CXXMethodDecl::*)() const",
                    "name": "getTypeQualifiers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::RefQualifierKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::RefQualifierKind",
                    "signature": "clang::RefQualifierKind (clang::CXXMethodDecl::*)() const",
                    "name": "getRefQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "name": "hasInlineBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMethodDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXMethodDecl::*)() const",
                    "name": "isLambdaStaticInvoker",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXMethodDecl",
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "RD"
                        ],
                        [
                            "bool",
                            "MayBeBase"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXMethodDecl *(const clang::CXXRecordDecl *, bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXMethodDecl *",
                    "signature": "clang::CXXMethodDecl * (clang::CXXMethodDecl::*)(const clang::CXXRecordDecl *, bool)",
                    "name": "getCorrespondingMethodInClass",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXMethodDecl",
                    "args": [
                        [
                            "const clang::CXXRecordDecl *",
                            "RD"
                        ],
                        [
                            "bool",
                            "MayBeBase"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXMethodDecl *(const clang::CXXRecordDecl *, bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXMethodDecl *",
                    "signature": "const clang::CXXMethodDecl * (clang::CXXMethodDecl::*)(const clang::CXXRecordDecl *, bool) const",
                    "name": "getCorrespondingMethodInClass",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::FunctionDecl"
            ],
            "name": "CXXMethodDecl"
        },
        {
            "typename": "clang::CXXConstructorDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::CXXConstructorDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXConstructorDecl::init_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::CXXCtorInitializer **>",
                    "signature": "llvm::iterator_range<clang::CXXCtorInitializer **> (clang::CXXConstructorDecl::*)()",
                    "name": "inits",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXConstructorDecl::init_const_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::CXXCtorInitializer *const *>",
                    "signature": "llvm::iterator_range<clang::CXXCtorInitializer *const *> (clang::CXXConstructorDecl::*)() const",
                    "name": "inits",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CXXConstructorDecl::*)() const",
                    "name": "getNumCtorInitializers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [
                        [
                            "unsigned int",
                            "numCtorInitializers"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXConstructorDecl::*)(unsigned int)",
                    "name": "setNumCtorInitializers",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "name": "isExplicit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "name": "isDelegatingConstructor",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXConstructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXConstructorDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXConstructorDecl *",
                    "signature": "clang::CXXConstructorDecl * (clang::CXXConstructorDecl::*)() const",
                    "name": "getTargetConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "name": "isDefaultConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [
                        [
                            "unsigned int &",
                            "TypeQuals"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (unsigned int &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructorDecl::*)(unsigned int &) const",
                    "name": "isCopyConstructor",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "name": "isCopyConstructor",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [
                        [
                            "unsigned int &",
                            "TypeQuals"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (unsigned int &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructorDecl::*)(unsigned int &) const",
                    "name": "isMoveConstructor",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "name": "isMoveConstructor",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [
                        [
                            "unsigned int &",
                            "TypeQuals"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (unsigned int &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructorDecl::*)(unsigned int &) const",
                    "name": "isCopyOrMoveConstructor",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "name": "isCopyOrMoveConstructor",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [
                        [
                            "bool",
                            "AllowExplicit"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (bool) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructorDecl::*)(bool) const",
                    "name": "isConvertingConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "name": "isSpecializationCopyingObject",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructorDecl::*)() const",
                    "name": "isInheritingConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [
                        [
                            "bool",
                            "isIC"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXConstructorDecl::*)(bool)",
                    "name": "setInheritingConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::InheritedConstructor () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::InheritedConstructor",
                    "signature": "clang::InheritedConstructor (clang::CXXConstructorDecl::*)() const",
                    "name": "getInheritedConstructor",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXConstructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXConstructorDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXConstructorDecl *",
                    "signature": "clang::CXXConstructorDecl * (clang::CXXConstructorDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXConstructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXConstructorDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXConstructorDecl *",
                    "signature": "const clang::CXXConstructorDecl * (clang::CXXConstructorDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::CXXMethodDecl"
            ],
            "name": "CXXConstructorDecl"
        },
        {
            "typename": "clang::CXXDestructorDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::CXXDestructorDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXDestructorDecl",
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "OD"
                        ],
                        [
                            "clang::Expr *",
                            "ThisArg"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FunctionDecl *, clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXDestructorDecl::*)(clang::FunctionDecl *, clang::Expr *)",
                    "name": "setOperatorDelete",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDestructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FunctionDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::FunctionDecl *",
                    "signature": "const clang::FunctionDecl * (clang::CXXDestructorDecl::*)() const",
                    "name": "getOperatorDelete",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDestructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXDestructorDecl::*)() const",
                    "name": "getOperatorDeleteThisArg",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDestructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXDestructorDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXDestructorDecl *",
                    "signature": "clang::CXXDestructorDecl * (clang::CXXDestructorDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDestructorDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXDestructorDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXDestructorDecl *",
                    "signature": "const clang::CXXDestructorDecl * (clang::CXXDestructorDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::CXXMethodDecl"
            ],
            "name": "CXXDestructorDecl"
        },
        {
            "typename": "clang::CXXConversionDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::CXXConversionDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXConversionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConversionDecl::*)() const",
                    "name": "isExplicit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConversionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::CXXConversionDecl::*)() const",
                    "name": "getConversionType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConversionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConversionDecl::*)() const",
                    "name": "isLambdaToBlockPointerConversion",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXConversionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXConversionDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXConversionDecl *",
                    "signature": "clang::CXXConversionDecl * (clang::CXXConversionDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXConversionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXConversionDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXConversionDecl *",
                    "signature": "const clang::CXXConversionDecl * (clang::CXXConversionDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::CXXMethodDecl"
            ],
            "name": "CXXConversionDecl"
        },
        {
            "typename": "clang::LinkageSpecDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::LinkageSpecDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::LinkageSpecDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LinkageSpecDecl::LanguageIDs () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::LinkageSpecDecl::LanguageIDs",
                    "signature": "clang::LinkageSpecDecl::LanguageIDs (clang::LinkageSpecDecl::*)() const",
                    "name": "getLanguage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LinkageSpecDecl",
                    "args": [
                        [
                            "clang::LinkageSpecDecl::LanguageIDs",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::LinkageSpecDecl::LanguageIDs)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::LinkageSpecDecl::*)(clang::LinkageSpecDecl::LanguageIDs)",
                    "name": "setLanguage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LinkageSpecDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::LinkageSpecDecl::*)() const",
                    "name": "hasBraces",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LinkageSpecDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::LinkageSpecDecl::*)() const",
                    "name": "getExternLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LinkageSpecDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::LinkageSpecDecl::*)() const",
                    "name": "getRBraceLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LinkageSpecDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::LinkageSpecDecl::*)(clang::SourceLocation)",
                    "name": "setExternLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LinkageSpecDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::LinkageSpecDecl::*)(clang::SourceLocation)",
                    "name": "setRBraceLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LinkageSpecDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::LinkageSpecDecl::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LinkageSpecDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::LinkageSpecDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Decl",
                "clang::DeclContext"
            ],
            "name": "LinkageSpecDecl"
        },
        {
            "typename": "clang::UsingDirectiveDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::UsingDirectiveDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::UsingDirectiveDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "signature": "clang::NestedNameSpecifierLoc (clang::UsingDirectiveDecl::*)() const",
                    "name": "getQualifierLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingDirectiveDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifier *",
                    "signature": "clang::NestedNameSpecifier * (clang::UsingDirectiveDecl::*)() const",
                    "name": "getQualifier",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingDirectiveDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamedDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::NamedDecl *",
                    "signature": "clang::NamedDecl * (clang::UsingDirectiveDecl::*)()",
                    "name": "getNominatedNamespaceAsWritten",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingDirectiveDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::NamedDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::NamedDecl *",
                    "signature": "const clang::NamedDecl * (clang::UsingDirectiveDecl::*)() const",
                    "name": "getNominatedNamespaceAsWritten",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingDirectiveDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamespaceDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::NamespaceDecl *",
                    "signature": "clang::NamespaceDecl * (clang::UsingDirectiveDecl::*)()",
                    "name": "getNominatedNamespace",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingDirectiveDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::NamespaceDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::NamespaceDecl *",
                    "signature": "const clang::NamespaceDecl * (clang::UsingDirectiveDecl::*)() const",
                    "name": "getNominatedNamespace",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingDirectiveDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclContext *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclContext *",
                    "signature": "clang::DeclContext * (clang::UsingDirectiveDecl::*)()",
                    "name": "getCommonAncestor",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingDirectiveDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclContext *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclContext *",
                    "signature": "const clang::DeclContext * (clang::UsingDirectiveDecl::*)() const",
                    "name": "getCommonAncestor",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UsingDirectiveDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UsingDirectiveDecl::*)() const",
                    "name": "getUsingLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingDirectiveDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UsingDirectiveDecl::*)() const",
                    "name": "getNamespaceKeyLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingDirectiveDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UsingDirectiveDecl::*)() const",
                    "name": "getIdentLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingDirectiveDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::UsingDirectiveDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "UsingDirectiveDecl"
        },
        {
            "typename": "clang::NamespaceAliasDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::NamespaceAliasDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamespaceAliasDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamespaceAliasDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::NamespaceAliasDecl *",
                    "signature": "clang::NamespaceAliasDecl * (clang::NamespaceAliasDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamespaceAliasDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::NamespaceAliasDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::NamespaceAliasDecl *",
                    "signature": "const clang::NamespaceAliasDecl * (clang::NamespaceAliasDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::NamespaceAliasDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "signature": "clang::NestedNameSpecifierLoc (clang::NamespaceAliasDecl::*)() const",
                    "name": "getQualifierLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamespaceAliasDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifier *",
                    "signature": "clang::NestedNameSpecifier * (clang::NamespaceAliasDecl::*)() const",
                    "name": "getQualifier",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamespaceAliasDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamespaceDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::NamespaceDecl *",
                    "signature": "clang::NamespaceDecl * (clang::NamespaceAliasDecl::*)()",
                    "name": "getNamespace",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamespaceAliasDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::NamespaceDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::NamespaceDecl *",
                    "signature": "const clang::NamespaceDecl * (clang::NamespaceAliasDecl::*)() const",
                    "name": "getNamespace",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::NamespaceAliasDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::NamespaceAliasDecl::*)() const",
                    "name": "getAliasLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamespaceAliasDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::NamespaceAliasDecl::*)() const",
                    "name": "getNamespaceLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamespaceAliasDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::NamespaceAliasDecl::*)() const",
                    "name": "getTargetNameLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NamespaceAliasDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamedDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NamedDecl *",
                    "signature": "clang::NamedDecl * (clang::NamespaceAliasDecl::*)() const",
                    "name": "getAliasedNamespace",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NamespaceAliasDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::NamespaceAliasDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "NamespaceAliasDecl"
        },
        {
            "typename": "clang::UsingShadowDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::UsingShadowDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingShadowDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::UsingShadowDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::UsingShadowDecl *",
                    "signature": "clang::UsingShadowDecl * (clang::UsingShadowDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingShadowDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::UsingShadowDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::UsingShadowDecl *",
                    "signature": "const clang::UsingShadowDecl * (clang::UsingShadowDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingShadowDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamedDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NamedDecl *",
                    "signature": "clang::NamedDecl * (clang::UsingShadowDecl::*)() const",
                    "name": "getTargetDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingShadowDecl",
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "ND"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::NamedDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::UsingShadowDecl::*)(clang::NamedDecl *)",
                    "name": "setTargetDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingShadowDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::UsingDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::UsingDecl *",
                    "signature": "clang::UsingDecl * (clang::UsingShadowDecl::*)() const",
                    "name": "getUsingDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingShadowDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::UsingShadowDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::UsingShadowDecl *",
                    "signature": "clang::UsingShadowDecl * (clang::UsingShadowDecl::*)() const",
                    "name": "getNextUsingShadowDecl",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "UsingShadowDecl"
        },
        {
            "typename": "clang::UsingDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::UsingDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::UsingDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UsingDecl::*)() const",
                    "name": "getUsingLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::UsingDecl::*)(clang::SourceLocation)",
                    "name": "setUsingLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "signature": "clang::NestedNameSpecifierLoc (clang::UsingDecl::*)() const",
                    "name": "getQualifierLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifier *",
                    "signature": "clang::NestedNameSpecifier * (clang::UsingDecl::*)() const",
                    "name": "getQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationNameInfo () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclarationNameInfo",
                    "signature": "clang::DeclarationNameInfo (clang::UsingDecl::*)() const",
                    "name": "getNameInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UsingDecl::*)() const",
                    "name": "isAccessDeclaration",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UsingDecl::*)() const",
                    "name": "hasTypename",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingDecl",
                    "args": [
                        [
                            "bool",
                            "TN"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::UsingDecl::*)(bool)",
                    "name": "setTypename",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::UsingDecl::shadow_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::UsingDecl::shadow_iterator>",
                    "signature": "llvm::iterator_range<clang::UsingDecl::shadow_iterator> (clang::UsingDecl::*)() const",
                    "name": "shadows",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::UsingDecl::*)() const",
                    "name": "shadow_size",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingDecl",
                    "args": [
                        [
                            "clang::UsingShadowDecl *",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::UsingShadowDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::UsingDecl::*)(clang::UsingShadowDecl *)",
                    "name": "addShadowDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingDecl",
                    "args": [
                        [
                            "clang::UsingShadowDecl *",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::UsingShadowDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::UsingDecl::*)(clang::UsingShadowDecl *)",
                    "name": "removeShadowDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::UsingDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::UsingDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::UsingDecl *",
                    "signature": "clang::UsingDecl * (clang::UsingDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::UsingDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::UsingDecl *",
                    "signature": "const clang::UsingDecl * (clang::UsingDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "UsingDecl"
        },
        {
            "typename": "clang::UsingPackDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::UsingPackDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingPackDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamedDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NamedDecl *",
                    "signature": "clang::NamedDecl * (clang::UsingPackDecl::*)() const",
                    "name": "getInstantiatedFromUsingDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingPackDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::NamedDecl *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::NamedDecl *>",
                    "signature": "llvm::ArrayRef<clang::NamedDecl *> (clang::UsingPackDecl::*)() const",
                    "name": "expansions",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UsingPackDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::UsingPackDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingPackDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::UsingPackDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::UsingPackDecl *",
                    "signature": "clang::UsingPackDecl * (clang::UsingPackDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UsingPackDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::UsingPackDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::UsingPackDecl *",
                    "signature": "const clang::UsingPackDecl * (clang::UsingPackDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "UsingPackDecl"
        },
        {
            "typename": "clang::UnresolvedUsingValueDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::UnresolvedUsingValueDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnresolvedUsingValueDecl::*)() const",
                    "name": "getUsingLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::UnresolvedUsingValueDecl::*)(clang::SourceLocation)",
                    "name": "setUsingLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnresolvedUsingValueDecl::*)() const",
                    "name": "isAccessDeclaration",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "signature": "clang::NestedNameSpecifierLoc (clang::UnresolvedUsingValueDecl::*)() const",
                    "name": "getQualifierLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifier *",
                    "signature": "clang::NestedNameSpecifier * (clang::UnresolvedUsingValueDecl::*)() const",
                    "name": "getQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationNameInfo () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclarationNameInfo",
                    "signature": "clang::DeclarationNameInfo (clang::UnresolvedUsingValueDecl::*)() const",
                    "name": "getNameInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnresolvedUsingValueDecl::*)() const",
                    "name": "isPackExpansion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnresolvedUsingValueDecl::*)() const",
                    "name": "getEllipsisLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::UnresolvedUsingValueDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::UnresolvedUsingValueDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::UnresolvedUsingValueDecl *",
                    "signature": "clang::UnresolvedUsingValueDecl * (clang::UnresolvedUsingValueDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnresolvedUsingValueDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::UnresolvedUsingValueDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::UnresolvedUsingValueDecl *",
                    "signature": "const clang::UnresolvedUsingValueDecl * (clang::UnresolvedUsingValueDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::ValueDecl"
            ],
            "name": "UnresolvedUsingValueDecl"
        },
        {
            "typename": "clang::UnresolvedUsingTypenameDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::UnresolvedUsingTypenameDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::UnresolvedUsingTypenameDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnresolvedUsingTypenameDecl::*)() const",
                    "name": "getUsingLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedUsingTypenameDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnresolvedUsingTypenameDecl::*)() const",
                    "name": "getTypenameLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedUsingTypenameDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "signature": "clang::NestedNameSpecifierLoc (clang::UnresolvedUsingTypenameDecl::*)() const",
                    "name": "getQualifierLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnresolvedUsingTypenameDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifier *",
                    "signature": "clang::NestedNameSpecifier * (clang::UnresolvedUsingTypenameDecl::*)() const",
                    "name": "getQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedUsingTypenameDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationNameInfo () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclarationNameInfo",
                    "signature": "clang::DeclarationNameInfo (clang::UnresolvedUsingTypenameDecl::*)() const",
                    "name": "getNameInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedUsingTypenameDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnresolvedUsingTypenameDecl::*)() const",
                    "name": "isPackExpansion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedUsingTypenameDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnresolvedUsingTypenameDecl::*)() const",
                    "name": "getEllipsisLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnresolvedUsingTypenameDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::UnresolvedUsingTypenameDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::UnresolvedUsingTypenameDecl *",
                    "signature": "clang::UnresolvedUsingTypenameDecl * (clang::UnresolvedUsingTypenameDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnresolvedUsingTypenameDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::UnresolvedUsingTypenameDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::UnresolvedUsingTypenameDecl *",
                    "signature": "const clang::UnresolvedUsingTypenameDecl * (clang::UnresolvedUsingTypenameDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::TypeDecl"
            ],
            "name": "UnresolvedUsingTypenameDecl"
        },
        {
            "typename": "clang::StaticAssertDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::StaticAssertDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::StaticAssertDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::StaticAssertDecl::*)()",
                    "name": "getAssertExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::StaticAssertDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::StaticAssertDecl::*)() const",
                    "name": "getAssertExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::StaticAssertDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::StringLiteral *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::StringLiteral *",
                    "signature": "clang::StringLiteral * (clang::StaticAssertDecl::*)()",
                    "name": "getMessage",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::StaticAssertDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::StringLiteral *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::StringLiteral *",
                    "signature": "const clang::StringLiteral * (clang::StaticAssertDecl::*)() const",
                    "name": "getMessage",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::StaticAssertDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::StaticAssertDecl::*)() const",
                    "name": "isFailed",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StaticAssertDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::StaticAssertDecl::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::StaticAssertDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::StaticAssertDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Decl"
            ],
            "name": "StaticAssertDecl"
        },
        {
            "typename": "clang::BindingDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::BindingDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BindingDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::BindingDecl::*)() const",
                    "name": "getBinding",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::BindingDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::BindingDecl::*)() const",
                    "name": "getHoldingVar",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BindingDecl",
                    "args": [
                        [
                            "clang::QualType",
                            "DeclaredType"
                        ],
                        [
                            "clang::Expr *",
                            "Binding"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::QualType, clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::BindingDecl::*)(clang::QualType, clang::Expr *)",
                    "name": "setBinding",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::ValueDecl"
            ],
            "name": "BindingDecl"
        },
        {
            "typename": "clang::DecompositionDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::DecompositionDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::DecompositionDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::BindingDecl *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::BindingDecl *>",
                    "signature": "llvm::ArrayRef<clang::BindingDecl *> (clang::DecompositionDecl::*)() const",
                    "name": "bindings",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DecompositionDecl",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "os"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &) const",
                    "is_disabled": true,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::DecompositionDecl::*)(llvm::raw_ostream &) const",
                    "name": "printName",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::VarDecl"
            ],
            "name": "DecompositionDecl"
        },
        {
            "typename": "clang::MSPropertyDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::MSPropertyDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::MSPropertyDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::MSPropertyDecl::*)() const",
                    "name": "hasGetter",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MSPropertyDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::IdentifierInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::IdentifierInfo *",
                    "signature": "clang::IdentifierInfo * (clang::MSPropertyDecl::*)() const",
                    "name": "getGetterId",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSPropertyDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::MSPropertyDecl::*)() const",
                    "name": "hasSetter",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MSPropertyDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::IdentifierInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::IdentifierInfo *",
                    "signature": "clang::IdentifierInfo * (clang::MSPropertyDecl::*)() const",
                    "name": "getSetterId",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::DeclaratorDecl"
            ],
            "name": "MSPropertyDecl"
        },
        {
            "typename": "clang::TemplateDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::TemplateDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateParameterList *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateParameterList *",
                    "signature": "clang::TemplateParameterList * (clang::TemplateDecl::*)() const",
                    "name": "getTemplateParameters",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::TemplateDecl::*)() const",
                    "name": "getRequiresClause",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::TemplateDecl::*)() const",
                    "name": "getAssociatedConstraints",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamedDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NamedDecl *",
                    "signature": "clang::NamedDecl * (clang::TemplateDecl::*)() const",
                    "name": "getTemplatedDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::TemplateDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateDecl",
                    "args": [
                        [
                            "clang::NamedDecl *",
                            "templatedDecl"
                        ],
                        [
                            "clang::TemplateParameterList *",
                            "templateParams"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::NamedDecl *, clang::TemplateParameterList *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TemplateDecl::*)(clang::NamedDecl *, clang::TemplateParameterList *)",
                    "name": "init",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::NamedDecl"
            ],
            "name": "TemplateDecl"
        },
        {
            "typename": "clang::RedeclarableTemplateDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::RedeclarableTemplateDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::RedeclarableTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::RedeclarableTemplateDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::RedeclarableTemplateDecl *",
                    "signature": "clang::RedeclarableTemplateDecl * (clang::RedeclarableTemplateDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::RedeclarableTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::RedeclarableTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::RedeclarableTemplateDecl *",
                    "signature": "const clang::RedeclarableTemplateDecl * (clang::RedeclarableTemplateDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::RedeclarableTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::RedeclarableTemplateDecl::*)() const",
                    "name": "isMemberSpecialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RedeclarableTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::RedeclarableTemplateDecl::*)()",
                    "name": "setMemberSpecialization",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::RedeclarableTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::RedeclarableTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::RedeclarableTemplateDecl *",
                    "signature": "clang::RedeclarableTemplateDecl * (clang::RedeclarableTemplateDecl::*)() const",
                    "name": "getInstantiatedFromMemberTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::RedeclarableTemplateDecl",
                    "args": [
                        [
                            "clang::RedeclarableTemplateDecl *",
                            "TD"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::RedeclarableTemplateDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::RedeclarableTemplateDecl::*)(clang::RedeclarableTemplateDecl *)",
                    "name": "setInstantiatedFromMemberTemplate",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::TemplateDecl"
            ],
            "name": "RedeclarableTemplateDecl"
        },
        {
            "typename": "clang::FunctionTemplateDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::FunctionTemplateDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::FunctionTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::FunctionTemplateDecl::*)() const",
                    "name": "LoadLazySpecializations",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FunctionDecl *",
                    "signature": "clang::FunctionDecl * (clang::FunctionTemplateDecl::*)() const",
                    "name": "getTemplatedDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::FunctionTemplateDecl::*)() const",
                    "name": "isThisDeclarationADefinition",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionTemplateDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::FunctionTemplateDecl *",
                    "signature": "clang::FunctionTemplateDecl * (clang::FunctionTemplateDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FunctionTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::FunctionTemplateDecl *",
                    "signature": "const clang::FunctionTemplateDecl * (clang::FunctionTemplateDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionTemplateDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::FunctionTemplateDecl *",
                    "signature": "clang::FunctionTemplateDecl * (clang::FunctionTemplateDecl::*)()",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FunctionTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::FunctionTemplateDecl *",
                    "signature": "const clang::FunctionTemplateDecl * (clang::FunctionTemplateDecl::*)() const",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionTemplateDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::FunctionTemplateDecl *",
                    "signature": "clang::FunctionTemplateDecl * (clang::FunctionTemplateDecl::*)()",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FunctionTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::FunctionTemplateDecl *",
                    "signature": "const clang::FunctionTemplateDecl * (clang::FunctionTemplateDecl::*)() const",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FunctionTemplateDecl *",
                    "signature": "clang::FunctionTemplateDecl * (clang::FunctionTemplateDecl::*)() const",
                    "name": "getInstantiatedFromMemberTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionTemplateDecl::spec_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::RedeclarableTemplateDecl::SpecIterator<clang::FunctionTemplateSpecializationInfo, clang::RedeclarableTemplateDecl::SpecEntryTraits<clang::FunctionTemplateSpecializationInfo>, clang::FunctionDecl> >",
                    "signature": "llvm::iterator_range<clang::RedeclarableTemplateDecl::SpecIterator<clang::FunctionTemplateSpecializationInfo, clang::RedeclarableTemplateDecl::SpecEntryTraits<clang::FunctionTemplateSpecializationInfo>, clang::FunctionDecl> > (clang::FunctionTemplateDecl::*)() const",
                    "name": "specializations",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::TemplateArgument> ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::ArrayRef<clang::TemplateArgument>",
                    "signature": "llvm::ArrayRef<clang::TemplateArgument> (clang::FunctionTemplateDecl::*)()",
                    "name": "getInjectedTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionTemplateDecl",
                    "args": [
                        [
                            "clang::FunctionTemplateDecl *",
                            "Prev"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FunctionTemplateDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::FunctionTemplateDecl::*)(clang::FunctionTemplateDecl *)",
                    "name": "mergePrevDecl",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::RedeclarableTemplateDecl"
            ],
            "name": "FunctionTemplateDecl"
        },
        {
            "typename": "clang::TemplateTypeParmDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::TemplateTypeParmDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::TemplateTypeParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TemplateTypeParmDecl::*)() const",
                    "name": "wasDeclaredWithTypename",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTypeParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TemplateTypeParmDecl::DefArgStorage &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::DefaultArgStorage<clang::TemplateTypeParmDecl, clang::TypeSourceInfo *> &",
                    "signature": "const clang::DefaultArgStorage<clang::TemplateTypeParmDecl, clang::TypeSourceInfo *> & (clang::TemplateTypeParmDecl::*)() const",
                    "name": "getDefaultArgStorage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTypeParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TemplateTypeParmDecl::*)() const",
                    "name": "hasDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTypeParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::TemplateTypeParmDecl::*)() const",
                    "name": "getDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TemplateTypeParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::TemplateTypeParmDecl::*)() const",
                    "name": "getDefaultArgumentInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTypeParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::TemplateTypeParmDecl::*)() const",
                    "name": "getDefaultArgumentLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTypeParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TemplateTypeParmDecl::*)() const",
                    "name": "defaultArgumentWasInherited",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTypeParmDecl",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "DefArg"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TemplateTypeParmDecl::*)(clang::TypeSourceInfo *)",
                    "name": "setDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTypeParmDecl",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "clang::TemplateTypeParmDecl *",
                            "Prev"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &, clang::TemplateTypeParmDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TemplateTypeParmDecl::*)(const clang::ASTContext &, clang::TemplateTypeParmDecl *)",
                    "name": "setInheritedDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTypeParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TemplateTypeParmDecl::*)()",
                    "name": "removeDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTypeParmDecl",
                    "args": [
                        [
                            "bool",
                            "withTypename"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TemplateTypeParmDecl::*)(bool)",
                    "name": "setDeclaredWithTypename",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTypeParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::TemplateTypeParmDecl::*)() const",
                    "name": "getDepth",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTypeParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::TemplateTypeParmDecl::*)() const",
                    "name": "getIndex",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTypeParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TemplateTypeParmDecl::*)() const",
                    "name": "isParameterPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTypeParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::TemplateTypeParmDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::TypeDecl"
            ],
            "name": "TemplateTypeParmDecl"
        },
        {
            "typename": "clang::NonTypeTemplateParmDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::NonTypeTemplateParmDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::NonTypeTemplateParmDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::NonTypeTemplateParmDecl::DefArgStorage &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::DefaultArgStorage<clang::NonTypeTemplateParmDecl, clang::Expr *> &",
                    "signature": "const clang::DefaultArgStorage<clang::NonTypeTemplateParmDecl, clang::Expr *> & (clang::NonTypeTemplateParmDecl::*)() const",
                    "name": "getDefaultArgStorage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NonTypeTemplateParmDecl::*)() const",
                    "name": "hasDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::NonTypeTemplateParmDecl::*)() const",
                    "name": "getDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::NonTypeTemplateParmDecl::*)() const",
                    "name": "getDefaultArgumentLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NonTypeTemplateParmDecl::*)() const",
                    "name": "defaultArgumentWasInherited",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "args": [
                        [
                            "clang::Expr *",
                            "DefArg"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::NonTypeTemplateParmDecl::*)(clang::Expr *)",
                    "name": "setDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "clang::NonTypeTemplateParmDecl *",
                            "Parm"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &, clang::NonTypeTemplateParmDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::NonTypeTemplateParmDecl::*)(const clang::ASTContext &, clang::NonTypeTemplateParmDecl *)",
                    "name": "setInheritedDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::NonTypeTemplateParmDecl::*)()",
                    "name": "removeDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NonTypeTemplateParmDecl::*)() const",
                    "name": "isParameterPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NonTypeTemplateParmDecl::*)() const",
                    "name": "isPackExpansion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::NonTypeTemplateParmDecl::*)() const",
                    "name": "isExpandedParameterPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::NonTypeTemplateParmDecl::*)() const",
                    "name": "getNumExpansionTypes",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::NonTypeTemplateParmDecl::*)(unsigned int) const",
                    "name": "getExpansionType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::NonTypeTemplateParmDecl",
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::NonTypeTemplateParmDecl::*)(unsigned int) const",
                    "name": "getExpansionTypeSourceInfo",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::DeclaratorDecl"
            ],
            "name": "NonTypeTemplateParmDecl"
        },
        {
            "typename": "clang::TemplateTemplateParmDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::TemplateTemplateParmDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::TemplateTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TemplateTemplateParmDecl::*)() const",
                    "name": "isParameterPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TemplateTemplateParmDecl::*)() const",
                    "name": "isPackExpansion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TemplateTemplateParmDecl::*)() const",
                    "name": "isExpandedParameterPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::TemplateTemplateParmDecl::*)() const",
                    "name": "getNumExpansionTemplateParameters",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TemplateTemplateParmDecl",
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateParameterList *(unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateParameterList *",
                    "signature": "clang::TemplateParameterList * (clang::TemplateTemplateParmDecl::*)(unsigned int) const",
                    "name": "getExpansionTemplateParameters",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TemplateTemplateParmDecl::DefArgStorage &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::DefaultArgStorage<clang::TemplateTemplateParmDecl, clang::TemplateArgumentLoc *> &",
                    "signature": "const clang::DefaultArgStorage<clang::TemplateTemplateParmDecl, clang::TemplateArgumentLoc *> & (clang::TemplateTemplateParmDecl::*)() const",
                    "name": "getDefaultArgStorage",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TemplateTemplateParmDecl::*)() const",
                    "name": "hasDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TemplateArgumentLoc &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::TemplateArgumentLoc &",
                    "signature": "const clang::TemplateArgumentLoc & (clang::TemplateTemplateParmDecl::*)() const",
                    "name": "getDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::TemplateTemplateParmDecl::*)() const",
                    "name": "getDefaultArgumentLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TemplateTemplateParmDecl::*)() const",
                    "name": "defaultArgumentWasInherited",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTemplateParmDecl",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "const clang::TemplateArgumentLoc &",
                            "DefArg"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &, const clang::TemplateArgumentLoc &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TemplateTemplateParmDecl::*)(const clang::ASTContext &, const clang::TemplateArgumentLoc &)",
                    "name": "setDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTemplateParmDecl",
                    "args": [
                        [
                            "const clang::ASTContext &",
                            "C"
                        ],
                        [
                            "clang::TemplateTemplateParmDecl *",
                            "Prev"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ASTContext &, clang::TemplateTemplateParmDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TemplateTemplateParmDecl::*)(const clang::ASTContext &, clang::TemplateTemplateParmDecl *)",
                    "name": "setInheritedDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::TemplateTemplateParmDecl::*)()",
                    "name": "removeDefaultArgument",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TemplateTemplateParmDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::TemplateTemplateParmDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::TemplateDecl"
            ],
            "name": "TemplateTemplateParmDecl"
        },
        {
            "typename": "clang::BuiltinTemplateDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::BuiltinTemplateDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::BuiltinTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::BuiltinTemplateDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::BuiltinTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::BuiltinTemplateKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::BuiltinTemplateKind",
                    "signature": "clang::BuiltinTemplateKind (clang::BuiltinTemplateDecl::*)() const",
                    "name": "getBuiltinTemplateKind",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::TemplateDecl"
            ],
            "name": "BuiltinTemplateDecl"
        },
        {
            "typename": "clang::ClassTemplateSpecializationDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::ClassTemplateSpecializationDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "bool",
                            "Qualified"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "is_disabled": true,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "name": "getNameForDiagnostic",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ClassTemplateSpecializationDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::ClassTemplateSpecializationDecl *",
                    "signature": "clang::ClassTemplateSpecializationDecl * (clang::ClassTemplateSpecializationDecl::*)()",
                    "name": "getMostRecentDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ClassTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ClassTemplateDecl *",
                    "signature": "clang::ClassTemplateDecl * (clang::ClassTemplateSpecializationDecl::*)() const",
                    "name": "getSpecializedTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TemplateArgumentList &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::TemplateArgumentList &",
                    "signature": "const clang::TemplateArgumentList & (clang::ClassTemplateSpecializationDecl::*)() const",
                    "name": "getTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateSpecializationKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateSpecializationKind",
                    "signature": "clang::TemplateSpecializationKind (clang::ClassTemplateSpecializationDecl::*)() const",
                    "name": "getSpecializationKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ClassTemplateSpecializationDecl::*)() const",
                    "name": "isExplicitSpecialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ClassTemplateSpecializationDecl::*)() const",
                    "name": "isExplicitInstantiationOrSpecialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TemplateSpecializationKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(clang::TemplateSpecializationKind)",
                    "name": "setSpecializationKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ClassTemplateSpecializationDecl::*)() const",
                    "name": "getPointOfInstantiation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(clang::SourceLocation)",
                    "name": "setPointOfInstantiation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::PointerUnion<ClassTemplateDecl *, ClassTemplatePartialSpecializationDecl *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::PointerUnion<clang::ClassTemplateDecl *, clang::ClassTemplatePartialSpecializationDecl *>",
                    "signature": "llvm::PointerUnion<clang::ClassTemplateDecl *, clang::ClassTemplatePartialSpecializationDecl *> (clang::ClassTemplateSpecializationDecl::*)() const",
                    "name": "getInstantiatedFrom",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::PointerUnion<ClassTemplateDecl *, ClassTemplatePartialSpecializationDecl *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::PointerUnion<clang::ClassTemplateDecl *, clang::ClassTemplatePartialSpecializationDecl *>",
                    "signature": "llvm::PointerUnion<clang::ClassTemplateDecl *, clang::ClassTemplatePartialSpecializationDecl *> (clang::ClassTemplateSpecializationDecl::*)() const",
                    "name": "getSpecializedTemplateOrPartial",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TemplateArgumentList &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::TemplateArgumentList &",
                    "signature": "const clang::TemplateArgumentList & (clang::ClassTemplateSpecializationDecl::*)() const",
                    "name": "getTemplateInstantiationArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [
                        [
                            "clang::ClassTemplatePartialSpecializationDecl *",
                            "PartialSpec"
                        ],
                        [
                            "const clang::TemplateArgumentList *",
                            "TemplateArgs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ClassTemplatePartialSpecializationDecl *, const clang::TemplateArgumentList *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(clang::ClassTemplatePartialSpecializationDecl *, const clang::TemplateArgumentList *)",
                    "name": "setInstantiationOf",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [
                        [
                            "clang::ClassTemplateDecl *",
                            "TemplDecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ClassTemplateDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(clang::ClassTemplateDecl *)",
                    "name": "setInstantiationOf",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(clang::TypeSourceInfo *)",
                    "name": "setTypeAsWritten",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::ClassTemplateSpecializationDecl::*)() const",
                    "name": "getTypeAsWritten",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ClassTemplateSpecializationDecl::*)() const",
                    "name": "getExternLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(clang::SourceLocation)",
                    "name": "setExternLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(clang::SourceLocation)",
                    "name": "setTemplateKeywordLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ClassTemplateSpecializationDecl::*)() const",
                    "name": "getTemplateKeywordLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::ClassTemplateSpecializationDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateSpecializationDecl",
                    "args": [
                        [
                            "llvm::FoldingSetNodeID &",
                            "ID"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::FoldingSetNodeID &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::ClassTemplateSpecializationDecl::*)(llvm::FoldingSetNodeID &) const",
                    "name": "Profile",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::CXXRecordDecl"
            ],
            "name": "ClassTemplateSpecializationDecl"
        },
        {
            "typename": "clang::ClassTemplatePartialSpecializationDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::ClassTemplatePartialSpecializationDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ClassTemplatePartialSpecializationDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::ClassTemplatePartialSpecializationDecl *",
                    "signature": "clang::ClassTemplatePartialSpecializationDecl * (clang::ClassTemplatePartialSpecializationDecl::*)()",
                    "name": "getMostRecentDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateParameterList *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateParameterList *",
                    "signature": "clang::TemplateParameterList * (clang::ClassTemplatePartialSpecializationDecl::*)() const",
                    "name": "getTemplateParameters",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ASTTemplateArgumentListInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ASTTemplateArgumentListInfo *",
                    "signature": "const clang::ASTTemplateArgumentListInfo * (clang::ClassTemplatePartialSpecializationDecl::*)() const",
                    "name": "getTemplateArgsAsWritten",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ClassTemplatePartialSpecializationDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ClassTemplatePartialSpecializationDecl *",
                    "signature": "clang::ClassTemplatePartialSpecializationDecl * (clang::ClassTemplatePartialSpecializationDecl::*)() const",
                    "name": "getInstantiatedFromMember",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ClassTemplatePartialSpecializationDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ClassTemplatePartialSpecializationDecl *",
                    "signature": "clang::ClassTemplatePartialSpecializationDecl * (clang::ClassTemplatePartialSpecializationDecl::*)() const",
                    "name": "getInstantiatedFromMemberTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "args": [
                        [
                            "clang::ClassTemplatePartialSpecializationDecl *",
                            "PartialSpec"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ClassTemplatePartialSpecializationDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ClassTemplatePartialSpecializationDecl::*)(clang::ClassTemplatePartialSpecializationDecl *)",
                    "name": "setInstantiatedFromMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::ClassTemplatePartialSpecializationDecl::*)()",
                    "name": "isMemberSpecialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ClassTemplatePartialSpecializationDecl::*)()",
                    "name": "setMemberSpecialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplatePartialSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ClassTemplatePartialSpecializationDecl::*)() const",
                    "name": "getInjectedSpecializationType",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::ClassTemplateSpecializationDecl"
            ],
            "name": "ClassTemplatePartialSpecializationDecl"
        },
        {
            "typename": "clang::ClassTemplateDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::ClassTemplateDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::ClassTemplateDecl::*)() const",
                    "name": "LoadLazySpecializations",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXRecordDecl *",
                    "signature": "clang::CXXRecordDecl * (clang::ClassTemplateDecl::*)() const",
                    "name": "getTemplatedDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ClassTemplateDecl::*)() const",
                    "name": "isThisDeclarationADefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateDecl",
                    "args": [
                        [
                            "clang::ClassTemplateSpecializationDecl *",
                            "D"
                        ],
                        [
                            "void *",
                            "InsertPos"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ClassTemplateSpecializationDecl *, void *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ClassTemplateDecl::*)(clang::ClassTemplateSpecializationDecl *, void *)",
                    "name": "AddSpecialization",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ClassTemplateDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::ClassTemplateDecl *",
                    "signature": "clang::ClassTemplateDecl * (clang::ClassTemplateDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ClassTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::ClassTemplateDecl *",
                    "signature": "const clang::ClassTemplateDecl * (clang::ClassTemplateDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ClassTemplateDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::ClassTemplateDecl *",
                    "signature": "clang::ClassTemplateDecl * (clang::ClassTemplateDecl::*)()",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ClassTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::ClassTemplateDecl *",
                    "signature": "const clang::ClassTemplateDecl * (clang::ClassTemplateDecl::*)() const",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ClassTemplateDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::ClassTemplateDecl *",
                    "signature": "clang::ClassTemplateDecl * (clang::ClassTemplateDecl::*)()",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ClassTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::ClassTemplateDecl *",
                    "signature": "const clang::ClassTemplateDecl * (clang::ClassTemplateDecl::*)() const",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ClassTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ClassTemplateDecl *",
                    "signature": "clang::ClassTemplateDecl * (clang::ClassTemplateDecl::*)() const",
                    "name": "getInstantiatedFromMemberTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateDecl",
                    "args": [
                        [
                            "clang::ClassTemplatePartialSpecializationDecl *",
                            "D"
                        ],
                        [
                            "void *",
                            "InsertPos"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::ClassTemplatePartialSpecializationDecl *, void *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ClassTemplateDecl::*)(clang::ClassTemplatePartialSpecializationDecl *, void *)",
                    "name": "AddPartialSpecialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateDecl",
                    "args": [
                        [
                            "llvm::SmallVectorImpl<clang::ClassTemplatePartialSpecializationDecl *> &",
                            "PS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (SmallVectorImpl<clang::ClassTemplatePartialSpecializationDecl *> &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::ClassTemplateDecl::*)(llvm::SmallVectorImpl<clang::ClassTemplatePartialSpecializationDecl *> &)",
                    "name": "getPartialSpecializations",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplateDecl",
                    "args": [
                        [
                            "clang::QualType",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::ClassTemplatePartialSpecializationDecl *(clang::QualType)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::ClassTemplatePartialSpecializationDecl *",
                    "signature": "clang::ClassTemplatePartialSpecializationDecl * (clang::ClassTemplateDecl::*)(clang::QualType)",
                    "name": "findPartialSpecialization",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassTemplateDecl",
                    "args": [
                        [
                            "clang::ClassTemplatePartialSpecializationDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::ClassTemplatePartialSpecializationDecl *(clang::ClassTemplatePartialSpecializationDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::ClassTemplatePartialSpecializationDecl *",
                    "signature": "clang::ClassTemplatePartialSpecializationDecl * (clang::ClassTemplateDecl::*)(clang::ClassTemplatePartialSpecializationDecl *)",
                    "name": "findPartialSpecInstantiatedFromMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ClassTemplateDecl::*)()",
                    "name": "getInjectedClassNameSpecialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ClassTemplateDecl::spec_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::RedeclarableTemplateDecl::SpecIterator<clang::ClassTemplateSpecializationDecl, clang::RedeclarableTemplateDecl::SpecEntryTraits<clang::ClassTemplateSpecializationDecl>, clang::ClassTemplateSpecializationDecl> >",
                    "signature": "llvm::iterator_range<clang::RedeclarableTemplateDecl::SpecIterator<clang::ClassTemplateSpecializationDecl, clang::RedeclarableTemplateDecl::SpecEntryTraits<clang::ClassTemplateSpecializationDecl>, clang::ClassTemplateSpecializationDecl> > (clang::ClassTemplateDecl::*)() const",
                    "name": "specializations",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::RedeclarableTemplateDecl"
            ],
            "name": "ClassTemplateDecl"
        },
        {
            "typename": "clang::FriendTemplateDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::FriendTemplateDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FriendTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::FriendTemplateDecl::*)() const",
                    "name": "getFriendType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FriendTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamedDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NamedDecl *",
                    "signature": "clang::NamedDecl * (clang::FriendTemplateDecl::*)() const",
                    "name": "getFriendDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FriendTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::FriendTemplateDecl::*)() const",
                    "name": "getFriendLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FriendTemplateDecl",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateParameterList *(unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateParameterList *",
                    "signature": "clang::TemplateParameterList * (clang::FriendTemplateDecl::*)(unsigned int) const",
                    "name": "getTemplateParameterList",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FriendTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::FriendTemplateDecl::*)() const",
                    "name": "getNumTemplateParameters",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Decl"
            ],
            "name": "FriendTemplateDecl"
        },
        {
            "typename": "clang::TypeAliasTemplateDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::TypeAliasTemplateDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TypeAliasTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeAliasDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeAliasDecl *",
                    "signature": "clang::TypeAliasDecl * (clang::TypeAliasTemplateDecl::*)() const",
                    "name": "getTemplatedDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TypeAliasTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeAliasTemplateDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::TypeAliasTemplateDecl *",
                    "signature": "clang::TypeAliasTemplateDecl * (clang::TypeAliasTemplateDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TypeAliasTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TypeAliasTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::TypeAliasTemplateDecl *",
                    "signature": "const clang::TypeAliasTemplateDecl * (clang::TypeAliasTemplateDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TypeAliasTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeAliasTemplateDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::TypeAliasTemplateDecl *",
                    "signature": "clang::TypeAliasTemplateDecl * (clang::TypeAliasTemplateDecl::*)()",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TypeAliasTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TypeAliasTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::TypeAliasTemplateDecl *",
                    "signature": "const clang::TypeAliasTemplateDecl * (clang::TypeAliasTemplateDecl::*)() const",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TypeAliasTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeAliasTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeAliasTemplateDecl *",
                    "signature": "clang::TypeAliasTemplateDecl * (clang::TypeAliasTemplateDecl::*)() const",
                    "name": "getInstantiatedFromMemberTemplate",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::RedeclarableTemplateDecl"
            ],
            "name": "TypeAliasTemplateDecl"
        },
        {
            "typename": "clang::ClassScopeFunctionSpecializationDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::ClassScopeFunctionSpecializationDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ClassScopeFunctionSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXMethodDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXMethodDecl *",
                    "signature": "clang::CXXMethodDecl * (clang::ClassScopeFunctionSpecializationDecl::*)() const",
                    "name": "getSpecialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassScopeFunctionSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ClassScopeFunctionSpecializationDecl::*)() const",
                    "name": "hasExplicitTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ClassScopeFunctionSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TemplateArgumentListInfo &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::TemplateArgumentListInfo &",
                    "signature": "const clang::TemplateArgumentListInfo & (clang::ClassScopeFunctionSpecializationDecl::*)() const",
                    "name": "templateArgs",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Decl"
            ],
            "name": "ClassScopeFunctionSpecializationDecl"
        },
        {
            "typename": "clang::VarTemplateSpecializationDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::VarTemplateSpecializationDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [
                        [
                            "llvm::raw_ostream &",
                            "OS"
                        ],
                        [
                            "const clang::PrintingPolicy &",
                            "Policy"
                        ],
                        [
                            "bool",
                            "Qualified"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "is_disabled": true,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(llvm::raw_ostream &, const clang::PrintingPolicy &, bool) const",
                    "name": "getNameForDiagnostic",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarTemplateSpecializationDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::VarTemplateSpecializationDecl *",
                    "signature": "clang::VarTemplateSpecializationDecl * (clang::VarTemplateSpecializationDecl::*)()",
                    "name": "getMostRecentDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::VarTemplateDecl *",
                    "signature": "clang::VarTemplateDecl * (clang::VarTemplateSpecializationDecl::*)() const",
                    "name": "getSpecializedTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TemplateArgumentList &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::TemplateArgumentList &",
                    "signature": "const clang::TemplateArgumentList & (clang::VarTemplateSpecializationDecl::*)() const",
                    "name": "getTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [
                        [
                            "const clang::TemplateArgumentListInfo &",
                            "ArgsInfo"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::TemplateArgumentListInfo &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(const clang::TemplateArgumentListInfo &)",
                    "name": "setTemplateArgsInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TemplateArgumentListInfo &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::TemplateArgumentListInfo &",
                    "signature": "const clang::TemplateArgumentListInfo & (clang::VarTemplateSpecializationDecl::*)() const",
                    "name": "getTemplateArgsInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateSpecializationKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateSpecializationKind",
                    "signature": "clang::TemplateSpecializationKind (clang::VarTemplateSpecializationDecl::*)() const",
                    "name": "getSpecializationKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarTemplateSpecializationDecl::*)() const",
                    "name": "isExplicitSpecialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarTemplateSpecializationDecl::*)() const",
                    "name": "isExplicitInstantiationOrSpecialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [
                        [
                            "clang::TemplateSpecializationKind",
                            "TSK"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TemplateSpecializationKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(clang::TemplateSpecializationKind)",
                    "name": "setSpecializationKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::VarTemplateSpecializationDecl::*)() const",
                    "name": "getPointOfInstantiation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(clang::SourceLocation)",
                    "name": "setPointOfInstantiation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)()",
                    "name": "setCompleteDefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::PointerUnion<VarTemplateDecl *, VarTemplatePartialSpecializationDecl *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::PointerUnion<clang::VarTemplateDecl *, clang::VarTemplatePartialSpecializationDecl *>",
                    "signature": "llvm::PointerUnion<clang::VarTemplateDecl *, clang::VarTemplatePartialSpecializationDecl *> (clang::VarTemplateSpecializationDecl::*)() const",
                    "name": "getInstantiatedFrom",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::PointerUnion<VarTemplateDecl *, VarTemplatePartialSpecializationDecl *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::PointerUnion<clang::VarTemplateDecl *, clang::VarTemplatePartialSpecializationDecl *>",
                    "signature": "llvm::PointerUnion<clang::VarTemplateDecl *, clang::VarTemplatePartialSpecializationDecl *> (clang::VarTemplateSpecializationDecl::*)() const",
                    "name": "getSpecializedTemplateOrPartial",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TemplateArgumentList &() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::TemplateArgumentList &",
                    "signature": "const clang::TemplateArgumentList & (clang::VarTemplateSpecializationDecl::*)() const",
                    "name": "getTemplateInstantiationArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [
                        [
                            "clang::VarTemplatePartialSpecializationDecl *",
                            "PartialSpec"
                        ],
                        [
                            "const clang::TemplateArgumentList *",
                            "TemplateArgs"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::VarTemplatePartialSpecializationDecl *, const clang::TemplateArgumentList *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(clang::VarTemplatePartialSpecializationDecl *, const clang::TemplateArgumentList *)",
                    "name": "setInstantiationOf",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [
                        [
                            "clang::VarTemplateDecl *",
                            "TemplDecl"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::VarTemplateDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(clang::VarTemplateDecl *)",
                    "name": "setInstantiationOf",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(clang::TypeSourceInfo *)",
                    "name": "setTypeAsWritten",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::VarTemplateSpecializationDecl::*)() const",
                    "name": "getTypeAsWritten",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::VarTemplateSpecializationDecl::*)() const",
                    "name": "getExternLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(clang::SourceLocation)",
                    "name": "setExternLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(clang::SourceLocation)",
                    "name": "setTemplateKeywordLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::VarTemplateSpecializationDecl::*)() const",
                    "name": "getTemplateKeywordLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateSpecializationDecl",
                    "args": [
                        [
                            "llvm::FoldingSetNodeID &",
                            "ID"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::FoldingSetNodeID &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplateSpecializationDecl::*)(llvm::FoldingSetNodeID &) const",
                    "name": "Profile",
                    "is_overload": true
                }
            ],
            "node": true,
            "supers": [
                "clang::VarDecl"
            ],
            "name": "VarTemplateSpecializationDecl"
        },
        {
            "typename": "clang::VarTemplatePartialSpecializationDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::VarTemplatePartialSpecializationDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplatePartialSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarTemplatePartialSpecializationDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::VarTemplatePartialSpecializationDecl *",
                    "signature": "clang::VarTemplatePartialSpecializationDecl * (clang::VarTemplatePartialSpecializationDecl::*)()",
                    "name": "getMostRecentDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplatePartialSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateParameterList *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateParameterList *",
                    "signature": "clang::TemplateParameterList * (clang::VarTemplatePartialSpecializationDecl::*)() const",
                    "name": "getTemplateParameters",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplatePartialSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ASTTemplateArgumentListInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ASTTemplateArgumentListInfo *",
                    "signature": "const clang::ASTTemplateArgumentListInfo * (clang::VarTemplatePartialSpecializationDecl::*)() const",
                    "name": "getTemplateArgsAsWritten",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplatePartialSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarTemplatePartialSpecializationDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::VarTemplatePartialSpecializationDecl *",
                    "signature": "clang::VarTemplatePartialSpecializationDecl * (clang::VarTemplatePartialSpecializationDecl::*)() const",
                    "name": "getInstantiatedFromMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplatePartialSpecializationDecl",
                    "args": [
                        [
                            "clang::VarTemplatePartialSpecializationDecl *",
                            "PartialSpec"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::VarTemplatePartialSpecializationDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplatePartialSpecializationDecl::*)(clang::VarTemplatePartialSpecializationDecl *)",
                    "name": "setInstantiatedFromMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplatePartialSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "bool",
                    "signature": "bool (clang::VarTemplatePartialSpecializationDecl::*)()",
                    "name": "isMemberSpecialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplatePartialSpecializationDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void ()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplatePartialSpecializationDecl::*)()",
                    "name": "setMemberSpecialization",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::VarTemplateSpecializationDecl"
            ],
            "name": "VarTemplatePartialSpecializationDecl"
        },
        {
            "typename": "clang::VarTemplateDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::VarTemplateDecl>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::VarTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "void () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplateDecl::*)() const",
                    "name": "LoadLazySpecializations",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::VarTemplateDecl::*)() const",
                    "name": "getTemplatedDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::VarTemplateDecl::*)() const",
                    "name": "isThisDeclarationADefinition",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarTemplateDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::VarTemplateDecl *",
                    "signature": "clang::VarTemplateDecl * (clang::VarTemplateDecl::*)()",
                    "name": "getDefinition",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateDecl",
                    "args": [
                        [
                            "clang::VarTemplateSpecializationDecl *",
                            "D"
                        ],
                        [
                            "void *",
                            "InsertPos"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::VarTemplateSpecializationDecl *, void *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplateDecl::*)(clang::VarTemplateSpecializationDecl *, void *)",
                    "name": "AddSpecialization",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarTemplateDecl *()",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::VarTemplateDecl *",
                    "signature": "clang::VarTemplateDecl * (clang::VarTemplateDecl::*)()",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::VarTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::VarTemplateDecl *",
                    "signature": "const clang::VarTemplateDecl * (clang::VarTemplateDecl::*)() const",
                    "name": "getCanonicalDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarTemplateDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::VarTemplateDecl *",
                    "signature": "clang::VarTemplateDecl * (clang::VarTemplateDecl::*)()",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::VarTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::VarTemplateDecl *",
                    "signature": "const clang::VarTemplateDecl * (clang::VarTemplateDecl::*)() const",
                    "name": "getPreviousDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarTemplateDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::VarTemplateDecl *",
                    "signature": "clang::VarTemplateDecl * (clang::VarTemplateDecl::*)()",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::VarTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::VarTemplateDecl *",
                    "signature": "const clang::VarTemplateDecl * (clang::VarTemplateDecl::*)() const",
                    "name": "getMostRecentDecl",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarTemplateDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::VarTemplateDecl *",
                    "signature": "clang::VarTemplateDecl * (clang::VarTemplateDecl::*)() const",
                    "name": "getInstantiatedFromMemberTemplate",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateDecl",
                    "args": [
                        [
                            "clang::VarTemplatePartialSpecializationDecl *",
                            "D"
                        ],
                        [
                            "void *",
                            "InsertPos"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::VarTemplatePartialSpecializationDecl *, void *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplateDecl::*)(clang::VarTemplatePartialSpecializationDecl *, void *)",
                    "name": "AddPartialSpecialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateDecl",
                    "args": [
                        [
                            "llvm::SmallVectorImpl<clang::VarTemplatePartialSpecializationDecl *> &",
                            "PS"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (SmallVectorImpl<clang::VarTemplatePartialSpecializationDecl *> &)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::VarTemplateDecl::*)(llvm::SmallVectorImpl<clang::VarTemplatePartialSpecializationDecl *> &)",
                    "name": "getPartialSpecializations",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::VarTemplateDecl",
                    "args": [
                        [
                            "clang::VarTemplatePartialSpecializationDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::VarTemplatePartialSpecializationDecl *(clang::VarTemplatePartialSpecializationDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::VarTemplatePartialSpecializationDecl *",
                    "signature": "clang::VarTemplatePartialSpecializationDecl * (clang::VarTemplateDecl::*)(clang::VarTemplatePartialSpecializationDecl *)",
                    "name": "findPartialSpecInstantiatedFromMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::VarTemplateDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarTemplateDecl::spec_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::RedeclarableTemplateDecl::SpecIterator<clang::VarTemplateSpecializationDecl, clang::RedeclarableTemplateDecl::SpecEntryTraits<clang::VarTemplateSpecializationDecl>, clang::VarTemplateSpecializationDecl> >",
                    "signature": "llvm::iterator_range<clang::RedeclarableTemplateDecl::SpecIterator<clang::VarTemplateSpecializationDecl, clang::RedeclarableTemplateDecl::SpecEntryTraits<clang::VarTemplateSpecializationDecl>, clang::VarTemplateSpecializationDecl> > (clang::VarTemplateDecl::*)() const",
                    "name": "specializations",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::RedeclarableTemplateDecl"
            ],
            "name": "VarTemplateDecl"
        },
        {
            "typename": "clang::CXXOperatorCallExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXOperatorCallExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXOperatorCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::OverloadedOperatorKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::OverloadedOperatorKind",
                    "signature": "clang::OverloadedOperatorKind (clang::CXXOperatorCallExpr::*)() const",
                    "name": "getOperator",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXOperatorCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXOperatorCallExpr::*)() const",
                    "name": "isAssignmentOp",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXOperatorCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXOperatorCallExpr::*)() const",
                    "name": "isInfixBinaryOp",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXOperatorCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXOperatorCallExpr::*)() const",
                    "name": "getOperatorLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXOperatorCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXOperatorCallExpr::*)() const",
                    "name": "getExprLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXOperatorCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXOperatorCallExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXOperatorCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXOperatorCallExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXOperatorCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::CXXOperatorCallExpr::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXOperatorCallExpr",
                    "args": [
                        [
                            "clang::FPOptions",
                            "F"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FPOptions)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXOperatorCallExpr::*)(clang::FPOptions)",
                    "name": "setFPFeatures",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXOperatorCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FPOptions () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FPOptions",
                    "signature": "clang::FPOptions (clang::CXXOperatorCallExpr::*)() const",
                    "name": "getFPFeatures",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXOperatorCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXOperatorCallExpr::*)() const",
                    "name": "isFPContractableWithinStatement",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::CallExpr"
            ],
            "name": "CXXOperatorCallExpr"
        },
        {
            "typename": "clang::CXXMemberCallExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXMemberCallExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXMemberCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXMemberCallExpr::*)() const",
                    "name": "getImplicitObjectArgument",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXMemberCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXMethodDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXMethodDecl *",
                    "signature": "clang::CXXMethodDecl * (clang::CXXMemberCallExpr::*)() const",
                    "name": "getMethodDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXMemberCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXRecordDecl *",
                    "signature": "clang::CXXRecordDecl * (clang::CXXMemberCallExpr::*)() const",
                    "name": "getRecordDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXMemberCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXMemberCallExpr::*)() const",
                    "name": "getExprLoc",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::CallExpr"
            ],
            "name": "CXXMemberCallExpr"
        },
        {
            "typename": "clang::CUDAKernelCallExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CUDAKernelCallExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CUDAKernelCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CallExpr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CallExpr *",
                    "signature": "const clang::CallExpr * (clang::CUDAKernelCallExpr::*)() const",
                    "name": "getConfig",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CUDAKernelCallExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CallExpr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CallExpr *",
                    "signature": "clang::CallExpr * (clang::CUDAKernelCallExpr::*)()",
                    "name": "getConfig",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CUDAKernelCallExpr",
                    "args": [
                        [
                            "clang::CallExpr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CallExpr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CUDAKernelCallExpr::*)(clang::CallExpr *)",
                    "name": "setConfig",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::CallExpr"
            ],
            "name": "CUDAKernelCallExpr"
        },
        {
            "typename": "clang::CXXNamedCastExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXNamedCastExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXNamedCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const char *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const char *",
                    "signature": "const char * (clang::CXXNamedCastExpr::*)() const",
                    "name": "getCastName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNamedCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXNamedCastExpr::*)() const",
                    "name": "getOperatorLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNamedCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXNamedCastExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNamedCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXNamedCastExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNamedCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXNamedCastExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNamedCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::CXXNamedCastExpr::*)() const",
                    "name": "getAngleBrackets",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::ExplicitCastExpr"
            ],
            "name": "CXXNamedCastExpr"
        },
        {
            "typename": "clang::CXXStaticCastExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXStaticCastExpr>::type",
            "methods": [],
            "node": true,
            "supers": [
                "clang::CXXNamedCastExpr"
            ],
            "name": "CXXStaticCastExpr"
        },
        {
            "typename": "clang::CXXDynamicCastExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXDynamicCastExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXDynamicCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXDynamicCastExpr::*)() const",
                    "name": "isAlwaysNull",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::CXXNamedCastExpr"
            ],
            "name": "CXXDynamicCastExpr"
        },
        {
            "typename": "clang::CXXReinterpretCastExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXReinterpretCastExpr>::type",
            "methods": [],
            "node": true,
            "supers": [
                "clang::CXXNamedCastExpr"
            ],
            "name": "CXXReinterpretCastExpr"
        },
        {
            "typename": "clang::CXXConstCastExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXConstCastExpr>::type",
            "methods": [],
            "node": true,
            "supers": [
                "clang::CXXNamedCastExpr"
            ],
            "name": "CXXConstCastExpr"
        },
        {
            "typename": "clang::UserDefinedLiteral",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::UserDefinedLiteral>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::UserDefinedLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::UserDefinedLiteral::LiteralOperatorKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::UserDefinedLiteral::LiteralOperatorKind",
                    "signature": "clang::UserDefinedLiteral::LiteralOperatorKind (clang::UserDefinedLiteral::*)() const",
                    "name": "getLiteralOperatorKind",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UserDefinedLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::UserDefinedLiteral::*)()",
                    "name": "getCookedLiteral",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UserDefinedLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::UserDefinedLiteral::*)() const",
                    "name": "getCookedLiteral",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UserDefinedLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UserDefinedLiteral::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UserDefinedLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UserDefinedLiteral::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UserDefinedLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UserDefinedLiteral::*)() const",
                    "name": "getUDSuffixLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UserDefinedLiteral",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::IdentifierInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::IdentifierInfo *",
                    "signature": "const clang::IdentifierInfo * (clang::UserDefinedLiteral::*)() const",
                    "name": "getUDSuffix",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::CallExpr"
            ],
            "name": "UserDefinedLiteral"
        },
        {
            "typename": "clang::CXXBoolLiteralExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXBoolLiteralExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXBoolLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXBoolLiteralExpr::*)() const",
                    "name": "getValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXBoolLiteralExpr",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXBoolLiteralExpr::*)(bool)",
                    "name": "setValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXBoolLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXBoolLiteralExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXBoolLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXBoolLiteralExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXBoolLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXBoolLiteralExpr::*)() const",
                    "name": "getLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXBoolLiteralExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXBoolLiteralExpr::*)(clang::SourceLocation)",
                    "name": "setLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXBoolLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXBoolLiteralExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXBoolLiteralExpr"
        },
        {
            "typename": "clang::CXXNullPtrLiteralExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXNullPtrLiteralExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXNullPtrLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXNullPtrLiteralExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNullPtrLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXNullPtrLiteralExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNullPtrLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXNullPtrLiteralExpr::*)() const",
                    "name": "getLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNullPtrLiteralExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXNullPtrLiteralExpr::*)(clang::SourceLocation)",
                    "name": "setLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNullPtrLiteralExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXNullPtrLiteralExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXNullPtrLiteralExpr"
        },
        {
            "typename": "clang::CXXStdInitializerListExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXStdInitializerListExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXStdInitializerListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXStdInitializerListExpr::*)()",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXStdInitializerListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CXXStdInitializerListExpr::*)() const",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXStdInitializerListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXStdInitializerListExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXStdInitializerListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXStdInitializerListExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXStdInitializerListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::CXXStdInitializerListExpr::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXStdInitializerListExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXStdInitializerListExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXStdInitializerListExpr"
        },
        {
            "typename": "clang::CXXTypeidExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXTypeidExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXTypeidExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXTypeidExpr::*)() const",
                    "name": "isPotentiallyEvaluated",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXTypeidExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXTypeidExpr::*)() const",
                    "name": "isTypeOperand",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXTypeidExpr",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::CXXTypeidExpr::*)(clang::ASTContext &) const",
                    "name": "getTypeOperand",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXTypeidExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::CXXTypeidExpr::*)() const",
                    "name": "getTypeOperandSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXTypeidExpr",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "TSI"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXTypeidExpr::*)(clang::TypeSourceInfo *)",
                    "name": "setTypeOperandSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXTypeidExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXTypeidExpr::*)() const",
                    "name": "getExprOperand",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXTypeidExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXTypeidExpr::*)(clang::Expr *)",
                    "name": "setExprOperand",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXTypeidExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXTypeidExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXTypeidExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXTypeidExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXTypeidExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::CXXTypeidExpr::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXTypeidExpr",
                    "args": [
                        [
                            "clang::SourceRange",
                            "R"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceRange)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXTypeidExpr::*)(clang::SourceRange)",
                    "name": "setSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXTypeidExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXTypeidExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXTypeidExpr"
        },
        {
            "typename": "clang::MSPropertyRefExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::MSPropertyRefExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::MSPropertyRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::MSPropertyRefExpr::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSPropertyRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::MSPropertyRefExpr::*)() const",
                    "name": "isImplicitAccess",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSPropertyRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MSPropertyRefExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSPropertyRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MSPropertyRefExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSPropertyRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::MSPropertyRefExpr::*)()",
                    "name": "children",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MSPropertyRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::MSPropertyRefExpr::*)() const",
                    "name": "getBaseExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MSPropertyRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::MSPropertyDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::MSPropertyDecl *",
                    "signature": "clang::MSPropertyDecl * (clang::MSPropertyRefExpr::*)() const",
                    "name": "getPropertyDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSPropertyRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::MSPropertyRefExpr::*)() const",
                    "name": "isArrow",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSPropertyRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MSPropertyRefExpr::*)() const",
                    "name": "getMemberLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSPropertyRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "signature": "clang::NestedNameSpecifierLoc (clang::MSPropertyRefExpr::*)() const",
                    "name": "getQualifierLoc",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "MSPropertyRefExpr"
        },
        {
            "typename": "clang::MSPropertySubscriptExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::MSPropertySubscriptExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MSPropertySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::MSPropertySubscriptExpr::*)()",
                    "name": "getBase",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MSPropertySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::MSPropertySubscriptExpr::*)() const",
                    "name": "getBase",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MSPropertySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::MSPropertySubscriptExpr::*)()",
                    "name": "getIdx",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MSPropertySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::MSPropertySubscriptExpr::*)() const",
                    "name": "getIdx",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::MSPropertySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MSPropertySubscriptExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSPropertySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MSPropertySubscriptExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSPropertySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MSPropertySubscriptExpr::*)() const",
                    "name": "getRBracketLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSPropertySubscriptExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::MSPropertySubscriptExpr::*)(clang::SourceLocation)",
                    "name": "setRBracketLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSPropertySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MSPropertySubscriptExpr::*)() const",
                    "name": "getExprLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSPropertySubscriptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::MSPropertySubscriptExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "MSPropertySubscriptExpr"
        },
        {
            "typename": "clang::CXXUuidofExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXUuidofExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXUuidofExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXUuidofExpr::*)() const",
                    "name": "isTypeOperand",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUuidofExpr",
                    "args": [
                        [
                            "clang::ASTContext &",
                            "Context"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType (clang::ASTContext &) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::CXXUuidofExpr::*)(clang::ASTContext &) const",
                    "name": "getTypeOperand",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXUuidofExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::CXXUuidofExpr::*)() const",
                    "name": "getTypeOperandSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUuidofExpr",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "TSI"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXUuidofExpr::*)(clang::TypeSourceInfo *)",
                    "name": "setTypeOperandSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXUuidofExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXUuidofExpr::*)() const",
                    "name": "getExprOperand",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUuidofExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXUuidofExpr::*)(clang::Expr *)",
                    "name": "setExprOperand",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUuidofExpr",
                    "args": [
                        [
                            "llvm::StringRef",
                            "US"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (llvm::StringRef)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXUuidofExpr::*)(llvm::StringRef)",
                    "name": "setUuidStr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUuidofExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::StringRef () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::StringRef",
                    "signature": "llvm::StringRef (clang::CXXUuidofExpr::*)() const",
                    "name": "getUuidStr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUuidofExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXUuidofExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUuidofExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXUuidofExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUuidofExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::CXXUuidofExpr::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUuidofExpr",
                    "args": [
                        [
                            "clang::SourceRange",
                            "R"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceRange)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXUuidofExpr::*)(clang::SourceRange)",
                    "name": "setSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUuidofExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXUuidofExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXUuidofExpr"
        },
        {
            "typename": "clang::CXXThisExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXThisExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXThisExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXThisExpr::*)() const",
                    "name": "getLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXThisExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXThisExpr::*)(clang::SourceLocation)",
                    "name": "setLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXThisExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXThisExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXThisExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXThisExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXThisExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXThisExpr::*)() const",
                    "name": "isImplicit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXThisExpr",
                    "args": [
                        [
                            "bool",
                            "I"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXThisExpr::*)(bool)",
                    "name": "setImplicit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXThisExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXThisExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXThisExpr"
        },
        {
            "typename": "clang::CXXThrowExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXThrowExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXThrowExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CXXThrowExpr::*)() const",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXThrowExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXThrowExpr::*)()",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXThrowExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXThrowExpr::*)() const",
                    "name": "getThrowLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXThrowExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXThrowExpr::*)() const",
                    "name": "isThrownVariableInScope",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXThrowExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXThrowExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXThrowExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXThrowExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXThrowExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXThrowExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXThrowExpr"
        },
        {
            "typename": "clang::CXXDefaultArgExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXDefaultArgExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDefaultArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ParmVarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::ParmVarDecl *",
                    "signature": "const clang::ParmVarDecl * (clang::CXXDefaultArgExpr::*)() const",
                    "name": "getParam",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDefaultArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ParmVarDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::ParmVarDecl *",
                    "signature": "clang::ParmVarDecl * (clang::CXXDefaultArgExpr::*)()",
                    "name": "getParam",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDefaultArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CXXDefaultArgExpr::*)() const",
                    "name": "getExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDefaultArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXDefaultArgExpr::*)()",
                    "name": "getExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDefaultArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXDefaultArgExpr::*)() const",
                    "name": "getUsedLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDefaultArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXDefaultArgExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDefaultArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXDefaultArgExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDefaultArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXDefaultArgExpr::*)() const",
                    "name": "getExprLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDefaultArgExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXDefaultArgExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXDefaultArgExpr"
        },
        {
            "typename": "clang::CXXDefaultInitExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXDefaultInitExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDefaultInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FieldDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::FieldDecl *",
                    "signature": "clang::FieldDecl * (clang::CXXDefaultInitExpr::*)()",
                    "name": "getField",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDefaultInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::FieldDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::FieldDecl *",
                    "signature": "const clang::FieldDecl * (clang::CXXDefaultInitExpr::*)() const",
                    "name": "getField",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDefaultInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CXXDefaultInitExpr::*)() const",
                    "name": "getExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDefaultInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXDefaultInitExpr::*)()",
                    "name": "getExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDefaultInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXDefaultInitExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDefaultInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXDefaultInitExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDefaultInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXDefaultInitExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXDefaultInitExpr"
        },
        {
            "typename": "clang::CXXBindTemporaryExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXBindTemporaryExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXBindTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXTemporary *()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "clang::CXXTemporary *",
                    "signature": "clang::CXXTemporary * (clang::CXXBindTemporaryExpr::*)()",
                    "name": "getTemporary",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXBindTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXTemporary *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::CXXTemporary *",
                    "signature": "const clang::CXXTemporary * (clang::CXXBindTemporaryExpr::*)() const",
                    "name": "getTemporary",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXBindTemporaryExpr",
                    "args": [
                        [
                            "clang::CXXTemporary *",
                            "T"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CXXTemporary *)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXBindTemporaryExpr::*)(clang::CXXTemporary *)",
                    "name": "setTemporary",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXBindTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CXXBindTemporaryExpr::*)() const",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXBindTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXBindTemporaryExpr::*)()",
                    "name": "getSubExpr",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXBindTemporaryExpr",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXBindTemporaryExpr::*)(clang::Expr *)",
                    "name": "setSubExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXBindTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXBindTemporaryExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXBindTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXBindTemporaryExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXBindTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXBindTemporaryExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXBindTemporaryExpr"
        },
        {
            "typename": "clang::CXXConstructExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXConstructExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXConstructorDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXConstructorDecl *",
                    "signature": "clang::CXXConstructorDecl * (clang::CXXConstructExpr::*)() const",
                    "name": "getConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXConstructExpr::*)() const",
                    "name": "getLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXConstructExpr::*)(clang::SourceLocation)",
                    "name": "setLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructExpr::*)() const",
                    "name": "isElidable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [
                        [
                            "bool",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXConstructExpr::*)(bool)",
                    "name": "setElidable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructExpr::*)() const",
                    "name": "hadMultipleCandidates",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXConstructExpr::*)(bool)",
                    "name": "setHadMultipleCandidates",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructExpr::*)() const",
                    "name": "isListInitialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXConstructExpr::*)(bool)",
                    "name": "setListInitialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructExpr::*)() const",
                    "name": "isStdInitListInitialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [
                        [
                            "bool",
                            "V"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXConstructExpr::*)(bool)",
                    "name": "setStdInitListInitialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXConstructExpr::*)() const",
                    "name": "requiresZeroInitialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [
                        [
                            "bool",
                            "ZeroInit"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXConstructExpr::*)(bool)",
                    "name": "setRequiresZeroInitialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXConstructExpr::ConstructionKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXConstructExpr::ConstructionKind",
                    "signature": "clang::CXXConstructExpr::ConstructionKind (clang::CXXConstructExpr::*)() const",
                    "name": "getConstructionKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [
                        [
                            "clang::CXXConstructExpr::ConstructionKind",
                            "CK"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::CXXConstructExpr::ConstructionKind)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXConstructExpr::*)(clang::CXXConstructExpr::ConstructionKind)",
                    "name": "setConstructionKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXConstructExpr::arg_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::Stmt::ExprIterator>",
                    "signature": "llvm::iterator_range<clang::Stmt::ExprIterator> (clang::CXXConstructExpr::*)()",
                    "name": "arguments",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXConstructExpr::const_arg_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::Stmt::ConstExprIterator>",
                    "signature": "llvm::iterator_range<clang::Stmt::ConstExprIterator> (clang::CXXConstructExpr::*)() const",
                    "name": "arguments",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CXXConstructExpr::*)() const",
                    "name": "getNumArgs",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXConstructExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Arg"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXConstructExpr::*)(unsigned int)",
                    "name": "getArg",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXConstructExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Arg"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CXXConstructExpr::*)(unsigned int) const",
                    "name": "getArg",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [
                        [
                            "unsigned int",
                            "Arg"
                        ],
                        [
                            "clang::Expr *",
                            "ArgExpr"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXConstructExpr::*)(unsigned int, clang::Expr *)",
                    "name": "setArg",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXConstructExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXConstructExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::CXXConstructExpr::*)() const",
                    "name": "getParenOrBraceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [
                        [
                            "clang::SourceRange",
                            "Range"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceRange)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXConstructExpr::*)(clang::SourceRange)",
                    "name": "setParenOrBraceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXConstructExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXConstructExpr"
        },
        {
            "typename": "clang::CXXInheritedCtorInitExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXInheritedCtorInitExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXConstructorDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXConstructorDecl *",
                    "signature": "clang::CXXConstructorDecl * (clang::CXXInheritedCtorInitExpr::*)() const",
                    "name": "getConstructor",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXInheritedCtorInitExpr::*)() const",
                    "name": "constructsVBase",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "CXXConstructExpr::ConstructionKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXConstructExpr::ConstructionKind",
                    "signature": "clang::CXXConstructExpr::ConstructionKind (clang::CXXInheritedCtorInitExpr::*)() const",
                    "name": "getConstructionKind",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXInheritedCtorInitExpr::*)() const",
                    "name": "inheritedFromVBase",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXInheritedCtorInitExpr::*)() const",
                    "name": "getLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXInheritedCtorInitExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXInheritedCtorInitExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXInheritedCtorInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXInheritedCtorInitExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXInheritedCtorInitExpr"
        },
        {
            "typename": "clang::CXXFunctionalCastExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXFunctionalCastExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXFunctionalCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXFunctionalCastExpr::*)() const",
                    "name": "getLParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXFunctionalCastExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXFunctionalCastExpr::*)(clang::SourceLocation)",
                    "name": "setLParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXFunctionalCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXFunctionalCastExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXFunctionalCastExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXFunctionalCastExpr::*)(clang::SourceLocation)",
                    "name": "setRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXFunctionalCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXFunctionalCastExpr::*)() const",
                    "name": "isListInitialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXFunctionalCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXFunctionalCastExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXFunctionalCastExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXFunctionalCastExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::ExplicitCastExpr"
            ],
            "name": "CXXFunctionalCastExpr"
        },
        {
            "typename": "clang::CXXTemporaryObjectExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXTemporaryObjectExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXTemporaryObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::CXXTemporaryObjectExpr::*)() const",
                    "name": "getTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXTemporaryObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXTemporaryObjectExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXTemporaryObjectExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXTemporaryObjectExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::CXXConstructExpr"
            ],
            "name": "CXXTemporaryObjectExpr"
        },
        {
            "typename": "clang::LambdaExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::LambdaExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LambdaCaptureDefault () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::LambdaCaptureDefault",
                    "signature": "clang::LambdaCaptureDefault (clang::LambdaExpr::*)() const",
                    "name": "getCaptureDefault",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::LambdaExpr::*)() const",
                    "name": "getCaptureDefaultLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [
                        [
                            "const clang::LambdaCapture *",
                            "Capture"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "bool (const clang::LambdaCapture *) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::LambdaExpr::*)(const clang::LambdaCapture *) const",
                    "name": "isInitCapture",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LambdaExpr::capture_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<const clang::LambdaCapture *>",
                    "signature": "llvm::iterator_range<const clang::LambdaCapture *> (clang::LambdaExpr::*)() const",
                    "name": "captures",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::LambdaExpr::*)() const",
                    "name": "capture_size",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LambdaExpr::capture_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<const clang::LambdaCapture *>",
                    "signature": "llvm::iterator_range<const clang::LambdaCapture *> (clang::LambdaExpr::*)() const",
                    "name": "explicit_captures",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::LambdaExpr::capture_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<const clang::LambdaCapture *>",
                    "signature": "llvm::iterator_range<const clang::LambdaCapture *> (clang::LambdaExpr::*)() const",
                    "name": "implicit_captures",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::iterator_range<capture_init_iterator> ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::Expr **>",
                    "signature": "llvm::iterator_range<clang::Expr **> (clang::LambdaExpr::*)()",
                    "name": "capture_inits",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::iterator_range<const_capture_init_iterator> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::Expr *const *>",
                    "signature": "llvm::iterator_range<clang::Expr *const *> (clang::LambdaExpr::*)() const",
                    "name": "capture_inits",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::LambdaExpr::*)() const",
                    "name": "getIntroducerRange",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXRecordDecl *",
                    "signature": "clang::CXXRecordDecl * (clang::LambdaExpr::*)() const",
                    "name": "getLambdaClass",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXMethodDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXMethodDecl *",
                    "signature": "clang::CXXMethodDecl * (clang::LambdaExpr::*)() const",
                    "name": "getCallOperator",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateParameterList *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateParameterList *",
                    "signature": "clang::TemplateParameterList * (clang::LambdaExpr::*)() const",
                    "name": "getTemplateParameterList",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::LambdaExpr::*)() const",
                    "name": "isGenericLambda",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CompoundStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CompoundStmt *",
                    "signature": "clang::CompoundStmt * (clang::LambdaExpr::*)() const",
                    "name": "getBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::LambdaExpr::*)() const",
                    "name": "isMutable",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::LambdaExpr::*)() const",
                    "name": "hasExplicitParameters",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::LambdaExpr::*)() const",
                    "name": "hasExplicitResultType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::LambdaExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::LambdaExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::LambdaExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::LambdaExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "LambdaExpr"
        },
        {
            "typename": "clang::CXXScalarValueInitExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXScalarValueInitExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXScalarValueInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::CXXScalarValueInitExpr::*)() const",
                    "name": "getTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXScalarValueInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXScalarValueInitExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXScalarValueInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXScalarValueInitExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXScalarValueInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXScalarValueInitExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXScalarValueInitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXScalarValueInitExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXScalarValueInitExpr"
        },
        {
            "typename": "clang::CXXNewExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXNewExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::CXXNewExpr::*)() const",
                    "name": "getAllocatedType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::CXXNewExpr::*)() const",
                    "name": "getAllocatedTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXNewExpr::*)() const",
                    "name": "shouldNullCheckAllocation",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FunctionDecl *",
                    "signature": "clang::FunctionDecl * (clang::CXXNewExpr::*)() const",
                    "name": "getOperatorNew",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FunctionDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXNewExpr::*)(clang::FunctionDecl *)",
                    "name": "setOperatorNew",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FunctionDecl *",
                    "signature": "clang::FunctionDecl * (clang::CXXNewExpr::*)() const",
                    "name": "getOperatorDelete",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [
                        [
                            "clang::FunctionDecl *",
                            "D"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::FunctionDecl *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXNewExpr::*)(clang::FunctionDecl *)",
                    "name": "setOperatorDelete",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXNewExpr::*)() const",
                    "name": "isArray",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXNewExpr::*)()",
                    "name": "getArraySize",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CXXNewExpr::*)() const",
                    "name": "getArraySize",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CXXNewExpr::*)() const",
                    "name": "getNumPlacementArgs",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXNewExpr",
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXNewExpr::*)(unsigned int)",
                    "name": "getPlacementArg",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXNewExpr",
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CXXNewExpr::*)(unsigned int) const",
                    "name": "getPlacementArg",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXNewExpr::*)() const",
                    "name": "isParenTypeId",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::CXXNewExpr::*)() const",
                    "name": "getTypeIdParens",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXNewExpr::*)() const",
                    "name": "isGlobalNew",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXNewExpr::*)() const",
                    "name": "hasInitializer",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXNewExpr::InitializationStyle () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CXXNewExpr::InitializationStyle",
                    "signature": "clang::CXXNewExpr::InitializationStyle (clang::CXXNewExpr::*)() const",
                    "name": "getInitializationStyle",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXNewExpr::*)()",
                    "name": "getInitializer",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CXXNewExpr::*)() const",
                    "name": "getInitializer",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXConstructExpr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::CXXConstructExpr *",
                    "signature": "const clang::CXXConstructExpr * (clang::CXXNewExpr::*)() const",
                    "name": "getConstructExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXNewExpr::*)() const",
                    "name": "passAlignment",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXNewExpr::*)() const",
                    "name": "doesUsualArrayDeleteWantSize",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::iterator_range<arg_iterator> ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::Stmt::ExprIterator>",
                    "signature": "llvm::iterator_range<clang::Stmt::ExprIterator> (clang::CXXNewExpr::*)()",
                    "name": "placement_arguments",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::iterator_range<const_arg_iterator> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::Stmt::ConstExprIterator>",
                    "signature": "llvm::iterator_range<clang::Stmt::ConstExprIterator> (clang::CXXNewExpr::*)() const",
                    "name": "placement_arguments",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXNewExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXNewExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::CXXNewExpr::*)() const",
                    "name": "getDirectInitRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::CXXNewExpr::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNewExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXNewExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXNewExpr"
        },
        {
            "typename": "clang::CXXDeleteExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXDeleteExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXDeleteExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXDeleteExpr::*)() const",
                    "name": "isGlobalDelete",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDeleteExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXDeleteExpr::*)() const",
                    "name": "isArrayForm",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDeleteExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXDeleteExpr::*)() const",
                    "name": "isArrayFormAsWritten",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDeleteExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXDeleteExpr::*)() const",
                    "name": "doesUsualArrayDeleteWantSize",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDeleteExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::FunctionDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::FunctionDecl *",
                    "signature": "clang::FunctionDecl * (clang::CXXDeleteExpr::*)() const",
                    "name": "getOperatorDelete",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDeleteExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXDeleteExpr::*)()",
                    "name": "getArgument",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDeleteExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CXXDeleteExpr::*)() const",
                    "name": "getArgument",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDeleteExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::CXXDeleteExpr::*)() const",
                    "name": "getDestroyedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDeleteExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXDeleteExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDeleteExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXDeleteExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDeleteExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXDeleteExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXDeleteExpr"
        },
        {
            "typename": "clang::CXXPseudoDestructorExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXPseudoDestructorExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXPseudoDestructorExpr::*)() const",
                    "name": "getBase",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXPseudoDestructorExpr::*)() const",
                    "name": "hasQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "signature": "clang::NestedNameSpecifierLoc (clang::CXXPseudoDestructorExpr::*)() const",
                    "name": "getQualifierLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifier *",
                    "signature": "clang::NestedNameSpecifier * (clang::CXXPseudoDestructorExpr::*)() const",
                    "name": "getQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXPseudoDestructorExpr::*)() const",
                    "name": "isArrow",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXPseudoDestructorExpr::*)() const",
                    "name": "getOperatorLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::CXXPseudoDestructorExpr::*)() const",
                    "name": "getScopeTypeInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXPseudoDestructorExpr::*)() const",
                    "name": "getColonColonLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXPseudoDestructorExpr::*)() const",
                    "name": "getTildeLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::CXXPseudoDestructorExpr::*)() const",
                    "name": "getDestroyedTypeInfo",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::IdentifierInfo *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::IdentifierInfo *",
                    "signature": "clang::IdentifierInfo * (clang::CXXPseudoDestructorExpr::*)() const",
                    "name": "getDestroyedTypeIdentifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::CXXPseudoDestructorExpr::*)() const",
                    "name": "getDestroyedType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXPseudoDestructorExpr::*)() const",
                    "name": "getDestroyedTypeLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [
                        [
                            "clang::IdentifierInfo *",
                            "II"
                        ],
                        [
                            "clang::SourceLocation",
                            "Loc"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::IdentifierInfo *, clang::SourceLocation)",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXPseudoDestructorExpr::*)(clang::IdentifierInfo *, clang::SourceLocation)",
                    "name": "setDestroyedType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [
                        [
                            "clang::TypeSourceInfo *",
                            "Info"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TypeSourceInfo *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXPseudoDestructorExpr::*)(clang::TypeSourceInfo *)",
                    "name": "setDestroyedType",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXPseudoDestructorExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXPseudoDestructorExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXPseudoDestructorExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXPseudoDestructorExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXPseudoDestructorExpr"
        },
        {
            "typename": "clang::TypeTraitExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::TypeTraitExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::TypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeTrait () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeTrait",
                    "signature": "clang::TypeTrait (clang::TypeTraitExpr::*)() const",
                    "name": "getTrait",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::TypeTraitExpr::*)() const",
                    "name": "getValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::TypeTraitExpr::*)() const",
                    "name": "getNumArgs",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::TypeTraitExpr",
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::TypeTraitExpr::*)(unsigned int) const",
                    "name": "getArg",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::TypeSourceInfo *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::TypeSourceInfo *>",
                    "signature": "llvm::ArrayRef<clang::TypeSourceInfo *> (clang::TypeTraitExpr::*)() const",
                    "name": "getArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::TypeTraitExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::TypeTraitExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::TypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::TypeTraitExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "TypeTraitExpr"
        },
        {
            "typename": "clang::ArrayTypeTraitExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ArrayTypeTraitExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ArrayTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ArrayTypeTraitExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArrayTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ArrayTypeTraitExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArrayTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ArrayTypeTrait () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ArrayTypeTrait",
                    "signature": "clang::ArrayTypeTrait (clang::ArrayTypeTraitExpr::*)() const",
                    "name": "getTrait",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArrayTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::ArrayTypeTraitExpr::*)() const",
                    "name": "getQueriedType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ArrayTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::ArrayTypeTraitExpr::*)() const",
                    "name": "getQueriedTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArrayTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "uint64_t () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned long",
                    "signature": "unsigned long (clang::ArrayTypeTraitExpr::*)() const",
                    "name": "getValue",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ArrayTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ArrayTypeTraitExpr::*)() const",
                    "name": "getDimensionExpression",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ArrayTypeTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ArrayTypeTraitExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "ArrayTypeTraitExpr"
        },
        {
            "typename": "clang::ExpressionTraitExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ExpressionTraitExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ExpressionTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ExpressionTraitExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExpressionTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ExpressionTraitExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExpressionTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ExpressionTrait () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ExpressionTrait",
                    "signature": "clang::ExpressionTrait (clang::ExpressionTraitExpr::*)() const",
                    "name": "getTrait",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::ExpressionTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::ExpressionTraitExpr::*)() const",
                    "name": "getQueriedExpression",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExpressionTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ExpressionTraitExpr::*)() const",
                    "name": "getValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExpressionTraitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ExpressionTraitExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "ExpressionTraitExpr"
        },
        {
            "typename": "clang::OverloadExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::OverloadExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXRecordDecl *",
                    "signature": "clang::CXXRecordDecl * (clang::OverloadExpr::*)()",
                    "name": "getNamingClass",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXRecordDecl *",
                    "signature": "const clang::CXXRecordDecl * (clang::OverloadExpr::*)() const",
                    "name": "getNamingClass",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "llvm::iterator_range<decls_iterator> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<clang::UnresolvedSetIterator>",
                    "signature": "llvm::iterator_range<clang::UnresolvedSetIterator> (clang::OverloadExpr::*)() const",
                    "name": "decls",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::OverloadExpr::*)() const",
                    "name": "getNumDecls",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclarationNameInfo &() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::DeclarationNameInfo &",
                    "signature": "const clang::DeclarationNameInfo & (clang::OverloadExpr::*)() const",
                    "name": "getNameInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationName () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclarationName",
                    "signature": "clang::DeclarationName (clang::OverloadExpr::*)() const",
                    "name": "getName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::OverloadExpr::*)() const",
                    "name": "getNameLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifier *",
                    "signature": "clang::NestedNameSpecifier * (clang::OverloadExpr::*)() const",
                    "name": "getQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "signature": "clang::NestedNameSpecifierLoc (clang::OverloadExpr::*)() const",
                    "name": "getQualifierLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::OverloadExpr::*)() const",
                    "name": "getTemplateKeywordLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::OverloadExpr::*)() const",
                    "name": "getLAngleLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::OverloadExpr::*)() const",
                    "name": "getRAngleLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::OverloadExpr::*)() const",
                    "name": "hasTemplateKeyword",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::OverloadExpr::*)() const",
                    "name": "hasExplicitTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TemplateArgumentLoc *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::TemplateArgumentLoc *",
                    "signature": "const clang::TemplateArgumentLoc * (clang::OverloadExpr::*)() const",
                    "name": "getTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::OverloadExpr::*)() const",
                    "name": "getNumTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OverloadExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::TemplateArgumentLoc> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::TemplateArgumentLoc>",
                    "signature": "llvm::ArrayRef<clang::TemplateArgumentLoc> (clang::OverloadExpr::*)() const",
                    "name": "template_arguments",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::OverloadExpr",
                    "args": [
                        [
                            "clang::TemplateArgumentListInfo &",
                            "List"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TemplateArgumentListInfo &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::OverloadExpr::*)(clang::TemplateArgumentListInfo &) const",
                    "name": "copyTemplateArgumentsInto",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "OverloadExpr"
        },
        {
            "typename": "clang::UnresolvedLookupExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::UnresolvedLookupExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::UnresolvedLookupExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnresolvedLookupExpr::*)() const",
                    "name": "requiresADL",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedLookupExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnresolvedLookupExpr::*)() const",
                    "name": "isOverloaded",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnresolvedLookupExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXRecordDecl *",
                    "signature": "clang::CXXRecordDecl * (clang::UnresolvedLookupExpr::*)()",
                    "name": "getNamingClass",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnresolvedLookupExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXRecordDecl *",
                    "signature": "const clang::CXXRecordDecl * (clang::UnresolvedLookupExpr::*)() const",
                    "name": "getNamingClass",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedLookupExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnresolvedLookupExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedLookupExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnresolvedLookupExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedLookupExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::UnresolvedLookupExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::OverloadExpr"
            ],
            "name": "UnresolvedLookupExpr"
        },
        {
            "typename": "clang::DependentScopeDeclRefExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::DependentScopeDeclRefExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclarationNameInfo &() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::DeclarationNameInfo &",
                    "signature": "const clang::DeclarationNameInfo & (clang::DependentScopeDeclRefExpr::*)() const",
                    "name": "getNameInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationName () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclarationName",
                    "signature": "clang::DeclarationName (clang::DependentScopeDeclRefExpr::*)() const",
                    "name": "getDeclName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DependentScopeDeclRefExpr::*)() const",
                    "name": "getLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "signature": "clang::NestedNameSpecifierLoc (clang::DependentScopeDeclRefExpr::*)() const",
                    "name": "getQualifierLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifier *",
                    "signature": "clang::NestedNameSpecifier * (clang::DependentScopeDeclRefExpr::*)() const",
                    "name": "getQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DependentScopeDeclRefExpr::*)() const",
                    "name": "getTemplateKeywordLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DependentScopeDeclRefExpr::*)() const",
                    "name": "getLAngleLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DependentScopeDeclRefExpr::*)() const",
                    "name": "getRAngleLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DependentScopeDeclRefExpr::*)() const",
                    "name": "hasTemplateKeyword",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::DependentScopeDeclRefExpr::*)() const",
                    "name": "hasExplicitTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [
                        [
                            "clang::TemplateArgumentListInfo &",
                            "List"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TemplateArgumentListInfo &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::DependentScopeDeclRefExpr::*)(clang::TemplateArgumentListInfo &) const",
                    "name": "copyTemplateArgumentsInto",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TemplateArgumentLoc *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::TemplateArgumentLoc *",
                    "signature": "const clang::TemplateArgumentLoc * (clang::DependentScopeDeclRefExpr::*)() const",
                    "name": "getTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::DependentScopeDeclRefExpr::*)() const",
                    "name": "getNumTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::TemplateArgumentLoc> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::TemplateArgumentLoc>",
                    "signature": "llvm::ArrayRef<clang::TemplateArgumentLoc> (clang::DependentScopeDeclRefExpr::*)() const",
                    "name": "template_arguments",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DependentScopeDeclRefExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DependentScopeDeclRefExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentScopeDeclRefExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::DependentScopeDeclRefExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "DependentScopeDeclRefExpr"
        },
        {
            "typename": "clang::ExprWithCleanups",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::ExprWithCleanups>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::ExprWithCleanups",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::ExprWithCleanups::CleanupObject> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::BlockDecl *>",
                    "signature": "llvm::ArrayRef<clang::BlockDecl *> (clang::ExprWithCleanups::*)() const",
                    "name": "getObjects",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExprWithCleanups",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::ExprWithCleanups::*)() const",
                    "name": "getNumObjects",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExprWithCleanups",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::ExprWithCleanups::CleanupObject (unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::BlockDecl *",
                    "signature": "clang::BlockDecl * (clang::ExprWithCleanups::*)(unsigned int) const",
                    "name": "getObject",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExprWithCleanups",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::ExprWithCleanups::*)() const",
                    "name": "cleanupsHaveSideEffects",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExprWithCleanups",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ExprWithCleanups::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExprWithCleanups",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::ExprWithCleanups::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::ExprWithCleanups",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::ExprWithCleanups::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::FullExpr"
            ],
            "name": "ExprWithCleanups"
        },
        {
            "typename": "clang::CXXUnresolvedConstructExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXUnresolvedConstructExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::CXXUnresolvedConstructExpr::*)() const",
                    "name": "getTypeAsWritten",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::CXXUnresolvedConstructExpr::*)() const",
                    "name": "getTypeSourceInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXUnresolvedConstructExpr::*)() const",
                    "name": "getLParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXUnresolvedConstructExpr::*)(clang::SourceLocation)",
                    "name": "setLParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXUnresolvedConstructExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [
                        [
                            "clang::SourceLocation",
                            "L"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::SourceLocation)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXUnresolvedConstructExpr::*)(clang::SourceLocation)",
                    "name": "setRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXUnresolvedConstructExpr::*)() const",
                    "name": "isListInitialization",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CXXUnresolvedConstructExpr::*)() const",
                    "name": "arg_size",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXUnresolvedConstructExpr::arg_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::Expr **>",
                    "signature": "llvm::iterator_range<clang::Expr **> (clang::CXXUnresolvedConstructExpr::*)()",
                    "name": "arguments",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXUnresolvedConstructExpr::const_arg_range () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::iterator_range<const clang::Expr *const *>",
                    "signature": "llvm::iterator_range<const clang::Expr *const *> (clang::CXXUnresolvedConstructExpr::*)() const",
                    "name": "arguments",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXUnresolvedConstructExpr::*)(unsigned int)",
                    "name": "getArg",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CXXUnresolvedConstructExpr::*)(unsigned int) const",
                    "name": "getArg",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ],
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (unsigned int, clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXUnresolvedConstructExpr::*)(unsigned int, clang::Expr *)",
                    "name": "setArg",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXUnresolvedConstructExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXUnresolvedConstructExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXUnresolvedConstructExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXUnresolvedConstructExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXUnresolvedConstructExpr"
        },
        {
            "typename": "clang::CXXDependentScopeMemberExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXDependentScopeMemberExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "isImplicitAccess",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getBase",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getBaseType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "isArrow",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getOperatorLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifier *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifier *",
                    "signature": "clang::NestedNameSpecifier * (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getQualifier",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "signature": "clang::NestedNameSpecifierLoc (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getQualifierLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamedDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NamedDecl *",
                    "signature": "clang::NamedDecl * (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getFirstQualifierFoundInScope",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclarationNameInfo &() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::DeclarationNameInfo &",
                    "signature": "const clang::DeclarationNameInfo & (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getMemberNameInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationName () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclarationName",
                    "signature": "clang::DeclarationName (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getMember",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getMemberLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getTemplateKeywordLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getLAngleLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getRAngleLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "hasTemplateKeyword",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "hasExplicitTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [
                        [
                            "clang::TemplateArgumentListInfo &",
                            "List"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::TemplateArgumentListInfo &) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "void",
                    "signature": "void (clang::CXXDependentScopeMemberExpr::*)(clang::TemplateArgumentListInfo &) const",
                    "name": "copyTemplateArgumentsInto",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::TemplateArgumentLoc *() const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::TemplateArgumentLoc *",
                    "signature": "const clang::TemplateArgumentLoc * (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getNumTemplateArgs",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::TemplateArgumentLoc> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::TemplateArgumentLoc>",
                    "signature": "llvm::ArrayRef<clang::TemplateArgumentLoc> (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "template_arguments",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXDependentScopeMemberExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXDependentScopeMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXDependentScopeMemberExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXDependentScopeMemberExpr"
        },
        {
            "typename": "clang::UnresolvedMemberExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::UnresolvedMemberExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnresolvedMemberExpr::*)() const",
                    "name": "isImplicitAccess",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::UnresolvedMemberExpr::*)()",
                    "name": "getBase",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::UnresolvedMemberExpr::*)() const",
                    "name": "getBase",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::UnresolvedMemberExpr::*)() const",
                    "name": "getBaseType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnresolvedMemberExpr::*)() const",
                    "name": "hasUnresolvedUsing",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::UnresolvedMemberExpr::*)() const",
                    "name": "isArrow",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnresolvedMemberExpr::*)() const",
                    "name": "getOperatorLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXRecordDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXRecordDecl *",
                    "signature": "clang::CXXRecordDecl * (clang::UnresolvedMemberExpr::*)()",
                    "name": "getNamingClass",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXRecordDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXRecordDecl *",
                    "signature": "const clang::CXXRecordDecl * (clang::UnresolvedMemberExpr::*)() const",
                    "name": "getNamingClass",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclarationNameInfo &() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::DeclarationNameInfo &",
                    "signature": "const clang::DeclarationNameInfo & (clang::UnresolvedMemberExpr::*)() const",
                    "name": "getMemberNameInfo",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationName () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclarationName",
                    "signature": "clang::DeclarationName (clang::UnresolvedMemberExpr::*)() const",
                    "name": "getMemberName",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnresolvedMemberExpr::*)() const",
                    "name": "getMemberLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnresolvedMemberExpr::*)() const",
                    "name": "getExprLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnresolvedMemberExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::UnresolvedMemberExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::UnresolvedMemberExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::UnresolvedMemberExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::OverloadExpr"
            ],
            "name": "UnresolvedMemberExpr"
        },
        {
            "typename": "clang::CXXNoexceptExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXNoexceptExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXNoexceptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXNoexceptExpr::*)() const",
                    "name": "getOperand",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNoexceptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXNoexceptExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNoexceptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXNoexceptExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNoexceptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::CXXNoexceptExpr::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNoexceptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXNoexceptExpr::*)() const",
                    "name": "getValue",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXNoexceptExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXNoexceptExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXNoexceptExpr"
        },
        {
            "typename": "clang::PackExpansionExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::PackExpansionExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::PackExpansionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::PackExpansionExpr::*)()",
                    "name": "getPattern",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::PackExpansionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::PackExpansionExpr::*)() const",
                    "name": "getPattern",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::PackExpansionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::PackExpansionExpr::*)() const",
                    "name": "getEllipsisLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::PackExpansionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "Optional<unsigned int> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::Optional<unsigned int>",
                    "signature": "llvm::Optional<unsigned int> (clang::PackExpansionExpr::*)() const",
                    "name": "getNumExpansions",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::PackExpansionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::PackExpansionExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::PackExpansionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::PackExpansionExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::PackExpansionExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::PackExpansionExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "PackExpansionExpr"
        },
        {
            "typename": "clang::SizeOfPackExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::SizeOfPackExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::SizeOfPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SizeOfPackExpr::*)() const",
                    "name": "getOperatorLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SizeOfPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SizeOfPackExpr::*)() const",
                    "name": "getPackLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SizeOfPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SizeOfPackExpr::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SizeOfPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamedDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NamedDecl *",
                    "signature": "clang::NamedDecl * (clang::SizeOfPackExpr::*)() const",
                    "name": "getPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SizeOfPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::SizeOfPackExpr::*)() const",
                    "name": "getPackLength",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SizeOfPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::SizeOfPackExpr::*)() const",
                    "name": "isPartiallySubstituted",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SizeOfPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<clang::TemplateArgument> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<clang::TemplateArgument>",
                    "signature": "llvm::ArrayRef<clang::TemplateArgument> (clang::SizeOfPackExpr::*)() const",
                    "name": "getPartialArguments",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SizeOfPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SizeOfPackExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SizeOfPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SizeOfPackExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SizeOfPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SizeOfPackExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "SizeOfPackExpr"
        },
        {
            "typename": "clang::SubstNonTypeTemplateParmExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::SubstNonTypeTemplateParmExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::SubstNonTypeTemplateParmExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SubstNonTypeTemplateParmExpr::*)() const",
                    "name": "getNameLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SubstNonTypeTemplateParmExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SubstNonTypeTemplateParmExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SubstNonTypeTemplateParmExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SubstNonTypeTemplateParmExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SubstNonTypeTemplateParmExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::SubstNonTypeTemplateParmExpr::*)() const",
                    "name": "getReplacement",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SubstNonTypeTemplateParmExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NonTypeTemplateParmDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NonTypeTemplateParmDecl *",
                    "signature": "clang::NonTypeTemplateParmDecl * (clang::SubstNonTypeTemplateParmExpr::*)() const",
                    "name": "getParameter",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SubstNonTypeTemplateParmExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SubstNonTypeTemplateParmExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "SubstNonTypeTemplateParmExpr"
        },
        {
            "typename": "clang::SubstNonTypeTemplateParmPackExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::SubstNonTypeTemplateParmPackExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::SubstNonTypeTemplateParmPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NonTypeTemplateParmDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NonTypeTemplateParmDecl *",
                    "signature": "clang::NonTypeTemplateParmDecl * (clang::SubstNonTypeTemplateParmPackExpr::*)() const",
                    "name": "getParameterPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SubstNonTypeTemplateParmPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SubstNonTypeTemplateParmPackExpr::*)() const",
                    "name": "getParameterPackLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SubstNonTypeTemplateParmPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateArgument () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateArgument",
                    "signature": "clang::TemplateArgument (clang::SubstNonTypeTemplateParmPackExpr::*)() const",
                    "name": "getArgumentPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SubstNonTypeTemplateParmPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SubstNonTypeTemplateParmPackExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SubstNonTypeTemplateParmPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::SubstNonTypeTemplateParmPackExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::SubstNonTypeTemplateParmPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::SubstNonTypeTemplateParmPackExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "SubstNonTypeTemplateParmPackExpr"
        },
        {
            "typename": "clang::FunctionParmPackExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::FunctionParmPackExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionParmPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::ParmVarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ParmVarDecl *",
                    "signature": "clang::ParmVarDecl * (clang::FunctionParmPackExpr::*)() const",
                    "name": "getParameterPack",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionParmPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::FunctionParmPackExpr::*)() const",
                    "name": "getParameterPackLocation",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionParmPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::FunctionParmPackExpr::*)() const",
                    "name": "getNumExpansions",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FunctionParmPackExpr",
                    "args": [
                        [
                            "unsigned int",
                            "I"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::ParmVarDecl *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::ParmVarDecl *",
                    "signature": "clang::ParmVarDecl * (clang::FunctionParmPackExpr::*)(unsigned int) const",
                    "name": "getExpansion",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionParmPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::FunctionParmPackExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionParmPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::FunctionParmPackExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FunctionParmPackExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::FunctionParmPackExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "FunctionParmPackExpr"
        },
        {
            "typename": "clang::MaterializeTemporaryExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::MaterializeTemporaryExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MaterializeTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::MaterializeTemporaryExpr::*)() const",
                    "name": "getTemporary",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MaterializeTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::MaterializeTemporaryExpr::*)() const",
                    "name": "GetTemporaryExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MaterializeTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::StorageDuration () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::StorageDuration",
                    "signature": "clang::StorageDuration (clang::MaterializeTemporaryExpr::*)() const",
                    "name": "getStorageDuration",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MaterializeTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::ValueDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "const clang::ValueDecl *",
                    "signature": "const clang::ValueDecl * (clang::MaterializeTemporaryExpr::*)() const",
                    "name": "getExtendingDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MaterializeTemporaryExpr",
                    "args": [
                        [
                            "const clang::ValueDecl *",
                            "ExtendedBy"
                        ],
                        [
                            "unsigned int",
                            "ManglingNumber"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (const clang::ValueDecl *, unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::MaterializeTemporaryExpr::*)(const clang::ValueDecl *, unsigned int)",
                    "name": "setExtendingDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MaterializeTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::MaterializeTemporaryExpr::*)() const",
                    "name": "getManglingNumber",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MaterializeTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::MaterializeTemporaryExpr::*)() const",
                    "name": "isBoundToLvalueReference",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MaterializeTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MaterializeTemporaryExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MaterializeTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MaterializeTemporaryExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MaterializeTemporaryExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::MaterializeTemporaryExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "MaterializeTemporaryExpr"
        },
        {
            "typename": "clang::CXXFoldExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXFoldExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXFoldExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXFoldExpr::*)() const",
                    "name": "getLHS",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXFoldExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXFoldExpr::*)() const",
                    "name": "getRHS",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXFoldExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXFoldExpr::*)() const",
                    "name": "isRightFold",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXFoldExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CXXFoldExpr::*)() const",
                    "name": "isLeftFold",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXFoldExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXFoldExpr::*)() const",
                    "name": "getPattern",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXFoldExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXFoldExpr::*)() const",
                    "name": "getInit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXFoldExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXFoldExpr::*)() const",
                    "name": "getEllipsisLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXFoldExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::BinaryOperatorKind () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::BinaryOperatorKind",
                    "signature": "clang::BinaryOperatorKind (clang::CXXFoldExpr::*)() const",
                    "name": "getOperator",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXFoldExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXFoldExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXFoldExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXFoldExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXFoldExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXFoldExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CXXFoldExpr"
        },
        {
            "typename": "clang::CoroutineSuspendExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CoroutineSuspendExpr>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CoroutineSuspendExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CoroutineSuspendExpr::*)() const",
                    "name": "getKeywordLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineSuspendExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CoroutineSuspendExpr::*)() const",
                    "name": "getCommonExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineSuspendExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::OpaqueValueExpr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::OpaqueValueExpr *",
                    "signature": "clang::OpaqueValueExpr * (clang::CoroutineSuspendExpr::*)() const",
                    "name": "getOpaqueValue",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineSuspendExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CoroutineSuspendExpr::*)() const",
                    "name": "getReadyExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineSuspendExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CoroutineSuspendExpr::*)() const",
                    "name": "getSuspendExpr",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineSuspendExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CoroutineSuspendExpr::*)() const",
                    "name": "getResumeExpr",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CoroutineSuspendExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CoroutineSuspendExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CoroutineSuspendExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CoroutineSuspendExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CoroutineSuspendExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CoroutineSuspendExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "CoroutineSuspendExpr"
        },
        {
            "typename": "clang::CoawaitExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CoawaitExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoawaitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CoawaitExpr::*)() const",
                    "name": "getOperand",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CoawaitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CoawaitExpr::*)() const",
                    "name": "isImplicit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CoawaitExpr",
                    "args": [
                        [
                            "bool",
                            "value"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CoawaitExpr::*)(bool)",
                    "name": "setIsImplicit",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::CoroutineSuspendExpr"
            ],
            "name": "CoawaitExpr"
        },
        {
            "typename": "clang::DependentCoawaitExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::DependentCoawaitExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DependentCoawaitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::DependentCoawaitExpr::*)() const",
                    "name": "getOperand",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::DependentCoawaitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::UnresolvedLookupExpr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::UnresolvedLookupExpr *",
                    "signature": "clang::UnresolvedLookupExpr * (clang::DependentCoawaitExpr::*)() const",
                    "name": "getOperatorCoawaitLookup",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentCoawaitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DependentCoawaitExpr::*)() const",
                    "name": "getKeywordLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentCoawaitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DependentCoawaitExpr::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentCoawaitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::DependentCoawaitExpr::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::DependentCoawaitExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::DependentCoawaitExpr::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Expr"
            ],
            "name": "DependentCoawaitExpr"
        },
        {
            "typename": "clang::CoyieldExpr",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CoyieldExpr>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoyieldExpr",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CoyieldExpr::*)() const",
                    "name": "getOperand",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::CoroutineSuspendExpr"
            ],
            "name": "CoyieldExpr"
        },
        {
            "typename": "clang::CXXCatchStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXCatchStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXCatchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXCatchStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXCatchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXCatchStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXCatchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXCatchStmt::*)() const",
                    "name": "getCatchLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXCatchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::CXXCatchStmt::*)() const",
                    "name": "getExceptionDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXCatchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::QualType () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::QualType",
                    "signature": "clang::QualType (clang::CXXCatchStmt::*)() const",
                    "name": "getCaughtType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXCatchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CXXCatchStmt::*)() const",
                    "name": "getHandlerBlock",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXCatchStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXCatchStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "CXXCatchStmt"
        },
        {
            "typename": "clang::CXXTryStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXTryStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CXXTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXTryStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXTryStmt::*)() const",
                    "name": "getTryLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXTryStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CompoundStmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CompoundStmt *",
                    "signature": "clang::CompoundStmt * (clang::CXXTryStmt::*)()",
                    "name": "getTryBlock",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::CompoundStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CompoundStmt *",
                    "signature": "const clang::CompoundStmt * (clang::CXXTryStmt::*)() const",
                    "name": "getTryBlock",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::CXXTryStmt::*)() const",
                    "name": "getNumHandlers",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXTryStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::CXXCatchStmt *(unsigned int)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::CXXCatchStmt *",
                    "signature": "clang::CXXCatchStmt * (clang::CXXTryStmt::*)(unsigned int)",
                    "name": "getHandler",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXTryStmt",
                    "args": [
                        [
                            "unsigned int",
                            "i"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "const clang::CXXCatchStmt *(unsigned int) const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::CXXCatchStmt *",
                    "signature": "const clang::CXXCatchStmt * (clang::CXXTryStmt::*)(unsigned int) const",
                    "name": "getHandler",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXTryStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXTryStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "CXXTryStmt"
        },
        {
            "typename": "clang::CXXForRangeStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CXXForRangeStmt>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CXXForRangeStmt::*)()",
                    "name": "getInit",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::CXXForRangeStmt::*)()",
                    "name": "getLoopVariable",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXForRangeStmt::*)()",
                    "name": "getRangeInit",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::CXXForRangeStmt::*)() const",
                    "name": "getInit",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::VarDecl *",
                    "signature": "const clang::VarDecl * (clang::CXXForRangeStmt::*)() const",
                    "name": "getLoopVariable",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CXXForRangeStmt::*)() const",
                    "name": "getRangeInit",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclStmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclStmt *",
                    "signature": "clang::DeclStmt * (clang::CXXForRangeStmt::*)()",
                    "name": "getRangeStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclStmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclStmt *",
                    "signature": "clang::DeclStmt * (clang::CXXForRangeStmt::*)()",
                    "name": "getBeginStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclStmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclStmt *",
                    "signature": "clang::DeclStmt * (clang::CXXForRangeStmt::*)()",
                    "name": "getEndStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXForRangeStmt::*)()",
                    "name": "getCond",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CXXForRangeStmt::*)()",
                    "name": "getInc",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclStmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::DeclStmt *",
                    "signature": "clang::DeclStmt * (clang::CXXForRangeStmt::*)()",
                    "name": "getLoopVarStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *()",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": false,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CXXForRangeStmt::*)()",
                    "name": "getBody",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclStmt *",
                    "signature": "const clang::DeclStmt * (clang::CXXForRangeStmt::*)() const",
                    "name": "getRangeStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclStmt *",
                    "signature": "const clang::DeclStmt * (clang::CXXForRangeStmt::*)() const",
                    "name": "getBeginStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclStmt *",
                    "signature": "const clang::DeclStmt * (clang::CXXForRangeStmt::*)() const",
                    "name": "getEndStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CXXForRangeStmt::*)() const",
                    "name": "getCond",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Expr *",
                    "signature": "const clang::Expr * (clang::CXXForRangeStmt::*)() const",
                    "name": "getInc",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::DeclStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::DeclStmt *",
                    "signature": "const clang::DeclStmt * (clang::CXXForRangeStmt::*)() const",
                    "name": "getLoopVarStmt",
                    "is_overload": true
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "const clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "long",
                    "const": true,
                    "result_type": "const clang::Stmt *",
                    "signature": "const clang::Stmt * (clang::CXXForRangeStmt::*)() const",
                    "name": "getBody",
                    "is_overload": true
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Stmt *)",
                    "name": "setInit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Expr *)",
                    "name": "setRangeInit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Stmt *)",
                    "name": "setRangeStmt",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Stmt *)",
                    "name": "setBeginStmt",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Stmt *)",
                    "name": "setEndStmt",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Expr *)",
                    "name": "setCond",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [
                        [
                            "clang::Expr *",
                            "E"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Expr *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Expr *)",
                    "name": "setInc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Stmt *)",
                    "name": "setLoopVarStmt",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [
                        [
                            "clang::Stmt *",
                            "S"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (clang::Stmt *)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CXXForRangeStmt::*)(clang::Stmt *)",
                    "name": "setBody",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXForRangeStmt::*)() const",
                    "name": "getForLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXForRangeStmt::*)() const",
                    "name": "getCoawaitLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXForRangeStmt::*)() const",
                    "name": "getColonLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXForRangeStmt::*)() const",
                    "name": "getRParenLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXForRangeStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CXXForRangeStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CXXForRangeStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CXXForRangeStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "CXXForRangeStmt"
        },
        {
            "typename": "clang::MSDependentExistsStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::MSDependentExistsStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::MSDependentExistsStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MSDependentExistsStmt::*)() const",
                    "name": "getKeywordLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSDependentExistsStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::MSDependentExistsStmt::*)() const",
                    "name": "isIfExists",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSDependentExistsStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::MSDependentExistsStmt::*)() const",
                    "name": "isIfNotExists",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSDependentExistsStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NestedNameSpecifierLoc () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NestedNameSpecifierLoc",
                    "signature": "clang::NestedNameSpecifierLoc (clang::MSDependentExistsStmt::*)() const",
                    "name": "getQualifierLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSDependentExistsStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::DeclarationNameInfo () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::DeclarationNameInfo",
                    "signature": "clang::DeclarationNameInfo (clang::MSDependentExistsStmt::*)() const",
                    "name": "getNameInfo",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::MSDependentExistsStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::CompoundStmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::CompoundStmt *",
                    "signature": "clang::CompoundStmt * (clang::MSDependentExistsStmt::*)() const",
                    "name": "getSubStmt",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSDependentExistsStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MSDependentExistsStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSDependentExistsStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::MSDependentExistsStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::MSDependentExistsStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::MSDependentExistsStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "MSDependentExistsStmt"
        },
        {
            "typename": "clang::CoroutineBodyStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CoroutineBodyStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CoroutineBodyStmt::*)() const",
                    "name": "hasDependentPromiseType",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CoroutineBodyStmt::*)() const",
                    "name": "getBody",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CoroutineBodyStmt::*)() const",
                    "name": "getPromiseDeclStmt",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::VarDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::VarDecl *",
                    "signature": "clang::VarDecl * (clang::CoroutineBodyStmt::*)() const",
                    "name": "getPromiseDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CoroutineBodyStmt::*)() const",
                    "name": "getInitSuspendStmt",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CoroutineBodyStmt::*)() const",
                    "name": "getFinalSuspendStmt",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CoroutineBodyStmt::*)() const",
                    "name": "getExceptionHandler",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CoroutineBodyStmt::*)() const",
                    "name": "getFallthroughHandler",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CoroutineBodyStmt::*)() const",
                    "name": "getAllocate",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CoroutineBodyStmt::*)() const",
                    "name": "getDeallocate",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CoroutineBodyStmt::*)() const",
                    "name": "getReturnValueInit",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CoroutineBodyStmt::*)() const",
                    "name": "getResultDecl",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CoroutineBodyStmt::*)() const",
                    "name": "getReturnStmt",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Stmt *",
                    "signature": "clang::Stmt * (clang::CoroutineBodyStmt::*)() const",
                    "name": "getReturnStmtOnAllocFailure",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "ArrayRef<const clang::Stmt *> () const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "llvm::ArrayRef<const clang::Stmt *>",
                    "signature": "llvm::ArrayRef<const clang::Stmt *> (clang::CoroutineBodyStmt::*)() const",
                    "name": "getParamMoves",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CoroutineBodyStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CoroutineBodyStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CoroutineBodyStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CoroutineBodyStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "CoroutineBodyStmt"
        },
        {
            "typename": "clang::CoreturnStmt",
            "is_disabled": false,
            "deleter": "stmt_deleter<clang::CoreturnStmt>::type",
            "methods": [
                {
                    "policy": null,
                    "parent": "clang::CoreturnStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CoreturnStmt::*)() const",
                    "name": "getKeywordLoc",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoreturnStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CoreturnStmt::*)() const",
                    "name": "getOperand",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::CoreturnStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Expr *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::Expr *",
                    "signature": "clang::Expr * (clang::CoreturnStmt::*)() const",
                    "name": "getPromiseCall",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CoreturnStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "bool () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "bool",
                    "signature": "bool (clang::CoreturnStmt::*)() const",
                    "name": "isImplicit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CoreturnStmt",
                    "args": [
                        [
                            "bool",
                            "value"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "void (bool)",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "void",
                    "signature": "void (clang::CoreturnStmt::*)(bool)",
                    "name": "setIsImplicit",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CoreturnStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CoreturnStmt::*)() const",
                    "name": "getBeginLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CoreturnStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::CoreturnStmt::*)() const",
                    "name": "getEndLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::CoreturnStmt",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::Stmt::child_range ()",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": false,
                    "result_type": "llvm::iterator_range<clang::StmtIterator>",
                    "signature": "llvm::iterator_range<clang::StmtIterator> (clang::CoreturnStmt::*)()",
                    "name": "children",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Stmt"
            ],
            "name": "CoreturnStmt"
        },
        {
            "typename": "clang::FriendDecl",
            "is_disabled": false,
            "deleter": "decl_deleter<clang::FriendDecl>::type",
            "methods": [
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FriendDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::TypeSourceInfo *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TypeSourceInfo *",
                    "signature": "clang::TypeSourceInfo * (clang::FriendDecl::*)() const",
                    "name": "getFriendType",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FriendDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "unsigned int () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "unsigned int",
                    "signature": "unsigned int (clang::FriendDecl::*)() const",
                    "name": "getFriendTypeNumTemplateParameterLists",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FriendDecl",
                    "args": [
                        [
                            "unsigned int",
                            "N"
                        ]
                    ],
                    "is_pure_virtual": false,
                    "typename": "clang::TemplateParameterList *(unsigned int) const",
                    "is_disabled": true,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::TemplateParameterList *",
                    "signature": "clang::TemplateParameterList * (clang::FriendDecl::*)(unsigned int) const",
                    "name": "getFriendTypeTemplateParameterList",
                    "is_overload": false
                },
                {
                    "policy": "py::return_value_policy::reference_internal",
                    "parent": "clang::FriendDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::NamedDecl *() const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::NamedDecl *",
                    "signature": "clang::NamedDecl * (clang::FriendDecl::*)() const",
                    "name": "getFriendDecl",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FriendDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceLocation () const",
                    "is_disabled": false,
                    "is_virtual": false,
                    "is_overridden": false,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceLocation",
                    "signature": "clang::SourceLocation (clang::FriendDecl::*)() const",
                    "name": "getFriendLoc",
                    "is_overload": false
                },
                {
                    "policy": null,
                    "parent": "clang::FriendDecl",
                    "args": [],
                    "is_pure_virtual": false,
                    "typename": "clang::SourceRange () const",
                    "is_disabled": false,
                    "is_virtual": true,
                    "is_overridden": true,
                    "mode": "short",
                    "const": true,
                    "result_type": "clang::SourceRange",
                    "signature": "clang::SourceRange (clang::FriendDecl::*)() const",
                    "name": "getSourceRange",
                    "is_overload": false
                }
            ],
            "node": true,
            "supers": [
                "clang::Decl"
            ],
            "name": "FriendDecl"
        }
    ],
    "clang_version": "clang version 8.0.0 ",
    "prelude": "\n#include <clang/AST/AST.h>\n#include <clang/ASTMatchers/ASTMatchers.h>\n#include <clang/ASTMatchers/ASTMatchFinder.h>\n",
    "enums": [
        {
            "xitems": [
                "GE_None",
                "GE_Missing_stdio",
                "GE_Missing_setjmp",
                "GE_Missing_ucontext"
            ],
            "name": "GetBuiltinTypeError",
            "anon": false,
            "typename": "clang::ASTContext::GetBuiltinTypeError",
            "parent": "clang::ASTContext"
        },
        {
            "xitems": [
                "None",
                "Weak",
                "WeakUnknown",
                "Strong"
            ],
            "name": "InlineVariableDefinitionKind",
            "anon": false,
            "typename": "clang::ASTContext::InlineVariableDefinitionKind",
            "parent": "clang::ASTContext"
        },
        {
            "xitems": [
                "AS_public",
                "AS_protected",
                "AS_private",
                "AS_none"
            ],
            "name": "AccessSpecifier",
            "anon": false,
            "typename": "clang::AccessSpecifier",
            "parent": null
        },
        {
            "xitems": [
                "ATT_ArrayRank",
                "ATT_ArrayExtent"
            ],
            "name": "ArrayTypeTrait",
            "anon": false,
            "typename": "clang::ArrayTypeTrait",
            "parent": null
        },
        {
            "xitems": [
                "AO__c11_atomic_init",
                "AO__c11_atomic_load",
                "AO__c11_atomic_store",
                "AO__c11_atomic_exchange",
                "AO__c11_atomic_compare_exchange_strong",
                "AO__c11_atomic_compare_exchange_weak",
                "AO__c11_atomic_fetch_add",
                "AO__c11_atomic_fetch_sub",
                "AO__c11_atomic_fetch_and",
                "AO__c11_atomic_fetch_or",
                "AO__c11_atomic_fetch_xor",
                "AO__atomic_load",
                "AO__atomic_load_n",
                "AO__atomic_store",
                "AO__atomic_store_n",
                "AO__atomic_exchange",
                "AO__atomic_exchange_n",
                "AO__atomic_compare_exchange",
                "AO__atomic_compare_exchange_n",
                "AO__atomic_fetch_add",
                "AO__atomic_fetch_sub",
                "AO__atomic_fetch_and",
                "AO__atomic_fetch_or",
                "AO__atomic_fetch_xor",
                "AO__atomic_fetch_nand",
                "AO__atomic_add_fetch",
                "AO__atomic_sub_fetch",
                "AO__atomic_and_fetch",
                "AO__atomic_or_fetch",
                "AO__atomic_xor_fetch",
                "AO__atomic_nand_fetch",
                "AO__opencl_atomic_init",
                "AO__opencl_atomic_load",
                "AO__opencl_atomic_store",
                "AO__opencl_atomic_exchange",
                "AO__opencl_atomic_compare_exchange_strong",
                "AO__opencl_atomic_compare_exchange_weak",
                "AO__opencl_atomic_fetch_add",
                "AO__opencl_atomic_fetch_sub",
                "AO__opencl_atomic_fetch_and",
                "AO__opencl_atomic_fetch_or",
                "AO__opencl_atomic_fetch_xor",
                "AO__opencl_atomic_fetch_min",
                "AO__opencl_atomic_fetch_max",
                "AO__atomic_fetch_min",
                "AO__atomic_fetch_max",
                "BI_First"
            ],
            "name": "AtomicOp",
            "anon": false,
            "typename": "clang::AtomicExpr::AtomicOp",
            "parent": "clang::AtomicExpr"
        },
        {
            "xitems": [
                "Auto",
                "DecltypeAuto",
                "GNUAutoType"
            ],
            "name": "AutoTypeKeyword",
            "anon": false,
            "typename": "clang::AutoTypeKeyword",
            "parent": null
        },
        {
            "xitems": [
                "AR_Available",
                "AR_NotYetIntroduced",
                "AR_Deprecated",
                "AR_Unavailable"
            ],
            "name": "AvailabilityResult",
            "anon": false,
            "typename": "clang::AvailabilityResult",
            "parent": null
        },
        {
            "xitems": [
                "BO_PtrMemD",
                "BO_PtrMemI",
                "BO_Mul",
                "BO_Div",
                "BO_Rem",
                "BO_Add",
                "BO_Sub",
                "BO_Shl",
                "BO_Shr",
                "BO_Cmp",
                "BO_LT",
                "BO_GT",
                "BO_LE",
                "BO_GE",
                "BO_EQ",
                "BO_NE",
                "BO_And",
                "BO_Xor",
                "BO_Or",
                "BO_LAnd",
                "BO_LOr",
                "BO_Assign",
                "BO_MulAssign",
                "BO_DivAssign",
                "BO_RemAssign",
                "BO_AddAssign",
                "BO_SubAssign",
                "BO_ShlAssign",
                "BO_ShrAssign",
                "BO_AndAssign",
                "BO_XorAssign",
                "BO_OrAssign",
                "BO_Comma"
            ],
            "name": "BinaryOperatorKind",
            "anon": false,
            "typename": "clang::BinaryOperatorKind",
            "parent": null
        },
        {
            "xitems": [],
            "name": "BuiltinTemplateKind",
            "anon": false,
            "typename": "clang::BuiltinTemplateKind",
            "parent": null
        },
        {
            "xitems": [
                "CK_Complete",
                "CK_NonVirtualBase",
                "CK_VirtualBase",
                "CK_Delegating"
            ],
            "name": "ConstructionKind",
            "anon": false,
            "typename": "clang::CXXConstructExpr::ConstructionKind",
            "parent": "clang::CXXConstructExpr"
        },
        {
            "xitems": [
                "NoInit",
                "CallInit",
                "ListInit"
            ],
            "name": "InitializationStyle",
            "anon": false,
            "typename": "clang::CXXNewExpr::InitializationStyle",
            "parent": "clang::CXXNewExpr"
        },
        {
            "xitems": [
                "NotADL",
                "UsesADL"
            ],
            "name": "ADLCallKind",
            "anon": false,
            "typename": "clang::CallExpr::ADLCallKind",
            "parent": "clang::CallExpr"
        },
        {
            "xitems": [
                "CC_C",
                "CC_X86StdCall",
                "CC_X86FastCall",
                "CC_X86ThisCall",
                "CC_X86VectorCall",
                "CC_X86Pascal",
                "CC_Win64",
                "CC_X86_64SysV",
                "CC_X86RegCall",
                "CC_AAPCS",
                "CC_AAPCS_VFP",
                "CC_IntelOclBicc",
                "CC_SpirFunction",
                "CC_OpenCLKernel",
                "CC_Swift",
                "CC_PreserveMost",
                "CC_PreserveAll",
                "CC_AArch64VectorCall"
            ],
            "name": "CallingConv",
            "anon": false,
            "typename": "clang::CallingConv",
            "parent": null
        },
        {
            "xitems": [
                "CR_Default",
                "CR_ObjCAtFinally",
                "CR_OpenMP"
            ],
            "name": "CapturedRegionKind",
            "anon": false,
            "typename": "clang::CapturedRegionKind",
            "parent": null
        },
        {
            "xitems": [
                "CK_Dependent",
                "CK_BitCast",
                "CK_LValueBitCast",
                "CK_LValueToRValue",
                "CK_NoOp",
                "CK_BaseToDerived",
                "CK_DerivedToBase",
                "CK_UncheckedDerivedToBase",
                "CK_Dynamic",
                "CK_ToUnion",
                "CK_ArrayToPointerDecay",
                "CK_FunctionToPointerDecay",
                "CK_NullToPointer",
                "CK_NullToMemberPointer",
                "CK_BaseToDerivedMemberPointer",
                "CK_DerivedToBaseMemberPointer",
                "CK_MemberPointerToBoolean",
                "CK_ReinterpretMemberPointer",
                "CK_UserDefinedConversion",
                "CK_ConstructorConversion",
                "CK_IntegralToPointer",
                "CK_PointerToIntegral",
                "CK_PointerToBoolean",
                "CK_ToVoid",
                "CK_VectorSplat",
                "CK_IntegralCast",
                "CK_IntegralToBoolean",
                "CK_IntegralToFloating",
                "CK_FixedPointCast",
                "CK_FixedPointToBoolean",
                "CK_FloatingToIntegral",
                "CK_FloatingToBoolean",
                "CK_BooleanToSignedIntegral",
                "CK_FloatingCast",
                "CK_CPointerToObjCPointerCast",
                "CK_BlockPointerToObjCPointerCast",
                "CK_AnyPointerToBlockPointerCast",
                "CK_ObjCObjectLValueCast",
                "CK_FloatingRealToComplex",
                "CK_FloatingComplexToReal",
                "CK_FloatingComplexToBoolean",
                "CK_FloatingComplexCast",
                "CK_FloatingComplexToIntegralComplex",
                "CK_IntegralRealToComplex",
                "CK_IntegralComplexToReal",
                "CK_IntegralComplexToBoolean",
                "CK_IntegralComplexCast",
                "CK_IntegralComplexToFloatingComplex",
                "CK_ARCProduceObject",
                "CK_ARCConsumeObject",
                "CK_ARCReclaimReturnedObject",
                "CK_ARCExtendBlockObject",
                "CK_AtomicToNonAtomic",
                "CK_NonAtomicToAtomic",
                "CK_CopyAndAutoreleaseBlockObject",
                "CK_BuiltinFnToFnPtr",
                "CK_ZeroToOCLOpaqueType",
                "CK_AddressSpaceConversion",
                "CK_IntToOCLSampler"
            ],
            "name": "CastKind",
            "anon": false,
            "typename": "clang::CastKind",
            "parent": null
        },
        {
            "xitems": [
                "Ascii",
                "Wide",
                "UTF8",
                "UTF16",
                "UTF32"
            ],
            "name": "CharacterKind",
            "anon": false,
            "typename": "clang::CharacterLiteral::CharacterKind",
            "parent": "clang::CharacterLiteral"
        },
        {
            "xitems": [
                "FOK_None",
                "FOK_Declared",
                "FOK_Undeclared"
            ],
            "name": "FriendObjectKind",
            "anon": false,
            "typename": "clang::Decl::FriendObjectKind",
            "parent": "clang::Decl"
        },
        {
            "xitems": [
                "AccessSpec",
                "Block",
                "Captured",
                "ClassScopeFunctionSpecialization",
                "Empty",
                "Export",
                "ExternCContext",
                "FileScopeAsm",
                "Friend",
                "FriendTemplate",
                "Import",
                "LinkageSpec",
                "Label",
                "Namespace",
                "NamespaceAlias",
                "ObjCCompatibleAlias",
                "ObjCCategory",
                "ObjCCategoryImpl",
                "ObjCImplementation",
                "firstObjCImpl",
                "lastObjCImpl",
                "ObjCInterface",
                "ObjCProtocol",
                "firstObjCContainer",
                "lastObjCContainer",
                "ObjCMethod",
                "ObjCProperty",
                "BuiltinTemplate",
                "ClassTemplate",
                "FunctionTemplate",
                "TypeAliasTemplate",
                "VarTemplate",
                "firstRedeclarableTemplate",
                "lastRedeclarableTemplate",
                "TemplateTemplateParm",
                "firstTemplate",
                "lastTemplate",
                "Enum",
                "Record",
                "CXXRecord",
                "ClassTemplateSpecialization",
                "ClassTemplatePartialSpecialization",
                "firstClassTemplateSpecialization",
                "lastClassTemplateSpecialization",
                "firstCXXRecord",
                "lastCXXRecord",
                "firstRecord",
                "lastRecord",
                "firstTag",
                "lastTag",
                "TemplateTypeParm",
                "ObjCTypeParam",
                "TypeAlias",
                "Typedef",
                "firstTypedefName",
                "lastTypedefName",
                "UnresolvedUsingTypename",
                "firstType",
                "lastType",
                "Using",
                "UsingDirective",
                "UsingPack",
                "UsingShadow",
                "ConstructorUsingShadow",
                "firstUsingShadow",
                "lastUsingShadow",
                "Binding",
                "Field",
                "ObjCAtDefsField",
                "ObjCIvar",
                "firstField",
                "lastField",
                "Function",
                "CXXDeductionGuide",
                "CXXMethod",
                "CXXConstructor",
                "CXXConversion",
                "CXXDestructor",
                "firstCXXMethod",
                "lastCXXMethod",
                "firstFunction",
                "lastFunction",
                "MSProperty",
                "NonTypeTemplateParm",
                "Var",
                "Decomposition",
                "ImplicitParam",
                "OMPCapturedExpr",
                "ParmVar",
                "VarTemplateSpecialization",
                "VarTemplatePartialSpecialization",
                "firstVarTemplateSpecialization",
                "lastVarTemplateSpecialization",
                "firstVar",
                "lastVar",
                "firstDeclarator",
                "lastDeclarator",
                "EnumConstant",
                "IndirectField",
                "OMPDeclareReduction",
                "UnresolvedUsingValue",
                "firstValue",
                "lastValue",
                "firstNamed",
                "lastNamed",
                "OMPRequires",
                "OMPThreadPrivate",
                "ObjCPropertyImpl",
                "PragmaComment",
                "PragmaDetectMismatch",
                "StaticAssert",
                "TranslationUnit",
                "firstDecl",
                "lastDecl"
            ],
            "name": "Kind",
            "anon": false,
            "typename": "clang::Decl::Kind",
            "parent": "clang::Decl"
        },
        {
            "xitems": [
                "Unowned",
                "Visible",
                "VisibleWhenImported",
                "ModulePrivate"
            ],
            "name": "ModuleOwnershipKind",
            "anon": false,
            "typename": "clang::Decl::ModuleOwnershipKind",
            "parent": "clang::Decl"
        },
        {
            "xitems": [
                "OBJC_TQ_None",
                "OBJC_TQ_In",
                "OBJC_TQ_Inout",
                "OBJC_TQ_Out",
                "OBJC_TQ_Bycopy",
                "OBJC_TQ_Byref",
                "OBJC_TQ_Oneway",
                "OBJC_TQ_CSNullability"
            ],
            "name": "ObjCDeclQualifier",
            "anon": false,
            "typename": "clang::Decl::ObjCDeclQualifier",
            "parent": "clang::Decl"
        },
        {
            "xitems": [
                "Identifier",
                "ObjCZeroArgSelector",
                "ObjCOneArgSelector",
                "CXXConstructorName",
                "CXXDestructorName",
                "CXXConversionFunctionName",
                "CXXOperatorName",
                "CXXDeductionGuideName",
                "CXXLiteralOperatorName",
                "CXXUsingDirective",
                "ObjCMultiArgSelector"
            ],
            "name": "NameKind",
            "anon": false,
            "typename": "clang::DeclarationName::NameKind",
            "parent": "clang::DeclarationName"
        },
        {
            "xitems": [
                "ETK_Struct",
                "ETK_Interface",
                "ETK_Union",
                "ETK_Class",
                "ETK_Enum",
                "ETK_Typename",
                "ETK_None"
            ],
            "name": "ElaboratedTypeKeyword",
            "anon": false,
            "typename": "clang::ElaboratedTypeKeyword",
            "parent": null
        },
        {
            "xitems": [
                "EvaluateForCodeGen",
                "EvaluateForMangling"
            ],
            "name": "ConstExprUsage",
            "anon": false,
            "typename": "clang::Expr::ConstExprUsage",
            "parent": "clang::Expr"
        },
        {
            "xitems": [
                "LV_Valid",
                "LV_NotObjectType",
                "LV_IncompleteVoidType",
                "LV_DuplicateVectorComponents",
                "LV_InvalidExpression",
                "LV_InvalidMessageExpression",
                "LV_MemberFunction",
                "LV_SubObjCPropertySetting",
                "LV_ClassTemporary",
                "LV_ArrayTemporary"
            ],
            "name": "LValueClassification",
            "anon": false,
            "typename": "clang::Expr::LValueClassification",
            "parent": "clang::Expr"
        },
        {
            "xitems": [
                "NPCK_NotNull",
                "NPCK_ZeroExpression",
                "NPCK_ZeroLiteral",
                "NPCK_CXX11_nullptr",
                "NPCK_GNUNull"
            ],
            "name": "NullPointerConstantKind",
            "anon": false,
            "typename": "clang::Expr::NullPointerConstantKind",
            "parent": "clang::Expr"
        },
        {
            "xitems": [
                "NPC_NeverValueDependent",
                "NPC_ValueDependentIsNull",
                "NPC_ValueDependentIsNotNull"
            ],
            "name": "NullPointerConstantValueDependence",
            "anon": false,
            "typename": "clang::Expr::NullPointerConstantValueDependence",
            "parent": "clang::Expr"
        },
        {
            "xitems": [
                "SE_NoSideEffects",
                "SE_AllowUndefinedBehavior",
                "SE_AllowSideEffects"
            ],
            "name": "SideEffectsKind",
            "anon": false,
            "typename": "clang::Expr::SideEffectsKind",
            "parent": "clang::Expr"
        },
        {
            "xitems": [
                "MLV_Valid",
                "MLV_NotObjectType",
                "MLV_IncompleteVoidType",
                "MLV_DuplicateVectorComponents",
                "MLV_InvalidExpression",
                "MLV_LValueCast",
                "MLV_IncompleteType",
                "MLV_ConstQualified",
                "MLV_ConstQualifiedField",
                "MLV_ConstAddrSpace",
                "MLV_ArrayType",
                "MLV_NoSetterProperty",
                "MLV_MemberFunction",
                "MLV_SubObjCPropertySetting",
                "MLV_InvalidMessageExpression",
                "MLV_ClassTemporary",
                "MLV_ArrayTemporary"
            ],
            "name": "isModifiableLvalueResult",
            "anon": false,
            "typename": "clang::Expr::isModifiableLvalueResult",
            "parent": "clang::Expr"
        },
        {
            "xitems": [
                "OK_Ordinary",
                "OK_BitField",
                "OK_VectorComponent",
                "OK_ObjCProperty",
                "OK_ObjCSubscript"
            ],
            "name": "ExprObjectKind",
            "anon": false,
            "typename": "clang::ExprObjectKind",
            "parent": null
        },
        {
            "xitems": [
                "VK_RValue",
                "VK_LValue",
                "VK_XValue"
            ],
            "name": "ExprValueKind",
            "anon": false,
            "typename": "clang::ExprValueKind",
            "parent": null
        },
        {
            "xitems": [
                "ET_IsLValueExpr",
                "ET_IsRValueExpr"
            ],
            "name": "ExpressionTrait",
            "anon": false,
            "typename": "clang::ExpressionTrait",
            "parent": null
        },
        {
            "xitems": [
                "TK_NonTemplate",
                "TK_FunctionTemplate",
                "TK_MemberSpecialization",
                "TK_FunctionTemplateSpecialization",
                "TK_DependentFunctionTemplateSpecialization"
            ],
            "name": "TemplatedKind",
            "anon": false,
            "typename": "clang::FunctionDecl::TemplatedKind",
            "parent": "clang::FunctionDecl"
        },
        {
            "xitems": [
                "GVA_Internal",
                "GVA_AvailableExternally",
                "GVA_DiscardableODR",
                "GVA_StrongExternal",
                "GVA_StrongODR"
            ],
            "name": "GVALinkage",
            "anon": false,
            "typename": "clang::GVALinkage",
            "parent": null
        },
        {
            "xitems": [
                "ObjCSelf",
                "ObjCCmd",
                "CXXThis",
                "CXXVTT",
                "CapturedContext",
                "Other"
            ],
            "name": "ImplicitParamKind",
            "anon": false,
            "typename": "clang::ImplicitParamDecl::ImplicitParamKind",
            "parent": "clang::ImplicitParamDecl"
        },
        {
            "xitems": [
                "ICIS_NoInit",
                "ICIS_CopyInit",
                "ICIS_ListInit"
            ],
            "name": "InClassInitStyle",
            "anon": false,
            "typename": "clang::InClassInitStyle",
            "parent": null
        },
        {
            "xitems": [
                "LCD_None",
                "LCD_ByCopy",
                "LCD_ByRef"
            ],
            "name": "LambdaCaptureDefault",
            "anon": false,
            "typename": "clang::LambdaCaptureDefault",
            "parent": null
        },
        {
            "xitems": [
                "Default",
                "opencl_global",
                "opencl_local",
                "opencl_constant",
                "opencl_private",
                "opencl_generic",
                "cuda_device",
                "cuda_constant",
                "cuda_shared",
                "FirstTargetAddressSpace"
            ],
            "name": "LangAS",
            "anon": false,
            "typename": "clang::LangAS",
            "parent": null
        },
        {
            "xitems": [
                "CLanguageLinkage",
                "CXXLanguageLinkage",
                "NoLanguageLinkage"
            ],
            "name": "LanguageLinkage",
            "anon": false,
            "typename": "clang::LanguageLinkage",
            "parent": null
        },
        {
            "xitems": [
                "NoLinkage",
                "InternalLinkage",
                "UniqueExternalLinkage",
                "VisibleNoLinkage",
                "ModuleInternalLinkage",
                "ModuleLinkage",
                "ExternalLinkage"
            ],
            "name": "Linkage",
            "anon": false,
            "typename": "clang::Linkage",
            "parent": null
        },
        {
            "xitems": [
                "lang_c",
                "lang_cxx"
            ],
            "name": "LanguageIDs",
            "anon": false,
            "typename": "clang::LinkageSpecDecl::LanguageIDs",
            "parent": "clang::LinkageSpecDecl"
        },
        {
            "xitems": [
                "None",
                "Target",
                "CPUSpecific",
                "CPUDispatch"
            ],
            "name": "MultiVersionKind",
            "anon": false,
            "typename": "clang::MultiVersionKind",
            "parent": null
        },
        {
            "xitems": [
                "VisibilityForType",
                "VisibilityForValue"
            ],
            "name": "ExplicitVisibilityKind",
            "anon": false,
            "typename": "clang::NamedDecl::ExplicitVisibilityKind",
            "parent": "clang::NamedDecl"
        },
        {
            "xitems": [
                "SFF_None",
                "SFF_NSString",
                "SFF_CFString"
            ],
            "name": "ObjCStringFormatFamily",
            "anon": false,
            "typename": "clang::ObjCStringFormatFamily",
            "parent": null
        },
        {
            "xitems": [
                "Ordinary",
                "Result",
                "Parameter",
                "Property",
                "Superclass"
            ],
            "name": "ObjCSubstitutionContext",
            "anon": false,
            "typename": "clang::ObjCSubstitutionContext",
            "parent": null
        },
        {
            "xitems": [
                "OO_None",
                "OO_New",
                "OO_Delete",
                "OO_Array_New",
                "OO_Array_Delete",
                "OO_Plus",
                "OO_Minus",
                "OO_Star",
                "OO_Slash",
                "OO_Percent",
                "OO_Caret",
                "OO_Amp",
                "OO_Pipe",
                "OO_Tilde",
                "OO_Exclaim",
                "OO_Equal",
                "OO_Less",
                "OO_Greater",
                "OO_PlusEqual",
                "OO_MinusEqual",
                "OO_StarEqual",
                "OO_SlashEqual",
                "OO_PercentEqual",
                "OO_CaretEqual",
                "OO_AmpEqual",
                "OO_PipeEqual",
                "OO_LessLess",
                "OO_GreaterGreater",
                "OO_LessLessEqual",
                "OO_GreaterGreaterEqual",
                "OO_EqualEqual",
                "OO_ExclaimEqual",
                "OO_LessEqual",
                "OO_GreaterEqual",
                "OO_Spaceship",
                "OO_AmpAmp",
                "OO_PipePipe",
                "OO_PlusPlus",
                "OO_MinusMinus",
                "OO_Comma",
                "OO_ArrowStar",
                "OO_Arrow",
                "OO_Call",
                "OO_Subscript",
                "OO_Conditional",
                "OO_Coawait",
                "NUM_OVERLOADED_OPERATORS"
            ],
            "name": "OverloadedOperatorKind",
            "anon": false,
            "typename": "clang::OverloadedOperatorKind",
            "parent": null
        },
        {
            "xitems": [
                "PCK_Unknown",
                "PCK_Linker",
                "PCK_Lib",
                "PCK_Compiler",
                "PCK_ExeStr",
                "PCK_User"
            ],
            "name": "PragmaMSCommentKind",
            "anon": false,
            "typename": "clang::PragmaMSCommentKind",
            "parent": null
        },
        {
            "xitems": [
                "Func",
                "Function",
                "LFunction",
                "FuncDName",
                "FuncSig",
                "LFuncSig",
                "PrettyFunction",
                "PrettyFunctionNoVirtual"
            ],
            "name": "IdentKind",
            "anon": false,
            "typename": "clang::PredefinedExpr::IdentKind",
            "parent": "clang::PredefinedExpr"
        },
        {
            "xitems": [
                "DK_none",
                "DK_cxx_destructor",
                "DK_objc_strong_lifetime",
                "DK_objc_weak_lifetime",
                "DK_nontrivial_c_struct"
            ],
            "name": "DestructionKind",
            "anon": false,
            "typename": "clang::QualType::DestructionKind",
            "parent": "clang::QualType"
        },
        {
            "xitems": [
                "PCK_Trivial",
                "PCK_VolatileTrivial",
                "PCK_ARCStrong",
                "PCK_ARCWeak",
                "PCK_Struct"
            ],
            "name": "PrimitiveCopyKind",
            "anon": false,
            "typename": "clang::QualType::PrimitiveCopyKind",
            "parent": "clang::QualType"
        },
        {
            "xitems": [
                "PDIK_Trivial",
                "PDIK_ARCStrong",
                "PDIK_ARCWeak",
                "PDIK_Struct"
            ],
            "name": "PrimitiveDefaultInitializeKind",
            "anon": false,
            "typename": "clang::QualType::PrimitiveDefaultInitializeKind",
            "parent": "clang::QualType"
        },
        {
            "xitems": [
                "GCNone",
                "Weak",
                "Strong"
            ],
            "name": "GC",
            "anon": false,
            "typename": "clang::Qualifiers::GC",
            "parent": "clang::Qualifiers"
        },
        {
            "xitems": [
                "OCL_None",
                "OCL_ExplicitNone",
                "OCL_Strong",
                "OCL_Weak",
                "OCL_Autoreleasing"
            ],
            "name": "ObjCLifetime",
            "anon": false,
            "typename": "clang::Qualifiers::ObjCLifetime",
            "parent": "clang::Qualifiers"
        },
        {
            "xitems": [
                "APK_CanPassInRegs",
                "APK_CannotPassInRegs",
                "APK_CanNeverPassInRegs"
            ],
            "name": "ArgPassingKind",
            "anon": false,
            "typename": "clang::RecordDecl::ArgPassingKind",
            "parent": "clang::RecordDecl"
        },
        {
            "xitems": [
                "RQ_None",
                "RQ_LValue",
                "RQ_RValue"
            ],
            "name": "RefQualifierKind",
            "anon": false,
            "typename": "clang::RefQualifierKind",
            "parent": null
        },
        {
            "xitems": [
                "Unowned"
            ],
            "name": "UnownedTag",
            "anon": false,
            "typename": "clang::SourceManager::UnownedTag",
            "parent": "clang::SourceManager"
        },
        {
            "xitems": [
                "NoStmtClass",
                "GCCAsmStmtClass",
                "MSAsmStmtClass",
                "firstAsmStmtConstant",
                "lastAsmStmtConstant",
                "AttributedStmtClass",
                "BreakStmtClass",
                "CXXCatchStmtClass",
                "CXXForRangeStmtClass",
                "CXXTryStmtClass",
                "CapturedStmtClass",
                "CompoundStmtClass",
                "ContinueStmtClass",
                "CoreturnStmtClass",
                "CoroutineBodyStmtClass",
                "DeclStmtClass",
                "DoStmtClass",
                "BinaryConditionalOperatorClass",
                "ConditionalOperatorClass",
                "firstAbstractConditionalOperatorConstant",
                "lastAbstractConditionalOperatorConstant",
                "AddrLabelExprClass",
                "ArrayInitIndexExprClass",
                "ArrayInitLoopExprClass",
                "ArraySubscriptExprClass",
                "ArrayTypeTraitExprClass",
                "AsTypeExprClass",
                "AtomicExprClass",
                "BinaryOperatorClass",
                "CompoundAssignOperatorClass",
                "firstBinaryOperatorConstant",
                "lastBinaryOperatorConstant",
                "BlockExprClass",
                "CXXBindTemporaryExprClass",
                "CXXBoolLiteralExprClass",
                "CXXConstructExprClass",
                "CXXTemporaryObjectExprClass",
                "firstCXXConstructExprConstant",
                "lastCXXConstructExprConstant",
                "CXXDefaultArgExprClass",
                "CXXDefaultInitExprClass",
                "CXXDeleteExprClass",
                "CXXDependentScopeMemberExprClass",
                "CXXFoldExprClass",
                "CXXInheritedCtorInitExprClass",
                "CXXNewExprClass",
                "CXXNoexceptExprClass",
                "CXXNullPtrLiteralExprClass",
                "CXXPseudoDestructorExprClass",
                "CXXScalarValueInitExprClass",
                "CXXStdInitializerListExprClass",
                "CXXThisExprClass",
                "CXXThrowExprClass",
                "CXXTypeidExprClass",
                "CXXUnresolvedConstructExprClass",
                "CXXUuidofExprClass",
                "CallExprClass",
                "CUDAKernelCallExprClass",
                "CXXMemberCallExprClass",
                "CXXOperatorCallExprClass",
                "UserDefinedLiteralClass",
                "firstCallExprConstant",
                "lastCallExprConstant",
                "CStyleCastExprClass",
                "CXXFunctionalCastExprClass",
                "CXXConstCastExprClass",
                "CXXDynamicCastExprClass",
                "CXXReinterpretCastExprClass",
                "CXXStaticCastExprClass",
                "firstCXXNamedCastExprConstant",
                "lastCXXNamedCastExprConstant",
                "ObjCBridgedCastExprClass",
                "firstExplicitCastExprConstant",
                "lastExplicitCastExprConstant",
                "ImplicitCastExprClass",
                "firstCastExprConstant",
                "lastCastExprConstant",
                "CharacterLiteralClass",
                "ChooseExprClass",
                "CompoundLiteralExprClass",
                "ConvertVectorExprClass",
                "CoawaitExprClass",
                "CoyieldExprClass",
                "firstCoroutineSuspendExprConstant",
                "lastCoroutineSuspendExprConstant",
                "DeclRefExprClass",
                "DependentCoawaitExprClass",
                "DependentScopeDeclRefExprClass",
                "DesignatedInitExprClass",
                "DesignatedInitUpdateExprClass",
                "ExpressionTraitExprClass",
                "ExtVectorElementExprClass",
                "FixedPointLiteralClass",
                "FloatingLiteralClass",
                "ConstantExprClass",
                "ExprWithCleanupsClass",
                "firstFullExprConstant",
                "lastFullExprConstant",
                "FunctionParmPackExprClass",
                "GNUNullExprClass",
                "GenericSelectionExprClass",
                "ImaginaryLiteralClass",
                "ImplicitValueInitExprClass",
                "InitListExprClass",
                "IntegerLiteralClass",
                "LambdaExprClass",
                "MSPropertyRefExprClass",
                "MSPropertySubscriptExprClass",
                "MaterializeTemporaryExprClass",
                "MemberExprClass",
                "NoInitExprClass",
                "OMPArraySectionExprClass",
                "ObjCArrayLiteralClass",
                "ObjCAvailabilityCheckExprClass",
                "ObjCBoolLiteralExprClass",
                "ObjCBoxedExprClass",
                "ObjCDictionaryLiteralClass",
                "ObjCEncodeExprClass",
                "ObjCIndirectCopyRestoreExprClass",
                "ObjCIsaExprClass",
                "ObjCIvarRefExprClass",
                "ObjCMessageExprClass",
                "ObjCPropertyRefExprClass",
                "ObjCProtocolExprClass",
                "ObjCSelectorExprClass",
                "ObjCStringLiteralClass",
                "ObjCSubscriptRefExprClass",
                "OffsetOfExprClass",
                "OpaqueValueExprClass",
                "UnresolvedLookupExprClass",
                "UnresolvedMemberExprClass",
                "firstOverloadExprConstant",
                "lastOverloadExprConstant",
                "PackExpansionExprClass",
                "ParenExprClass",
                "ParenListExprClass",
                "PredefinedExprClass",
                "PseudoObjectExprClass",
                "ShuffleVectorExprClass",
                "SizeOfPackExprClass",
                "StmtExprClass",
                "StringLiteralClass",
                "SubstNonTypeTemplateParmExprClass",
                "SubstNonTypeTemplateParmPackExprClass",
                "TypeTraitExprClass",
                "TypoExprClass",
                "UnaryExprOrTypeTraitExprClass",
                "UnaryOperatorClass",
                "VAArgExprClass",
                "firstExprConstant",
                "lastExprConstant",
                "ForStmtClass",
                "GotoStmtClass",
                "IfStmtClass",
                "IndirectGotoStmtClass",
                "LabelStmtClass",
                "MSDependentExistsStmtClass",
                "NullStmtClass",
                "OMPAtomicDirectiveClass",
                "OMPBarrierDirectiveClass",
                "OMPCancelDirectiveClass",
                "OMPCancellationPointDirectiveClass",
                "OMPCriticalDirectiveClass",
                "OMPFlushDirectiveClass",
                "OMPDistributeDirectiveClass",
                "OMPDistributeParallelForDirectiveClass",
                "OMPDistributeParallelForSimdDirectiveClass",
                "OMPDistributeSimdDirectiveClass",
                "OMPForDirectiveClass",
                "OMPForSimdDirectiveClass",
                "OMPParallelForDirectiveClass",
                "OMPParallelForSimdDirectiveClass",
                "OMPSimdDirectiveClass",
                "OMPTargetParallelForSimdDirectiveClass",
                "OMPTargetSimdDirectiveClass",
                "OMPTargetTeamsDistributeDirectiveClass",
                "OMPTargetTeamsDistributeParallelForDirectiveClass",
                "OMPTargetTeamsDistributeParallelForSimdDirectiveClass",
                "OMPTargetTeamsDistributeSimdDirectiveClass",
                "OMPTaskLoopDirectiveClass",
                "OMPTaskLoopSimdDirectiveClass",
                "OMPTeamsDistributeDirectiveClass",
                "OMPTeamsDistributeParallelForDirectiveClass",
                "OMPTeamsDistributeParallelForSimdDirectiveClass",
                "OMPTeamsDistributeSimdDirectiveClass",
                "firstOMPLoopDirectiveConstant",
                "lastOMPLoopDirectiveConstant",
                "OMPMasterDirectiveClass",
                "OMPOrderedDirectiveClass",
                "OMPParallelDirectiveClass",
                "OMPParallelSectionsDirectiveClass",
                "OMPSectionDirectiveClass",
                "OMPSectionsDirectiveClass",
                "OMPSingleDirectiveClass",
                "OMPTargetDataDirectiveClass",
                "OMPTargetDirectiveClass",
                "OMPTargetEnterDataDirectiveClass",
                "OMPTargetExitDataDirectiveClass",
                "OMPTargetParallelDirectiveClass",
                "OMPTargetParallelForDirectiveClass",
                "OMPTargetTeamsDirectiveClass",
                "OMPTargetUpdateDirectiveClass",
                "OMPTaskDirectiveClass",
                "OMPTaskgroupDirectiveClass",
                "OMPTaskwaitDirectiveClass",
                "OMPTaskyieldDirectiveClass",
                "OMPTeamsDirectiveClass",
                "firstOMPExecutableDirectiveConstant",
                "lastOMPExecutableDirectiveConstant",
                "ObjCAtCatchStmtClass",
                "ObjCAtFinallyStmtClass",
                "ObjCAtSynchronizedStmtClass",
                "ObjCAtThrowStmtClass",
                "ObjCAtTryStmtClass",
                "ObjCAutoreleasePoolStmtClass",
                "ObjCForCollectionStmtClass",
                "ReturnStmtClass",
                "SEHExceptStmtClass",
                "SEHFinallyStmtClass",
                "SEHLeaveStmtClass",
                "SEHTryStmtClass",
                "CaseStmtClass",
                "DefaultStmtClass",
                "firstSwitchCaseConstant",
                "lastSwitchCaseConstant",
                "SwitchStmtClass",
                "WhileStmtClass",
                "firstStmtConstant",
                "lastStmtConstant"
            ],
            "name": "StmtClass",
            "anon": false,
            "typename": "clang::Stmt::StmtClass",
            "parent": "clang::Stmt"
        },
        {
            "xitems": [
                "SC_None",
                "SC_Extern",
                "SC_Static",
                "SC_PrivateExtern",
                "SC_Auto",
                "SC_Register"
            ],
            "name": "StorageClass",
            "anon": false,
            "typename": "clang::StorageClass",
            "parent": null
        },
        {
            "xitems": [
                "SD_FullExpression",
                "SD_Automatic",
                "SD_Thread",
                "SD_Static",
                "SD_Dynamic"
            ],
            "name": "StorageDuration",
            "anon": false,
            "typename": "clang::StorageDuration",
            "parent": null
        },
        {
            "xitems": [
                "Ascii",
                "Wide",
                "UTF8",
                "UTF16",
                "UTF32"
            ],
            "name": "StringKind",
            "anon": false,
            "typename": "clang::StringLiteral::StringKind",
            "parent": "clang::StringLiteral"
        },
        {
            "xitems": [
                "TTK_Struct",
                "TTK_Interface",
                "TTK_Union",
                "TTK_Class",
                "TTK_Enum"
            ],
            "name": "TagTypeKind",
            "anon": false,
            "typename": "clang::TagTypeKind",
            "parent": null
        },
        {
            "xitems": [
                "TSK_Undeclared",
                "TSK_ImplicitInstantiation",
                "TSK_ExplicitSpecialization",
                "TSK_ExplicitInstantiationDeclaration",
                "TSK_ExplicitInstantiationDefinition"
            ],
            "name": "TemplateSpecializationKind",
            "anon": false,
            "typename": "clang::TemplateSpecializationKind",
            "parent": null
        },
        {
            "xitems": [
                "TSCS_unspecified",
                "TSCS___thread",
                "TSCS_thread_local",
                "TSCS__Thread_local"
            ],
            "name": "ThreadStorageClassSpecifier",
            "anon": false,
            "typename": "clang::ThreadStorageClassSpecifier",
            "parent": null
        },
        {
            "xitems": [
                "STK_CPointer",
                "STK_BlockPointer",
                "STK_ObjCObjectPointer",
                "STK_MemberPointer",
                "STK_Bool",
                "STK_Integral",
                "STK_Floating",
                "STK_IntegralComplex",
                "STK_FloatingComplex",
                "STK_FixedPoint"
            ],
            "name": "ScalarTypeKind",
            "anon": false,
            "typename": "clang::Type::ScalarTypeKind",
            "parent": "clang::Type"
        },
        {
            "xitems": [
                "Builtin",
                "Complex",
                "Pointer",
                "BlockPointer",
                "LValueReference",
                "RValueReference",
                "MemberPointer",
                "ConstantArray",
                "IncompleteArray",
                "VariableArray",
                "DependentSizedArray",
                "DependentSizedExtVector",
                "DependentAddressSpace",
                "Vector",
                "DependentVector",
                "ExtVector",
                "FunctionProto",
                "FunctionNoProto",
                "UnresolvedUsing",
                "Paren",
                "Typedef",
                "Adjusted",
                "Decayed",
                "TypeOfExpr",
                "TypeOf",
                "Decltype",
                "UnaryTransform",
                "Record",
                "Enum",
                "Elaborated",
                "Attributed",
                "TemplateTypeParm",
                "SubstTemplateTypeParm",
                "SubstTemplateTypeParmPack",
                "TemplateSpecialization",
                "Auto",
                "DeducedTemplateSpecialization",
                "InjectedClassName",
                "DependentName",
                "DependentTemplateSpecialization",
                "PackExpansion",
                "ObjCTypeParam",
                "ObjCObject",
                "ObjCInterface",
                "ObjCObjectPointer",
                "Pipe",
                "Atomic",
                "TypeLast",
                "TagFirst",
                "TagLast"
            ],
            "name": "TypeClass",
            "anon": false,
            "typename": "clang::Type::TypeClass",
            "parent": "clang::Type"
        },
        {
            "xitems": [
                "UTT_HasNothrowAssign",
                "UTT_HasNothrowMoveAssign",
                "UTT_HasNothrowCopy",
                "UTT_HasNothrowConstructor",
                "UTT_HasTrivialAssign",
                "UTT_HasTrivialMoveAssign",
                "UTT_HasTrivialCopy",
                "UTT_HasTrivialDefaultConstructor",
                "UTT_HasTrivialMoveConstructor",
                "UTT_HasTrivialDestructor",
                "UTT_HasVirtualDestructor",
                "UTT_IsAbstract",
                "UTT_IsAggregate",
                "UTT_IsArithmetic",
                "UTT_IsArray",
                "UTT_IsClass",
                "UTT_IsCompleteType",
                "UTT_IsCompound",
                "UTT_IsConst",
                "UTT_IsDestructible",
                "UTT_IsEmpty",
                "UTT_IsEnum",
                "UTT_IsFinal",
                "UTT_IsFloatingPoint",
                "UTT_IsFunction",
                "UTT_IsFundamental",
                "UTT_IsIntegral",
                "UTT_IsInterfaceClass",
                "UTT_IsLiteral",
                "UTT_IsLvalueReference",
                "UTT_IsMemberFunctionPointer",
                "UTT_IsMemberObjectPointer",
                "UTT_IsMemberPointer",
                "UTT_IsNothrowDestructible",
                "UTT_IsObject",
                "UTT_IsPOD",
                "UTT_IsPointer",
                "UTT_IsPolymorphic",
                "UTT_IsReference",
                "UTT_IsRvalueReference",
                "UTT_IsScalar",
                "UTT_IsSealed",
                "UTT_IsSigned",
                "UTT_IsStandardLayout",
                "UTT_IsTrivial",
                "UTT_IsTriviallyCopyable",
                "UTT_IsTriviallyDestructible",
                "UTT_IsUnion",
                "UTT_IsUnsigned",
                "UTT_IsVoid",
                "UTT_IsVolatile",
                "UTT_HasUniqueObjectRepresentations",
                "UTT_Last",
                "BTT_IsBaseOf",
                "BTT_IsConvertible",
                "BTT_IsConvertibleTo",
                "BTT_IsSame",
                "BTT_TypeCompatible",
                "BTT_IsAssignable",
                "BTT_IsNothrowAssignable",
                "BTT_IsTriviallyAssignable",
                "BTT_ReferenceBindsToTemporary",
                "BTT_Last",
                "TT_IsConstructible",
                "TT_IsNothrowConstructible",
                "TT_IsTriviallyConstructible"
            ],
            "name": "TypeTrait",
            "anon": false,
            "typename": "clang::TypeTrait",
            "parent": null
        },
        {
            "xitems": [
                "UETT_SizeOf",
                "UETT_AlignOf",
                "UETT_VecStep",
                "UETT_OpenMPRequiredSimdAlign",
                "UETT_PreferredAlignOf"
            ],
            "name": "UnaryExprOrTypeTrait",
            "anon": false,
            "typename": "clang::UnaryExprOrTypeTrait",
            "parent": null
        },
        {
            "xitems": [
                "UO_PostInc",
                "UO_PostDec",
                "UO_PreInc",
                "UO_PreDec",
                "UO_AddrOf",
                "UO_Deref",
                "UO_Plus",
                "UO_Minus",
                "UO_Not",
                "UO_LNot",
                "UO_Real",
                "UO_Imag",
                "UO_Extension",
                "UO_Coawait"
            ],
            "name": "UnaryOperatorKind",
            "anon": false,
            "typename": "clang::UnaryOperatorKind",
            "parent": null
        },
        {
            "xitems": [
                "LOK_Raw",
                "LOK_Template",
                "LOK_Integer",
                "LOK_Floating",
                "LOK_String",
                "LOK_Character"
            ],
            "name": "LiteralOperatorKind",
            "anon": false,
            "typename": "clang::UserDefinedLiteral::LiteralOperatorKind",
            "parent": "clang::UserDefinedLiteral"
        },
        {
            "xitems": [
                "DeclarationOnly",
                "TentativeDefinition",
                "Definition"
            ],
            "name": "DefinitionKind",
            "anon": false,
            "typename": "clang::VarDecl::DefinitionKind",
            "parent": "clang::VarDecl"
        },
        {
            "xitems": [
                "CInit",
                "CallInit",
                "ListInit"
            ],
            "name": "InitializationStyle",
            "anon": false,
            "typename": "clang::VarDecl::InitializationStyle",
            "parent": "clang::VarDecl"
        },
        {
            "xitems": [
                "TLS_None",
                "TLS_Static",
                "TLS_Dynamic"
            ],
            "name": "TLSKind",
            "anon": false,
            "typename": "clang::VarDecl::TLSKind",
            "parent": "clang::VarDecl"
        },
        {
            "xitems": [
                "HiddenVisibility",
                "ProtectedVisibility",
                "DefaultVisibility"
            ],
            "name": "Visibility",
            "anon": false,
            "typename": "clang::Visibility",
            "parent": null
        }
    ]
}